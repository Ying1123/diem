(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)

(declare-sort Element 0)
(declare-fun a_345 () (Seq Element))
(declare-fun a_347 () (Seq Element))
(declare-fun a_349 () (Seq Element))
(declare-fun a_351 () (Seq Element))
(declare-fun a_353 () (Seq Element))
(declare-fun a_355 () (Seq Element))
(declare-fun a_357 () (Seq Element))
(declare-fun a_359 () (Seq Element))
(declare-fun a_360 () (Seq Element))
(declare-fun a_361 () (Seq Element))
(declare-fun a_363 () (Seq Element))
(declare-fun a_365 () (Seq Element))
(declare-fun a_367 () (Seq Element))
(declare-fun a_369 () (Seq Element))
(declare-fun e_344 () Element)
(declare-fun e_346 () Element)
(declare-fun e_348 () Element)
(declare-fun e_350 () Element)
(declare-fun e_352 () Element)
(declare-fun e_354 () Element)
(declare-fun e_356 () Element)
(declare-fun e_358 () Element)
(declare-fun e_362 () Element)
(declare-fun e_364 () Element)
(declare-fun e_366 () Element)
(declare-fun e_368 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(assert (= a_345 (seq.update a1 i1 (seq.unit e_344))))
(assert (= a_347 (seq.update a_345 i3 (seq.unit e_346))))
(assert (= a_349 (seq.update a_347 i0 (seq.unit e_348))))
(assert (= a_351 (seq.update a_349 i2 (seq.unit e_350))))
(assert (= a_353 (seq.update a_351 i2 (seq.unit e_352))))
(assert (= a_355 (seq.update a_353 i1 (seq.unit e_354))))
(assert (= a_357 (seq.update a_355 i2 (seq.unit e_356))))
(assert (= a_359 (seq.update a_357 i0 (seq.unit e_358))))
(assert (= a_360 (seq.update a_347 i2 (seq.unit e_350))))
(assert (= a_361 (seq.update a_360 i0 (seq.unit e_348))))
(assert (= a_363 (seq.update a_361 i1 (seq.unit e_362))))
(assert (= a_365 (seq.update a_363 i2 (seq.unit e_364))))
(assert (= a_367 (seq.update a_365 i3 (seq.unit e_366))))
(assert (= a_369 (seq.update a_367 i0 (seq.unit e_368))))
(assert (= e_344 (seq.nth a1 i3)))
(assert (= e_346 (seq.nth a1 i1)))
(assert (= e_348 (seq.nth a_347 i2)))
(assert (= e_350 (seq.nth a_347 i0)))
(assert (= e_352 (seq.nth a_351 i1)))
(assert (= e_354 (seq.nth a_351 i2)))
(assert (= e_356 (seq.nth a_355 i0)))
(assert (= e_358 (seq.nth a_355 i2)))
(assert (= e_362 (seq.nth a_361 i2)))
(assert (= e_364 (seq.nth a_361 i1)))
(assert (= e_366 (seq.nth a_365 i0)))
(assert (= e_368 (seq.nth a_365 i3)))
(assert (not (= a_359 a_369)))
(check-sat)
(exit)
