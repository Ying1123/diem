(set-info :smt-lib-version 2.6)
(set-logic QF_AX)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-sort Index 0)
(declare-sort Element 0)
(declare-fun a_119 () (Array Index Element))
(declare-fun a_121 () (Array Index Element))
(declare-fun a_123 () (Array Index Element))
(declare-fun a_125 () (Array Index Element))
(declare-fun a_127 () (Array Index Element))
(declare-fun a_129 () (Array Index Element))
(declare-fun a_131 () (Array Index Element))
(declare-fun a_133 () (Array Index Element))
(declare-fun a_135 () (Array Index Element))
(declare-fun a_137 () (Array Index Element))
(declare-fun a_139 () (Array Index Element))
(declare-fun a_141 () (Array Index Element))
(declare-fun a_143 () (Array Index Element))
(declare-fun a_145 () (Array Index Element))
(declare-fun a_147 () (Array Index Element))
(declare-fun a_149 () (Array Index Element))
(declare-fun a_150 () (Array Index Element))
(declare-fun a_151 () (Array Index Element))
(declare-fun a_153 () (Array Index Element))
(declare-fun a_155 () (Array Index Element))
(declare-fun a_157 () (Array Index Element))
(declare-fun a_159 () (Array Index Element))
(declare-fun a_161 () (Array Index Element))
(declare-fun a_163 () (Array Index Element))
(declare-fun a_165 () (Array Index Element))
(declare-fun a_167 () (Array Index Element))
(declare-fun a_169 () (Array Index Element))
(declare-fun a_171 () (Array Index Element))
(declare-fun a_173 () (Array Index Element))
(declare-fun a_175 () (Array Index Element))
(declare-fun a_177 () (Array Index Element))
(declare-fun a_179 () (Array Index Element))
(declare-fun e_118 () Element)
(declare-fun e_120 () Element)
(declare-fun e_122 () Element)
(declare-fun e_124 () Element)
(declare-fun e_126 () Element)
(declare-fun e_128 () Element)
(declare-fun e_130 () Element)
(declare-fun e_132 () Element)
(declare-fun e_134 () Element)
(declare-fun e_136 () Element)
(declare-fun e_138 () Element)
(declare-fun e_140 () Element)
(declare-fun e_142 () Element)
(declare-fun e_144 () Element)
(declare-fun e_146 () Element)
(declare-fun e_148 () Element)
(declare-fun e_152 () Element)
(declare-fun e_154 () Element)
(declare-fun e_156 () Element)
(declare-fun e_158 () Element)
(declare-fun e_160 () Element)
(declare-fun e_162 () Element)
(declare-fun e_164 () Element)
(declare-fun e_166 () Element)
(declare-fun e_168 () Element)
(declare-fun e_170 () Element)
(declare-fun e_172 () Element)
(declare-fun e_174 () Element)
(declare-fun e_176 () Element)
(declare-fun e_178 () Element)
(declare-fun a1 () (Array Index Element))
(declare-fun i0 () Index)
(declare-fun i1 () Index)
(declare-fun i2 () Index)
(declare-fun i3 () Index)
(declare-fun i4 () Index)
(declare-fun i5 () Index)
(declare-fun i6 () Index)
(declare-fun i7 () Index)
(assert (= a_119 (store a1 i3 e_118)))
(assert (= a_121 (store a_119 i4 e_120)))
(assert (= a_123 (store a_121 i4 e_122)))
(assert (= a_125 (store a_123 i0 e_124)))
(assert (= a_127 (store a_125 i5 e_126)))
(assert (= a_129 (store a_127 i2 e_128)))
(assert (= a_131 (store a_129 i1 e_130)))
(assert (= a_133 (store a_131 i5 e_132)))
(assert (= a_135 (store a_133 i6 e_134)))
(assert (= a_137 (store a_135 i5 e_136)))
(assert (= a_139 (store a_137 i0 e_138)))
(assert (= a_141 (store a_139 i7 e_140)))
(assert (= a_143 (store a_141 i4 e_142)))
(assert (= a_145 (store a_143 i0 e_144)))
(assert (= a_147 (store a_145 i7 e_146)))
(assert (= a_149 (store a_147 i6 e_148)))
(assert (= a_150 (store a1 i4 e_120)))
(assert (= a_151 (store a_150 i3 e_118)))
(assert (= a_153 (store a_151 i0 e_152)))
(assert (= a_155 (store a_153 i4 e_154)))
(assert (= a_157 (store a_155 i2 e_156)))
(assert (= a_159 (store a_157 i5 e_158)))
(assert (= a_161 (store a_159 i1 e_160)))
(assert (= a_163 (store a_161 i5 e_162)))
(assert (= a_165 (store a_163 i6 e_164)))
(assert (= a_167 (store a_165 i5 e_166)))
(assert (= a_169 (store a_167 i7 e_168)))
(assert (= a_171 (store a_169 i0 e_170)))
(assert (= a_173 (store a_171 i4 e_172)))
(assert (= a_175 (store a_173 i0 e_174)))
(assert (= a_177 (store a_175 i7 e_176)))
(assert (= a_179 (store a_177 i6 e_178)))
(assert (= e_118 (select a1 i4)))
(assert (= e_120 (select a1 i3)))
(assert (= e_122 (select a_121 i0)))
(assert (= e_124 (select a_121 i4)))
(assert (= e_126 (select a_125 i2)))
(assert (= e_128 (select a_125 i5)))
(assert (= e_130 (select a_129 i5)))
(assert (= e_132 (select a_129 i1)))
(assert (= e_134 (select a_133 i5)))
(assert (= e_136 (select a_133 i6)))
(assert (= e_138 (select a_137 i7)))
(assert (= e_140 (select a_137 i0)))
(assert (= e_142 (select a_141 i0)))
(assert (= e_144 (select a_141 i4)))
(assert (= e_146 (select a_145 i6)))
(assert (= e_148 (select a_145 i7)))
(assert (= e_152 (select a_151 i4)))
(assert (= e_154 (select a_151 i0)))
(assert (= e_156 (select a_155 i5)))
(assert (= e_158 (select a_155 i2)))
(assert (= e_160 (select a_159 i5)))
(assert (= e_162 (select a_159 i1)))
(assert (= e_164 (select a_163 i5)))
(assert (= e_166 (select a_163 i6)))
(assert (= e_168 (select a_167 i0)))
(assert (= e_170 (select a_167 i7)))
(assert (= e_172 (select a_171 i0)))
(assert (= e_174 (select a_171 i4)))
(assert (= e_176 (select a_175 i6)))
(assert (= e_178 (select a_175 i7)))
(assert (not (= a_149 a_179)))
(check-sat)
(exit)
