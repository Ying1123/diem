(set-info :smt-lib-version 2.6)
(set-logic QF_AX)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-sort Index 0)
(declare-sort Element 0)
(declare-fun a_135 () (Array Index Element))
(declare-fun a_137 () (Array Index Element))
(declare-fun a_139 () (Array Index Element))
(declare-fun a_141 () (Array Index Element))
(declare-fun a_143 () (Array Index Element))
(declare-fun a_145 () (Array Index Element))
(declare-fun a_147 () (Array Index Element))
(declare-fun a_149 () (Array Index Element))
(declare-fun a_151 () (Array Index Element))
(declare-fun a_153 () (Array Index Element))
(declare-fun a_155 () (Array Index Element))
(declare-fun a_157 () (Array Index Element))
(declare-fun a_159 () (Array Index Element))
(declare-fun a_160 () (Array Index Element))
(declare-fun a_162 () (Array Index Element))
(declare-fun a_164 () (Array Index Element))
(declare-fun a_166 () (Array Index Element))
(declare-fun a_168 () (Array Index Element))
(declare-fun a_169 () (Array Index Element))
(declare-fun a_170 () (Array Index Element))
(declare-fun a_172 () (Array Index Element))
(declare-fun a_174 () (Array Index Element))
(declare-fun a_176 () (Array Index Element))
(declare-fun a_178 () (Array Index Element))
(declare-fun a_180 () (Array Index Element))
(declare-fun a_182 () (Array Index Element))
(declare-fun a_184 () (Array Index Element))
(declare-fun a_186 () (Array Index Element))
(declare-fun a_188 () (Array Index Element))
(declare-fun a_189 () (Array Index Element))
(declare-fun a_191 () (Array Index Element))
(declare-fun a_193 () (Array Index Element))
(declare-fun a_195 () (Array Index Element))
(declare-fun a_197 () (Array Index Element))
(declare-fun e_134 () Element)
(declare-fun e_136 () Element)
(declare-fun e_138 () Element)
(declare-fun e_140 () Element)
(declare-fun e_142 () Element)
(declare-fun e_144 () Element)
(declare-fun e_146 () Element)
(declare-fun e_148 () Element)
(declare-fun e_150 () Element)
(declare-fun e_152 () Element)
(declare-fun e_154 () Element)
(declare-fun e_156 () Element)
(declare-fun e_158 () Element)
(declare-fun e_161 () Element)
(declare-fun e_163 () Element)
(declare-fun e_165 () Element)
(declare-fun e_167 () Element)
(declare-fun e_171 () Element)
(declare-fun e_173 () Element)
(declare-fun e_175 () Element)
(declare-fun e_177 () Element)
(declare-fun e_179 () Element)
(declare-fun e_181 () Element)
(declare-fun e_183 () Element)
(declare-fun e_185 () Element)
(declare-fun e_187 () Element)
(declare-fun e_190 () Element)
(declare-fun e_192 () Element)
(declare-fun e_194 () Element)
(declare-fun e_196 () Element)
(declare-fun a1 () (Array Index Element))
(declare-fun i0 () Index)
(declare-fun i2 () Index)
(declare-fun i3 () Index)
(declare-fun i4 () Index)
(declare-fun i5 () Index)
(declare-fun i6 () Index)
(declare-fun i7 () Index)
(declare-fun i8 () Index)
(assert (= a_135 (store a1 i6 e_134)))
(assert (= a_137 (store a_135 i7 e_136)))
(assert (= a_139 (store a_137 i4 e_138)))
(assert (= a_141 (store a_139 i6 e_140)))
(assert (= a_143 (store a_141 i0 e_142)))
(assert (= a_145 (store a_143 i5 e_144)))
(assert (= a_147 (store a_145 i8 e_146)))
(assert (= a_149 (store a_147 i5 e_148)))
(assert (= a_151 (store a_149 i4 e_150)))
(assert (= a_153 (store a_151 i2 e_152)))
(assert (= a_155 (store a_153 i7 e_154)))
(assert (= a_157 (store a_155 i3 e_156)))
(assert (= a_159 (store a_157 i0 e_158)))
(assert (= a_160 (store a_159 i0 e_158)))
(assert (= a_162 (store a_160 i2 e_161)))
(assert (= a_164 (store a_162 i0 e_163)))
(assert (= a_166 (store a_164 i7 e_165)))
(assert (= a_168 (store a_166 i5 e_167)))
(assert (= a_169 (store a_137 i6 e_140)))
(assert (= a_170 (store a_169 i4 e_138)))
(assert (= a_172 (store a_170 i5 e_171)))
(assert (= a_174 (store a_172 i0 e_173)))
(assert (= a_176 (store a_174 i8 e_175)))
(assert (= a_178 (store a_176 i5 e_177)))
(assert (= a_180 (store a_178 i2 e_179)))
(assert (= a_182 (store a_180 i4 e_181)))
(assert (= a_184 (store a_182 i3 e_183)))
(assert (= a_186 (store a_184 i7 e_185)))
(assert (= a_188 (store a_186 i0 e_187)))
(assert (= a_189 (store a_188 i0 e_187)))
(assert (= a_191 (store a_189 i2 e_190)))
(assert (= a_193 (store a_191 i0 e_192)))
(assert (= a_195 (store a_193 i7 e_194)))
(assert (= a_197 (store a_195 i5 e_196)))
(assert (= e_134 (select a1 i7)))
(assert (= e_136 (select a1 i6)))
(assert (= e_138 (select a_137 i6)))
(assert (= e_140 (select a_137 i4)))
(assert (= e_142 (select a_141 i5)))
(assert (= e_144 (select a_141 i0)))
(assert (= e_146 (select a_145 i5)))
(assert (= e_148 (select a_145 i8)))
(assert (= e_150 (select a_149 i2)))
(assert (= e_152 (select a_149 i4)))
(assert (= e_154 (select a_153 i3)))
(assert (= e_156 (select a_153 i7)))
(assert (= e_158 (select a_157 i0)))
(assert (= e_161 (select a_160 i0)))
(assert (= e_163 (select a_160 i2)))
(assert (= e_165 (select a_164 i5)))
(assert (= e_167 (select a_164 i7)))
(assert (= e_171 (select a_170 i0)))
(assert (= e_173 (select a_170 i5)))
(assert (= e_175 (select a_174 i5)))
(assert (= e_177 (select a_174 i8)))
(assert (= e_179 (select a_178 i4)))
(assert (= e_181 (select a_178 i2)))
(assert (= e_183 (select a_182 i7)))
(assert (= e_185 (select a_182 i3)))
(assert (= e_187 (select a_186 i0)))
(assert (= e_190 (select a_189 i0)))
(assert (= e_192 (select a_189 i2)))
(assert (= e_194 (select a_193 i5)))
(assert (= e_196 (select a_193 i7)))
(assert (not (= a_168 a_197)))
(check-sat)
(exit)
