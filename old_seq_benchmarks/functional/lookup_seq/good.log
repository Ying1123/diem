(lemma STRINGS_REGISTER_TERM (and (= (as seq.empty (Seq Int)) lsym_1) (= (str.len lsym_1) 0)))
(lemma STRINGS_REGISTER_TERM_ATOMIC (let ((_let_1 (str.len s))) (or (and (= _let_1 0) (= s (as seq.empty (Seq Int)))) (> _let_1 0))))
(lemma ARITH_SPLIT_DEQ (let ((_let_1 (seq.nth s (+ (- 1) i@)))) (or (<= x _let_1) (>= x _let_1))))
(lemma QUANTIFIERS_SKOLEMIZE (or (forall ((u Int)) (or (not (>= u 0)) (not (>= (+ i@ (* (- 1) u)) 1)) (not (= x (seq.nth s u))))) (not (or (not (>= skv_2 0)) (not (>= (+ i@ (* (- 1) skv_2)) 1)) (not (= x (seq.nth s skv_2)))))))
(lemma ARITH_SPLIT_DEQ (let ((_let_1 (seq.nth s skv_2))) (let ((_let_2 (seq.nth s (+ (- 1) i@)))) (or (<= _let_2 _let_1) (>= _let_2 _let_1)))))
(conflict ARITH_CONF_SIMPLEX (not (and (>= (+ i@ (* (- 1) skv_2)) 1) (>= skv_2 0) (not (>= i@ 1)))))
(lemma ? (let ((_let_1 (seq.nth s skv_2))) (let ((_let_2 (seq.nth s (+ (- 1) i@)))) (or (not (= x _let_1)) (= x _let_2) (>= (+ x (* (- 1) _let_2)) 1) (>= (+ _let_2 (* (- 1) _let_1)) 1)))))
(lemma STRINGS_REDUCTION (let ((_let_1 (+ (- 1) i@))) (let ((_let_2 (str.len s))) (=> true (and (ite (and (>= _let_1 0) (> _let_2 _let_1)) (and (= s (str.++ sspre_4 (seq.unit sst_3) sssufr_5)) (= (str.len sspre_4) _let_1) (= (str.len sssufr_5) (- _let_2 (+ _let_1 1)))) (= sst_3 (SKOLEM_FUN_SEQ_NTH_OOB_6 s _let_1))) (= (seq.nth s _let_1) sst_3))))))
(lemma STRINGS_REGISTER_TERM_ATOMIC (let ((_let_1 (str.len sssufr_5))) (or (and (= _let_1 0) (= sssufr_5 (as seq.empty (Seq Int)))) (> _let_1 0))))
(lemma STRINGS_REGISTER_TERM (and (= (seq.unit sst_3) lsym_7) (= (str.len lsym_7) 1)))
(lemma STRINGS_REGISTER_TERM_ATOMIC (let ((_let_1 (str.len sspre_4))) (or (and (= _let_1 0) (= sspre_4 (as seq.empty (Seq Int)))) (> _let_1 0))))
(lemma STRINGS_REGISTER_TERM (and (= (str.++ sspre_4 (seq.unit sst_3) sssufr_5) lsym_8) (= (str.len sspre_4) (+ (- 1) (* (- 1) (str.len sssufr_5)) (str.len lsym_8)))))
(lemma STRINGS_REGISTER_TERM_ATOMIC (let ((_let_1 (str.len lsym_7))) (or (and (= _let_1 0) (= lsym_7 (as seq.empty (Seq Int)))) (> _let_1 0))))
(lemma ? (let ((_let_1 (str.len s))) (or (not (>= skv_2 0)) (not (>= (+ i@ (* (- 1) skv_2)) 1)) (not (= _let_1 0)) (>= (+ i@ (* (- 1) _let_1)) 1))))
(fact STRINGS_I_NORM_S (let ((_let_1 (seq.unit sst_3))) (= (str.++ sspre_4 _let_1 sssufr_5) _let_1)))
(lemma STRINGS_REDUCTION (let ((_let_1 (str.len s))) (=> true (and (ite (and (>= skv_2 0) (> _let_1 skv_2)) (and (= s (str.++ sspre_10 (seq.unit sst_9) sssufr_11)) (= (str.len sspre_10) skv_2) (= (str.len sssufr_11) (- _let_1 (+ skv_2 1)))) (= sst_9 (SKOLEM_FUN_SEQ_NTH_OOB_6 s skv_2))) (= (seq.nth s skv_2) sst_9)))))
(lemma STRINGS_REGISTER_TERM_ATOMIC (let ((_let_1 (str.len sssufr_11))) (or (and (= _let_1 0) (= sssufr_11 (as seq.empty (Seq Int)))) (> _let_1 0))))
(lemma STRINGS_REGISTER_TERM (and (= (seq.unit sst_9) lsym_12) (= (str.len lsym_12) 1)))
(lemma STRINGS_REGISTER_TERM_ATOMIC (let ((_let_1 (str.len sspre_10))) (or (and (= _let_1 0) (= sspre_10 (as seq.empty (Seq Int)))) (> _let_1 0))))
(lemma STRINGS_REGISTER_TERM (and (= (str.++ sspre_10 (seq.unit sst_9) sssufr_11) lsym_13) (= (str.len sspre_10) (+ (- 1) (* (- 1) (str.len sssufr_11)) (str.len lsym_13)))))
(lemma STRINGS_REGISTER_TERM_ATOMIC (let ((_let_1 (str.len lsym_12))) (or (and (= _let_1 0) (= lsym_12 (as seq.empty (Seq Int)))) (> _let_1 0))))
(lemma ? (let ((_let_1 (str.len s))) (or (not (= _let_1 0)) (not (>= skv_2 0)) (>= (+ skv_2 (* (- 1) _let_1)) 0))))
(fact STRINGS_I_NORM_S (let ((_let_1 (seq.unit sst_3))) (= (str.++ sspre_4 _let_1 sssufr_5) _let_1)))
(fact STRINGS_I_NORM_S (let ((_let_1 (seq.unit sst_9))) (= (str.++ sspre_10 _let_1 sssufr_11) _let_1)))
(lemma ARITH_SPLIT_DEQ (let ((_let_1 (+ 1 skv_2))) (or (<= i@ _let_1) (>= i@ _let_1))))
(conflict ARITH_CONF_SIMPLEX (not (and (>= (+ i@ (* (- 1) skv_2)) 1) (not (= i@ (+ 1 skv_2))) (>= skv_2 0) (not (>= i@ 2)))))
(lemma ARITH_SPLIT_DEQ (let ((_let_1 (str.len s))) (or (<= _let_1 0) (>= _let_1 0))))
(fact STRINGS_I_NORM_S (let ((_let_1 (seq.unit sst_3))) (= (str.++ sspre_4 _let_1 sssufr_5) _let_1)))
(fact STRINGS_I_NORM_S (let ((_let_1 (seq.unit sst_9))) (= (str.++ sspre_10 _let_1 sssufr_11) _let_1)))
(fact STRINGS_UNIT_INJ (= sst_9 sst_3))
(lemma ARITH_SPLIT_DEQ (let ((_let_1 (SKOLEM_FUN_SEQ_NTH_OOB_6 s (+ (- 1) i@)))) (or (<= sst_3 _let_1) (>= sst_3 _let_1))))
(conflict ARITH_CONF_SIMPLEX (let ((_let_1 (str.len s))) (not (and (>= _let_1 1) (= i@ (+ 1 skv_2)) (>= (+ skv_2 (* (- 1) _let_1)) 0) (not (>= i@ 2))))))
(conflict ARITH_CONF_SIMPLEX (let ((_let_1 (* (- 1) (str.len s)))) (not (and (>= (+ skv_2 _let_1) 0) (= i@ (+ 1 skv_2)) (not (>= (+ i@ _let_1) 1))))))
(conflict ARITH_CONF_SIMPLEX (let ((_let_1 (str.len sspre_4))) (let ((_let_2 (str.len s))) (not (and (not (>= _let_1 1)) (>= _let_2 1) (= i@ (+ 1 skv_2)) (>= (+ skv_2 (* (- 1) _let_2)) 0) (= i@ (+ 1 _let_1)))))))
(conflict ARITH_CONF_SIMPLEX (let ((_let_1 (str.len sssufr_5))) (let ((_let_2 (str.len s))) (not (and (= _let_1 0) (>= (+ skv_2 (* (- 1) _let_2)) 0) (= i@ (+ 1 skv_2)) (= i@ (+ _let_2 (* (- 1) _let_1))))))))
(conflict ARITH_CONF_SIMPLEX (let ((_let_1 (str.len lsym_8))) (let ((_let_2 (str.len s))) (let ((_let_3 (str.len sspre_10))) (let ((_let_4 (str.len sspre_4))) (let ((_let_5 (str.len sssufr_5))) (not (and (>= _let_3 1) (= _let_4 (+ (- 1) (* (- 1) _let_5) _let_1)) (= _let_5 0) (= _let_4 0) (not (>= (+ skv_2 (* (- 1) _let_2)) 0)) (= skv_2 _let_3) (= _let_2 _let_1)))))))))
(conflict ARITH_CONF_SIMPLEX (let ((_let_1 (str.len sspre_4))) (let ((_let_2 (str.len sspre_10))) (not (and (not (>= _let_1 1)) (>= _let_2 1) (= i@ (+ 1 skv_2)) (= skv_2 _let_2) (= i@ (+ 1 _let_1)))))))
(conflict ARITH_CONF_SIMPLEX (let ((_let_1 (str.len sspre_10))) (not (and (>= _let_1 1) (= i@ (+ 1 skv_2)) (= skv_2 _let_1) (not (>= i@ 2))))))
(conflict ARITH_CONF_SIMPLEX (let ((_let_1 (str.len sssufr_5))) (let ((_let_2 (str.len s))) (let ((_let_3 (str.len sssufr_11))) (not (and (= _let_1 0) (>= _let_3 1) (not (>= (+ i@ (* (- 1) skv_2)) 2)) (= skv_2 (+ (- 1) _let_2 (* (- 1) _let_3))) (= i@ (+ _let_2 (* (- 1) _let_1)))))))))
(lemma ARITH_SPLIT_DEQ (let ((_let_1 (SKOLEM_FUN_SEQ_NTH_OOB_6 s skv_2))) (or (<= sst_9 _let_1) (>= sst_9 _let_1))))
(lemma ARITH_SPLIT_DEQ (let ((_let_1 (SKOLEM_FUN_SEQ_NTH_OOB_6 s skv_2))) (let ((_let_2 (seq.nth s skv_2))) (or (<= _let_2 _let_1) (>= _let_2 _let_1)))))
(conflict ARITH_CONF_SIMPLEX (let ((_let_1 (* (- 1) (str.len s)))) (not (and (>= (+ i@ _let_1) 1) (not (>= (+ i@ (* (- 1) skv_2)) 2)) (not (>= (+ skv_2 _let_1) 0))))))
(conflict ARITH_CONF_SIMPLEX (let ((_let_1 (str.len s))) (let ((_let_2 (str.len sspre_10))) (not (and (= _let_2 0) (= skv_2 _let_2) (>= (+ i@ (* (- 1) _let_1)) 1) (not (>= (+ i@ (* (- 1) skv_2)) 2)) (>= _let_1 1))))))
(conflict ARITH_CONF_SIMPLEX (let ((_let_1 (str.len sspre_4))) (let ((_let_2 (str.len sspre_10))) (not (and (not (= 1 _let_1)) (>= _let_1 1) (not (>= _let_2 1)) (not (>= (+ i@ (* (- 1) skv_2)) 2)) (= skv_2 _let_2) (= i@ (+ 1 _let_1)))))))
(lemma ARITH_SPLIT_DEQ (let ((_let_1 (str.len sssufr_5))) (or (<= _let_1 0) (>= _let_1 0))))
(lemma ? (let ((_let_1 (str.len sssufr_11))) (let ((_let_2 (str.len s))) (let ((_let_3 (str.len sssufr_5))) (or (not (>= _let_3 1)) (not (= i@ (+ _let_2 (* (- 1) _let_3)))) (not (= skv_2 (+ (- 1) _let_2 (* (- 1) _let_1)))) (not (= i@ (+ 1 skv_2))) (>= _let_1 1))))))
(lemma ? (let ((_let_1 (* (- 1) (SKOLEM_FUN_SEQ_NTH_OOB_6 s skv_2)))) (let ((_let_2 (seq.nth s skv_2))) (or (>= (+ sst_9 _let_1) 1) (not (= sst_9 _let_2)) (not (>= (+ _let_2 _let_1) 1))))))
(fact STRINGS_F_UNIFY (= (seq.unit sst_9) (seq.unit sst_3)))
(fact STRINGS_UNIT_INJ (= sst_9 sst_3))
(fact STRINGS_I_NORM_S (let ((_let_1 (seq.unit sst_3))) (= (str.++ sspre_4 _let_1 sssufr_5) _let_1)))
(fact STRINGS_I_NORM_S (let ((_let_1 (seq.unit sst_9))) (= (str.++ sspre_10 _let_1 sssufr_11) _let_1)))
(lemma QUANTIFIERS_INST_E_MATCHING_SIMPLE (=> (forall ((u Int)) (or (not (>= u 0)) (not (>= (+ i@ (* (- 1) u)) 2)) (not (= x (seq.nth s u))))) (or (not (>= skv_2 0)) (not (>= (+ i@ (* (- 1) skv_2)) 2)) (not (= x (seq.nth s skv_2))))))
(lemma ? (let ((_let_1 (str.len sspre_10))) (or (not (= skv_2 _let_1)) (>= (+ i@ (* (- 1) skv_2)) 2) (not (>= i@ 2)) (>= _let_1 1))))
(lemma ? (let ((_let_1 (str.len sspre_4))) (or (not (>= i@ 2)) (not (= i@ (+ 1 _let_1))) (>= _let_1 1))))
(lemma ? (let ((_let_1 (str.len sssufr_5))) (let ((_let_2 (str.len s))) (or (>= (+ i@ (* (- 1) _let_2)) 1) (not (= i@ (+ _let_2 (* (- 1) _let_1)))) (>= _let_1 0)))))
(fact STRINGS_F_UNIFY (= (seq.unit sst_3) (seq.unit sst_9)))
(fact STRINGS_UNIT_INJ (= sst_3 sst_9))
(lemma STRINGS_LEN_SPLIT (let ((_let_1 (= (str.len sssufr_5) (str.len sssufr_11)))) (=> true (or _let_1 (not _let_1)))))
(fact STRINGS_F_UNIFY (= sssufr_5 sssufr_11))
(fact STRINGS_F_UNIFY (= (seq.unit sst_3) (seq.unit sst_9)))
(fact STRINGS_UNIT_INJ (= sst_3 sst_9))
(lemma ARITH_SPLIT_DEQ (let ((_let_1 (str.len sssufr_11))) (let ((_let_2 (str.len sssufr_5))) (or (<= _let_2 _let_1) (>= _let_2 _let_1)))))
(conflict ARITH_CONF_SIMPLEX (let ((_let_1 (str.len sssufr_11))) (let ((_let_2 (* (- 1) _let_1))) (let ((_let_3 (str.len s))) (let ((_let_4 (str.len sssufr_5))) (not (and (not (>= (+ i@ (* (- 1) skv_2)) 2)) (not (= _let_4 _let_1)) (not (>= (+ _let_4 _let_2) 1)) (= i@ (+ _let_3 (* (- 1) _let_4))) (= skv_2 (+ (- 1) _let_3 _let_2)))))))))
(conflict ARITH_CONF_SIMPLEX (let ((_let_1 (str.len lsym_13))) (let ((_let_2 (str.len s))) (let ((_let_3 (str.len sssufr_5))) (let ((_let_4 (str.len sspre_10))) (let ((_let_5 (str.len sssufr_11))) (let ((_let_6 (* (- 1) _let_5))) (not (and (not (= _let_3 _let_5)) (not (>= (+ _let_3 _let_6) 1)) (= _let_4 (+ (- 1) _let_6 _let_1)) (= skv_2 _let_4) (not (>= (+ i@ (* (- 1) skv_2)) 2)) (= i@ (+ _let_2 (* (- 1) _let_3))) (= _let_2 _let_1))))))))))
(conflict ARITH_CONF_SIMPLEX (let ((_let_1 (* (- 1) (str.len sssufr_11)))) (let ((_let_2 (str.len s))) (let ((_let_3 (str.len sssufr_5))) (not (and (>= (+ i@ (* (- 1) skv_2)) 1) (>= (+ _let_3 _let_1) 1) (= i@ (+ _let_2 (* (- 1) _let_3))) (= skv_2 (+ (- 1) _let_2 _let_1))))))))
(conflict ARITH_CONF_SIMPLEX (let ((_let_1 (str.len lsym_13))) (let ((_let_2 (str.len s))) (let ((_let_3 (str.len sssufr_5))) (let ((_let_4 (str.len sspre_10))) (let ((_let_5 (* (- 1) (str.len sssufr_11)))) (not (and (>= (+ _let_3 _let_5) 1) (= _let_4 (+ (- 1) _let_5 _let_1)) (= skv_2 _let_4) (>= (+ i@ (* (- 1) skv_2)) 1) (= i@ (+ _let_2 (* (- 1) _let_3))) (= _let_2 _let_1)))))))))
unsat
