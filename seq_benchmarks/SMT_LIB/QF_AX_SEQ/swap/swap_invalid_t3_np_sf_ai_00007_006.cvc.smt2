(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)

(declare-sort Element 0)
(declare-fun a_271 () (Seq Element))
(declare-fun a_273 () (Seq Element))
(declare-fun a_275 () (Seq Element))
(declare-fun a_277 () (Seq Element))
(declare-fun a_279 () (Seq Element))
(declare-fun a_281 () (Seq Element))
(declare-fun a_283 () (Seq Element))
(declare-fun a_284 () (Seq Element))
(declare-fun a_286 () (Seq Element))
(declare-fun a_288 () (Seq Element))
(declare-fun a_290 () (Seq Element))
(declare-fun a_292 () (Seq Element))
(declare-fun a_294 () (Seq Element))
(declare-fun a_296 () (Seq Element))
(declare-fun a_297 () (Seq Element))
(declare-fun a_298 () (Seq Element))
(declare-fun a_300 () (Seq Element))
(declare-fun a_302 () (Seq Element))
(declare-fun a_304 () (Seq Element))
(declare-fun a_305 () (Seq Element))
(declare-fun a_307 () (Seq Element))
(declare-fun a_309 () (Seq Element))
(declare-fun a_311 () (Seq Element))
(declare-fun a_313 () (Seq Element))
(declare-fun a_315 () (Seq Element))
(declare-fun a_317 () (Seq Element))
(declare-fun e_270 () Element)
(declare-fun e_272 () Element)
(declare-fun e_274 () Element)
(declare-fun e_276 () Element)
(declare-fun e_278 () Element)
(declare-fun e_280 () Element)
(declare-fun e_282 () Element)
(declare-fun e_285 () Element)
(declare-fun e_287 () Element)
(declare-fun e_289 () Element)
(declare-fun e_291 () Element)
(declare-fun e_293 () Element)
(declare-fun e_295 () Element)
(declare-fun e_299 () Element)
(declare-fun e_301 () Element)
(declare-fun e_303 () Element)
(declare-fun e_306 () Element)
(declare-fun e_308 () Element)
(declare-fun e_310 () Element)
(declare-fun e_312 () Element)
(declare-fun e_314 () Element)
(declare-fun e_316 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(assert (= a_271 (seq.update a1 i6 (seq.unit e_270))))
(assert (= a_273 (seq.update a_271 i3 (seq.unit e_272))))
(assert (= a_275 (seq.update a_273 i1 (seq.unit e_274))))
(assert (= a_277 (seq.update a_275 i4 (seq.unit e_276))))
(assert (= a_279 (seq.update a_277 i2 (seq.unit e_278))))
(assert (= a_281 (seq.update a_279 i6 (seq.unit e_280))))
(assert (= a_283 (seq.update a_281 i4 (seq.unit e_282))))
(assert (= a_284 (seq.update a_283 i4 (seq.unit e_282))))
(assert (= a_286 (seq.update a_284 i0 (seq.unit e_285))))
(assert (= a_288 (seq.update a_286 i2 (seq.unit e_287))))
(assert (= a_290 (seq.update a_288 i2 (seq.unit e_289))))
(assert (= a_292 (seq.update a_290 i6 (seq.unit e_291))))
(assert (= a_294 (seq.update a_292 i5 (seq.unit e_293))))
(assert (= a_296 (seq.update a_294 i3 (seq.unit e_295))))
(assert (= a_297 (seq.update a_273 i4 (seq.unit e_276))))
(assert (= a_298 (seq.update a_297 i1 (seq.unit e_274))))
(assert (= a_300 (seq.update a_298 i6 (seq.unit e_299))))
(assert (= a_302 (seq.update a_300 i2 (seq.unit e_301))))
(assert (= a_304 (seq.update a_302 i4 (seq.unit e_303))))
(assert (= a_305 (seq.update a_304 i4 (seq.unit e_303))))
(assert (= a_307 (seq.update a_305 i0 (seq.unit e_306))))
(assert (= a_309 (seq.update a_307 i2 (seq.unit e_308))))
(assert (= a_311 (seq.update a_309 i6 (seq.unit e_310))))
(assert (= a_313 (seq.update a_311 i2 (seq.unit e_312))))
(assert (= a_315 (seq.update a_313 i6 (seq.unit e_314))))
(assert (= a_317 (seq.update a_315 i3 (seq.unit e_316))))
(assert (= e_270 (seq.nth a1 i3)))
(assert (= e_272 (seq.nth a1 i6)))
(assert (= e_274 (seq.nth a_273 i4)))
(assert (= e_276 (seq.nth a_273 i1)))
(assert (= e_278 (seq.nth a_277 i6)))
(assert (= e_280 (seq.nth a_277 i2)))
(assert (= e_282 (seq.nth a_281 i4)))
(assert (= e_285 (seq.nth a_284 i2)))
(assert (= e_287 (seq.nth a_284 i0)))
(assert (= e_289 (seq.nth a_288 i6)))
(assert (= e_291 (seq.nth a_288 i2)))
(assert (= e_293 (seq.nth a_292 i3)))
(assert (= e_295 (seq.nth a_292 i5)))
(assert (= e_299 (seq.nth a_298 i2)))
(assert (= e_301 (seq.nth a_298 i6)))
(assert (= e_303 (seq.nth a_302 i4)))
(assert (= e_306 (seq.nth a_305 i2)))
(assert (= e_308 (seq.nth a_305 i0)))
(assert (= e_310 (seq.nth a_309 i2)))
(assert (= e_312 (seq.nth a_309 i6)))
(assert (= e_314 (seq.nth a_313 i3)))
(assert (= e_316 (seq.nth a_313 i6)))
(assert (not (= a_296 a_317)))
(check-sat)
(exit)
