(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)

(declare-sort Element 0)
(declare-fun a_659 () (Seq Element))
(declare-fun a_661 () (Seq Element))
(declare-fun a_663 () (Seq Element))
(declare-fun a_665 () (Seq Element))
(declare-fun a_667 () (Seq Element))
(declare-fun a_669 () (Seq Element))
(declare-fun a_671 () (Seq Element))
(declare-fun a_673 () (Seq Element))
(declare-fun a_675 () (Seq Element))
(declare-fun a_677 () (Seq Element))
(declare-fun a_679 () (Seq Element))
(declare-fun a_681 () (Seq Element))
(declare-fun a_682 () (Seq Element))
(declare-fun a_684 () (Seq Element))
(declare-fun e_658 () Element)
(declare-fun e_660 () Element)
(declare-fun e_662 () Element)
(declare-fun e_664 () Element)
(declare-fun e_666 () Element)
(declare-fun e_668 () Element)
(declare-fun e_670 () Element)
(declare-fun e_672 () Element)
(declare-fun e_674 () Element)
(declare-fun e_676 () Element)
(declare-fun e_678 () Element)
(declare-fun e_680 () Element)
(declare-fun e_683 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(assert (= a_659 (seq.update a1 i4 (seq.unit e_658))))
(assert (= a_661 (seq.update a_659 i2 (seq.unit e_660))))
(assert (= a_663 (seq.update a_661 i1 (seq.unit e_662))))
(assert (= a_665 (seq.update a_663 i4 (seq.unit e_664))))
(assert (= a_667 (seq.update a_665 i5 (seq.unit e_666))))
(assert (= a_669 (seq.update a_667 i3 (seq.unit e_668))))
(assert (= a_671 (seq.update a_669 i4 (seq.unit e_670))))
(assert (= a_673 (seq.update a_671 i2 (seq.unit e_672))))
(assert (= a_675 (seq.update a_673 i1 (seq.unit e_674))))
(assert (= a_677 (seq.update a_675 i0 (seq.unit e_676))))
(assert (= a_679 (seq.update a_677 i5 (seq.unit e_678))))
(assert (= a_681 (seq.update a_679 i2 (seq.unit e_680))))
(assert (= a_682 (seq.update a_677 i3 (seq.unit e_680))))
(assert (= a_684 (seq.update a_682 i5 (seq.unit e_683))))
(assert (= e_658 (seq.nth a1 i2)))
(assert (= e_660 (seq.nth a1 i4)))
(assert (= e_662 (seq.nth a_661 i4)))
(assert (= e_664 (seq.nth a_661 i1)))
(assert (= e_666 (seq.nth a_665 i3)))
(assert (= e_668 (seq.nth a_665 i5)))
(assert (= e_670 (seq.nth a_669 i2)))
(assert (= e_672 (seq.nth a_669 i4)))
(assert (= e_674 (seq.nth a_673 i0)))
(assert (= e_676 (seq.nth a_673 i1)))
(assert (= e_678 (seq.nth a_677 i2)))
(assert (= e_680 (seq.nth a_677 i5)))
(assert (= e_683 (seq.nth a_677 i3)))
(assert (not (= a_681 a_684)))
(check-sat)
(exit)
