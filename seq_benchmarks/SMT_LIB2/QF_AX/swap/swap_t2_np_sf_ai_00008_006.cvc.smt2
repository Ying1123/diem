(set-info :smt-lib-version 2.6)
(set-logic QF_AX)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-sort Index 0)
(declare-sort Element 0)
(declare-fun a_346 () (Array Index Element))
(declare-fun a_348 () (Array Index Element))
(declare-fun a_350 () (Array Index Element))
(declare-fun a_352 () (Array Index Element))
(declare-fun a_354 () (Array Index Element))
(declare-fun a_355 () (Array Index Element))
(declare-fun a_357 () (Array Index Element))
(declare-fun a_359 () (Array Index Element))
(declare-fun a_361 () (Array Index Element))
(declare-fun a_363 () (Array Index Element))
(declare-fun a_365 () (Array Index Element))
(declare-fun a_367 () (Array Index Element))
(declare-fun a_369 () (Array Index Element))
(declare-fun a_371 () (Array Index Element))
(declare-fun a_373 () (Array Index Element))
(declare-fun a_375 () (Array Index Element))
(declare-fun a_376 () (Array Index Element))
(declare-fun a_377 () (Array Index Element))
(declare-fun a_379 () (Array Index Element))
(declare-fun a_381 () (Array Index Element))
(declare-fun a_383 () (Array Index Element))
(declare-fun a_384 () (Array Index Element))
(declare-fun a_386 () (Array Index Element))
(declare-fun a_388 () (Array Index Element))
(declare-fun a_390 () (Array Index Element))
(declare-fun a_392 () (Array Index Element))
(declare-fun a_394 () (Array Index Element))
(declare-fun a_396 () (Array Index Element))
(declare-fun a_398 () (Array Index Element))
(declare-fun a_400 () (Array Index Element))
(declare-fun a_402 () (Array Index Element))
(declare-fun a_404 () (Array Index Element))
(declare-fun e_345 () Element)
(declare-fun e_347 () Element)
(declare-fun e_349 () Element)
(declare-fun e_351 () Element)
(declare-fun e_353 () Element)
(declare-fun e_356 () Element)
(declare-fun e_358 () Element)
(declare-fun e_360 () Element)
(declare-fun e_362 () Element)
(declare-fun e_364 () Element)
(declare-fun e_366 () Element)
(declare-fun e_368 () Element)
(declare-fun e_370 () Element)
(declare-fun e_372 () Element)
(declare-fun e_374 () Element)
(declare-fun e_378 () Element)
(declare-fun e_380 () Element)
(declare-fun e_382 () Element)
(declare-fun e_385 () Element)
(declare-fun e_387 () Element)
(declare-fun e_389 () Element)
(declare-fun e_391 () Element)
(declare-fun e_393 () Element)
(declare-fun e_395 () Element)
(declare-fun e_397 () Element)
(declare-fun e_399 () Element)
(declare-fun e_401 () Element)
(declare-fun e_403 () Element)
(declare-fun a1 () (Array Index Element))
(declare-fun i0 () Index)
(declare-fun i1 () Index)
(declare-fun i2 () Index)
(declare-fun i3 () Index)
(declare-fun i4 () Index)
(declare-fun i5 () Index)
(declare-fun i6 () Index)
(declare-fun i7 () Index)
(assert (= a_346 (store a1 i3 e_345)))
(assert (= a_348 (store a_346 i7 e_347)))
(assert (= a_350 (store a_348 i4 e_349)))
(assert (= a_352 (store a_350 i0 e_351)))
(assert (= a_354 (store a_352 i7 e_353)))
(assert (= a_355 (store a_354 i7 e_353)))
(assert (= a_357 (store a_355 i1 e_356)))
(assert (= a_359 (store a_357 i7 e_358)))
(assert (= a_361 (store a_359 i6 e_360)))
(assert (= a_363 (store a_361 i5 e_362)))
(assert (= a_365 (store a_363 i1 e_364)))
(assert (= a_367 (store a_365 i6 e_366)))
(assert (= a_369 (store a_367 i6 e_368)))
(assert (= a_371 (store a_369 i2 e_370)))
(assert (= a_373 (store a_371 i3 e_372)))
(assert (= a_375 (store a_373 i0 e_374)))
(assert (= a_376 (store a1 i7 e_347)))
(assert (= a_377 (store a_376 i3 e_345)))
(assert (= a_379 (store a_377 i4 e_378)))
(assert (= a_381 (store a_379 i0 e_380)))
(assert (= a_383 (store a_381 i7 e_382)))
(assert (= a_384 (store a_383 i7 e_382)))
(assert (= a_386 (store a_384 i7 e_385)))
(assert (= a_388 (store a_386 i1 e_387)))
(assert (= a_390 (store a_388 i6 e_389)))
(assert (= a_392 (store a_390 i5 e_391)))
(assert (= a_394 (store a_392 i6 e_393)))
(assert (= a_396 (store a_394 i1 e_395)))
(assert (= a_398 (store a_396 i2 e_397)))
(assert (= a_400 (store a_398 i6 e_399)))
(assert (= a_402 (store a_400 i0 e_401)))
(assert (= a_404 (store a_402 i3 e_403)))
(assert (= e_345 (select a1 i7)))
(assert (= e_347 (select a1 i3)))
(assert (= e_349 (select a_348 i0)))
(assert (= e_351 (select a_348 i4)))
(assert (= e_353 (select a_352 i7)))
(assert (= e_356 (select a_355 i7)))
(assert (= e_358 (select a_355 i1)))
(assert (= e_360 (select a_359 i5)))
(assert (= e_362 (select a_359 i6)))
(assert (= e_364 (select a_363 i6)))
(assert (= e_366 (select a_363 i1)))
(assert (= e_368 (select a_367 i2)))
(assert (= e_370 (select a_367 i6)))
(assert (= e_372 (select a_371 i0)))
(assert (= e_374 (select a_371 i3)))
(assert (= e_378 (select a_377 i0)))
(assert (= e_380 (select a_377 i4)))
(assert (= e_382 (select a_381 i7)))
(assert (= e_385 (select a_384 i1)))
(assert (= e_387 (select a_384 i7)))
(assert (= e_389 (select a_388 i5)))
(assert (= e_391 (select a_388 i6)))
(assert (= e_393 (select a_392 i1)))
(assert (= e_395 (select a_392 i6)))
(assert (= e_397 (select a_396 i6)))
(assert (= e_399 (select a_396 i2)))
(assert (= e_401 (select a_400 i3)))
(assert (= e_403 (select a_400 i0)))
(assert (not (= a_375 a_404)))
(check-sat)
(exit)
