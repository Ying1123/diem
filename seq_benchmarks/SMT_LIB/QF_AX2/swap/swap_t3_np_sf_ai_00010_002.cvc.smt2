(set-info :smt-lib-version 2.6)
(set-logic QF_AX)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-sort Index 0)
(declare-sort Element 0)
(declare-fun a_1011 () (Array Index Element))
(declare-fun a_1013 () (Array Index Element))
(declare-fun a_1015 () (Array Index Element))
(declare-fun a_1017 () (Array Index Element))
(declare-fun a_1019 () (Array Index Element))
(declare-fun a_1021 () (Array Index Element))
(declare-fun a_1023 () (Array Index Element))
(declare-fun a_1025 () (Array Index Element))
(declare-fun a_1027 () (Array Index Element))
(declare-fun a_1029 () (Array Index Element))
(declare-fun a_1031 () (Array Index Element))
(declare-fun a_1033 () (Array Index Element))
(declare-fun a_1035 () (Array Index Element))
(declare-fun a_1037 () (Array Index Element))
(declare-fun a_1039 () (Array Index Element))
(declare-fun a_1041 () (Array Index Element))
(declare-fun a_1043 () (Array Index Element))
(declare-fun a_1045 () (Array Index Element))
(declare-fun a_1047 () (Array Index Element))
(declare-fun a_1049 () (Array Index Element))
(declare-fun a_1050 () (Array Index Element))
(declare-fun a_1051 () (Array Index Element))
(declare-fun a_1053 () (Array Index Element))
(declare-fun a_1055 () (Array Index Element))
(declare-fun a_1057 () (Array Index Element))
(declare-fun a_1059 () (Array Index Element))
(declare-fun a_1061 () (Array Index Element))
(declare-fun a_1063 () (Array Index Element))
(declare-fun a_1065 () (Array Index Element))
(declare-fun a_1067 () (Array Index Element))
(declare-fun a_1069 () (Array Index Element))
(declare-fun a_1071 () (Array Index Element))
(declare-fun a_1073 () (Array Index Element))
(declare-fun a_1075 () (Array Index Element))
(declare-fun a_1077 () (Array Index Element))
(declare-fun a_1079 () (Array Index Element))
(declare-fun a_1081 () (Array Index Element))
(declare-fun a_1083 () (Array Index Element))
(declare-fun a_1085 () (Array Index Element))
(declare-fun a_1087 () (Array Index Element))
(declare-fun e_1010 () Element)
(declare-fun e_1012 () Element)
(declare-fun e_1014 () Element)
(declare-fun e_1016 () Element)
(declare-fun e_1018 () Element)
(declare-fun e_1020 () Element)
(declare-fun e_1022 () Element)
(declare-fun e_1024 () Element)
(declare-fun e_1026 () Element)
(declare-fun e_1028 () Element)
(declare-fun e_1030 () Element)
(declare-fun e_1032 () Element)
(declare-fun e_1034 () Element)
(declare-fun e_1036 () Element)
(declare-fun e_1038 () Element)
(declare-fun e_1040 () Element)
(declare-fun e_1042 () Element)
(declare-fun e_1044 () Element)
(declare-fun e_1046 () Element)
(declare-fun e_1048 () Element)
(declare-fun e_1052 () Element)
(declare-fun e_1054 () Element)
(declare-fun e_1056 () Element)
(declare-fun e_1058 () Element)
(declare-fun e_1060 () Element)
(declare-fun e_1062 () Element)
(declare-fun e_1064 () Element)
(declare-fun e_1066 () Element)
(declare-fun e_1068 () Element)
(declare-fun e_1070 () Element)
(declare-fun e_1072 () Element)
(declare-fun e_1074 () Element)
(declare-fun e_1076 () Element)
(declare-fun e_1078 () Element)
(declare-fun e_1080 () Element)
(declare-fun e_1082 () Element)
(declare-fun e_1084 () Element)
(declare-fun e_1086 () Element)
(declare-fun a1 () (Array Index Element))
(declare-fun i0 () Index)
(declare-fun i1 () Index)
(declare-fun i2 () Index)
(declare-fun i3 () Index)
(declare-fun i4 () Index)
(declare-fun i5 () Index)
(declare-fun i6 () Index)
(declare-fun i7 () Index)
(declare-fun i8 () Index)
(declare-fun i9 () Index)
(assert (= a_1011 (store a1 i3 e_1010)))
(assert (= a_1013 (store a_1011 i9 e_1012)))
(assert (= a_1015 (store a_1013 i2 e_1014)))
(assert (= a_1017 (store a_1015 i7 e_1016)))
(assert (= a_1019 (store a_1017 i0 e_1018)))
(assert (= a_1021 (store a_1019 i2 e_1020)))
(assert (= a_1023 (store a_1021 i8 e_1022)))
(assert (= a_1025 (store a_1023 i9 e_1024)))
(assert (= a_1027 (store a_1025 i6 e_1026)))
(assert (= a_1029 (store a_1027 i3 e_1028)))
(assert (= a_1031 (store a_1029 i7 e_1030)))
(assert (= a_1033 (store a_1031 i9 e_1032)))
(assert (= a_1035 (store a_1033 i5 e_1034)))
(assert (= a_1037 (store a_1035 i1 e_1036)))
(assert (= a_1039 (store a_1037 i6 e_1038)))
(assert (= a_1041 (store a_1039 i4 e_1040)))
(assert (= a_1043 (store a_1041 i0 e_1042)))
(assert (= a_1045 (store a_1043 i3 e_1044)))
(assert (= a_1047 (store a_1045 i8 e_1046)))
(assert (= a_1049 (store a_1047 i3 e_1048)))
(assert (= a_1050 (store a1 i9 e_1012)))
(assert (= a_1051 (store a_1050 i3 e_1010)))
(assert (= a_1053 (store a_1051 i2 e_1052)))
(assert (= a_1055 (store a_1053 i7 e_1054)))
(assert (= a_1057 (store a_1055 i2 e_1056)))
(assert (= a_1059 (store a_1057 i0 e_1058)))
(assert (= a_1061 (store a_1059 i9 e_1060)))
(assert (= a_1063 (store a_1061 i8 e_1062)))
(assert (= a_1065 (store a_1063 i6 e_1064)))
(assert (= a_1067 (store a_1065 i3 e_1066)))
(assert (= a_1069 (store a_1067 i9 e_1068)))
(assert (= a_1071 (store a_1069 i7 e_1070)))
(assert (= a_1073 (store a_1071 i1 e_1072)))
(assert (= a_1075 (store a_1073 i5 e_1074)))
(assert (= a_1077 (store a_1075 i6 e_1076)))
(assert (= a_1079 (store a_1077 i4 e_1078)))
(assert (= a_1081 (store a_1079 i3 e_1080)))
(assert (= a_1083 (store a_1081 i0 e_1082)))
(assert (= a_1085 (store a_1083 i8 e_1084)))
(assert (= a_1087 (store a_1085 i3 e_1086)))
(assert (= e_1010 (select a1 i9)))
(assert (= e_1012 (select a1 i3)))
(assert (= e_1014 (select a_1013 i7)))
(assert (= e_1016 (select a_1013 i2)))
(assert (= e_1018 (select a_1017 i2)))
(assert (= e_1020 (select a_1017 i0)))
(assert (= e_1022 (select a_1021 i9)))
(assert (= e_1024 (select a_1021 i8)))
(assert (= e_1026 (select a_1025 i3)))
(assert (= e_1028 (select a_1025 i6)))
(assert (= e_1030 (select a_1029 i9)))
(assert (= e_1032 (select a_1029 i7)))
(assert (= e_1034 (select a_1033 i1)))
(assert (= e_1036 (select a_1033 i5)))
(assert (= e_1038 (select a_1037 i4)))
(assert (= e_1040 (select a_1037 i6)))
(assert (= e_1042 (select a_1041 i3)))
(assert (= e_1044 (select a_1041 i0)))
(assert (= e_1046 (select a_1045 i3)))
(assert (= e_1048 (select a_1045 i8)))
(assert (= e_1052 (select a_1051 i7)))
(assert (= e_1054 (select a_1051 i2)))
(assert (= e_1056 (select a_1055 i0)))
(assert (= e_1058 (select a_1055 i2)))
(assert (= e_1060 (select a_1059 i8)))
(assert (= e_1062 (select a_1059 i9)))
(assert (= e_1064 (select a_1063 i3)))
(assert (= e_1066 (select a_1063 i6)))
(assert (= e_1068 (select a_1067 i7)))
(assert (= e_1070 (select a_1067 i9)))
(assert (= e_1072 (select a_1071 i5)))
(assert (= e_1074 (select a_1071 i1)))
(assert (= e_1076 (select a_1075 i4)))
(assert (= e_1078 (select a_1075 i6)))
(assert (= e_1080 (select a_1079 i0)))
(assert (= e_1082 (select a_1079 i3)))
(assert (= e_1084 (select a_1083 i3)))
(assert (= e_1086 (select a_1083 i8)))
(assert (not (= a_1049 a_1087)))
(check-sat)
(exit)
