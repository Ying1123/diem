(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)

(declare-sort Element 0)
(declare-fun a_658 () (Seq Element))
(declare-fun a_660 () (Seq Element))
(declare-fun a_662 () (Seq Element))
(declare-fun a_664 () (Seq Element))
(declare-fun a_666 () (Seq Element))
(declare-fun a_668 () (Seq Element))
(declare-fun a_670 () (Seq Element))
(declare-fun a_672 () (Seq Element))
(declare-fun a_674 () (Seq Element))
(declare-fun a_676 () (Seq Element))
(declare-fun a_678 () (Seq Element))
(declare-fun a_680 () (Seq Element))
(declare-fun a_681 () (Seq Element))
(declare-fun a_682 () (Seq Element))
(declare-fun e_657 () Element)
(declare-fun e_659 () Element)
(declare-fun e_661 () Element)
(declare-fun e_663 () Element)
(declare-fun e_665 () Element)
(declare-fun e_667 () Element)
(declare-fun e_669 () Element)
(declare-fun e_671 () Element)
(declare-fun e_673 () Element)
(declare-fun e_675 () Element)
(declare-fun e_677 () Element)
(declare-fun e_679 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(assert (= a_658 (seq.update a1 i4 (seq.unit e_657))))
(assert (= a_660 (seq.update a_658 i2 (seq.unit e_659))))
(assert (= a_662 (seq.update a_660 i1 (seq.unit e_661))))
(assert (= a_664 (seq.update a_662 i4 (seq.unit e_663))))
(assert (= a_666 (seq.update a_664 i5 (seq.unit e_665))))
(assert (= a_668 (seq.update a_666 i3 (seq.unit e_667))))
(assert (= a_670 (seq.update a_668 i4 (seq.unit e_669))))
(assert (= a_672 (seq.update a_670 i2 (seq.unit e_671))))
(assert (= a_674 (seq.update a_672 i1 (seq.unit e_673))))
(assert (= a_676 (seq.update a_674 i0 (seq.unit e_675))))
(assert (= a_678 (seq.update a_676 i5 (seq.unit e_677))))
(assert (= a_680 (seq.update a_678 i2 (seq.unit e_679))))
(assert (= a_681 (seq.update a_676 i2 (seq.unit e_679))))
(assert (= a_682 (seq.update a_681 i5 (seq.unit e_677))))
(assert (= e_657 (seq.nth a1 i2)))
(assert (= e_659 (seq.nth a1 i4)))
(assert (= e_661 (seq.nth a_660 i4)))
(assert (= e_663 (seq.nth a_660 i1)))
(assert (= e_665 (seq.nth a_664 i3)))
(assert (= e_667 (seq.nth a_664 i5)))
(assert (= e_669 (seq.nth a_668 i2)))
(assert (= e_671 (seq.nth a_668 i4)))
(assert (= e_673 (seq.nth a_672 i0)))
(assert (= e_675 (seq.nth a_672 i1)))
(assert (= e_677 (seq.nth a_676 i2)))
(assert (= e_679 (seq.nth a_676 i5)))
(assert (not (= a_680 a_682)))
(check-sat)
(exit)
