(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)

(declare-sort Element 0)
(declare-fun a_865 () (Seq Element))
(declare-fun a_866 () (Seq Element))
(declare-fun a_868 () (Seq Element))
(declare-fun a_870 () (Seq Element))
(declare-fun a_872 () (Seq Element))
(declare-fun a_874 () (Seq Element))
(declare-fun a_876 () (Seq Element))
(declare-fun a_878 () (Seq Element))
(declare-fun a_880 () (Seq Element))
(declare-fun a_882 () (Seq Element))
(declare-fun a_884 () (Seq Element))
(declare-fun a_886 () (Seq Element))
(declare-fun a_888 () (Seq Element))
(declare-fun a_890 () (Seq Element))
(declare-fun a_892 () (Seq Element))
(declare-fun a_894 () (Seq Element))
(declare-fun a_896 () (Seq Element))
(declare-fun a_898 () (Seq Element))
(declare-fun a_900 () (Seq Element))
(declare-fun a_902 () (Seq Element))
(declare-fun a_903 () (Seq Element))
(declare-fun a_904 () (Seq Element))
(declare-fun a_906 () (Seq Element))
(declare-fun a_908 () (Seq Element))
(declare-fun a_910 () (Seq Element))
(declare-fun a_912 () (Seq Element))
(declare-fun a_914 () (Seq Element))
(declare-fun a_916 () (Seq Element))
(declare-fun a_918 () (Seq Element))
(declare-fun a_920 () (Seq Element))
(declare-fun a_922 () (Seq Element))
(declare-fun a_924 () (Seq Element))
(declare-fun a_926 () (Seq Element))
(declare-fun a_928 () (Seq Element))
(declare-fun a_930 () (Seq Element))
(declare-fun a_932 () (Seq Element))
(declare-fun e_864 () Element)
(declare-fun e_867 () Element)
(declare-fun e_869 () Element)
(declare-fun e_871 () Element)
(declare-fun e_873 () Element)
(declare-fun e_875 () Element)
(declare-fun e_877 () Element)
(declare-fun e_879 () Element)
(declare-fun e_881 () Element)
(declare-fun e_883 () Element)
(declare-fun e_885 () Element)
(declare-fun e_887 () Element)
(declare-fun e_889 () Element)
(declare-fun e_891 () Element)
(declare-fun e_893 () Element)
(declare-fun e_895 () Element)
(declare-fun e_897 () Element)
(declare-fun e_899 () Element)
(declare-fun e_901 () Element)
(declare-fun e_905 () Element)
(declare-fun e_907 () Element)
(declare-fun e_909 () Element)
(declare-fun e_911 () Element)
(declare-fun e_913 () Element)
(declare-fun e_915 () Element)
(declare-fun e_917 () Element)
(declare-fun e_919 () Element)
(declare-fun e_921 () Element)
(declare-fun e_923 () Element)
(declare-fun e_925 () Element)
(declare-fun e_927 () Element)
(declare-fun e_929 () Element)
(declare-fun e_931 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(declare-fun i8 () Int)
(declare-fun i9 () Int)
(assert (= a_865 (seq.update a1 i5 (seq.unit e_864))))
(assert (= a_866 (seq.update a_865 i5 (seq.unit e_864))))
(assert (= a_868 (seq.update a_866 i1 (seq.unit e_867))))
(assert (= a_870 (seq.update a_868 i3 (seq.unit e_869))))
(assert (= a_872 (seq.update a_870 i1 (seq.unit e_871))))
(assert (= a_874 (seq.update a_872 i0 (seq.unit e_873))))
(assert (= a_876 (seq.update a_874 i8 (seq.unit e_875))))
(assert (= a_878 (seq.update a_876 i6 (seq.unit e_877))))
(assert (= a_880 (seq.update a_878 i1 (seq.unit e_879))))
(assert (= a_882 (seq.update a_880 i5 (seq.unit e_881))))
(assert (= a_884 (seq.update a_882 i0 (seq.unit e_883))))
(assert (= a_886 (seq.update a_884 i7 (seq.unit e_885))))
(assert (= a_888 (seq.update a_886 i7 (seq.unit e_887))))
(assert (= a_890 (seq.update a_888 i9 (seq.unit e_889))))
(assert (= a_892 (seq.update a_890 i1 (seq.unit e_891))))
(assert (= a_894 (seq.update a_892 i5 (seq.unit e_893))))
(assert (= a_896 (seq.update a_894 i3 (seq.unit e_895))))
(assert (= a_898 (seq.update a_896 i2 (seq.unit e_897))))
(assert (= a_900 (seq.update a_898 i0 (seq.unit e_899))))
(assert (= a_902 (seq.update a_900 i7 (seq.unit e_901))))
(assert (= a_903 (seq.update a_870 i0 (seq.unit e_873))))
(assert (= a_904 (seq.update a_903 i1 (seq.unit e_871))))
(assert (= a_906 (seq.update a_904 i8 (seq.unit e_905))))
(assert (= a_908 (seq.update a_906 i6 (seq.unit e_907))))
(assert (= a_910 (seq.update a_908 i5 (seq.unit e_909))))
(assert (= a_912 (seq.update a_910 i1 (seq.unit e_911))))
(assert (= a_914 (seq.update a_912 i0 (seq.unit e_913))))
(assert (= a_916 (seq.update a_914 i7 (seq.unit e_915))))
(assert (= a_918 (seq.update a_916 i7 (seq.unit e_917))))
(assert (= a_920 (seq.update a_918 i9 (seq.unit e_919))))
(assert (= a_922 (seq.update a_920 i1 (seq.unit e_921))))
(assert (= a_924 (seq.update a_922 i5 (seq.unit e_923))))
(assert (= a_926 (seq.update a_924 i3 (seq.unit e_925))))
(assert (= a_928 (seq.update a_926 i2 (seq.unit e_927))))
(assert (= a_930 (seq.update a_928 i7 (seq.unit e_929))))
(assert (= a_932 (seq.update a_930 i1 (seq.unit e_931))))
(assert (= e_864 (seq.nth a1 i5)))
(assert (= e_867 (seq.nth a_866 i3)))
(assert (= e_869 (seq.nth a_866 i1)))
(assert (= e_871 (seq.nth a_870 i0)))
(assert (= e_873 (seq.nth a_870 i1)))
(assert (= e_875 (seq.nth a_874 i6)))
(assert (= e_877 (seq.nth a_874 i8)))
(assert (= e_879 (seq.nth a_878 i5)))
(assert (= e_881 (seq.nth a_878 i1)))
(assert (= e_883 (seq.nth a_882 i7)))
(assert (= e_885 (seq.nth a_882 i0)))
(assert (= e_887 (seq.nth a_886 i9)))
(assert (= e_889 (seq.nth a_886 i7)))
(assert (= e_891 (seq.nth a_890 i5)))
(assert (= e_893 (seq.nth a_890 i1)))
(assert (= e_895 (seq.nth a_894 i2)))
(assert (= e_897 (seq.nth a_894 i3)))
(assert (= e_899 (seq.nth a_898 i7)))
(assert (= e_901 (seq.nth a_898 i0)))
(assert (= e_905 (seq.nth a_904 i6)))
(assert (= e_907 (seq.nth a_904 i8)))
(assert (= e_909 (seq.nth a_908 i1)))
(assert (= e_911 (seq.nth a_908 i5)))
(assert (= e_913 (seq.nth a_912 i7)))
(assert (= e_915 (seq.nth a_912 i0)))
(assert (= e_917 (seq.nth a_916 i9)))
(assert (= e_919 (seq.nth a_916 i7)))
(assert (= e_921 (seq.nth a_920 i5)))
(assert (= e_923 (seq.nth a_920 i1)))
(assert (= e_925 (seq.nth a_924 i2)))
(assert (= e_927 (seq.nth a_924 i3)))
(assert (= e_929 (seq.nth a_928 i1)))
(assert (= e_931 (seq.nth a_928 i7)))
(assert (not (= a_902 a_932)))
(check-sat)
(exit)
