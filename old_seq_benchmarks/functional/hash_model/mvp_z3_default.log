22:33:32 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestHash::hash_test4` to be verified
22:33:32 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestHash::hash_test3` to be verified
22:33:32 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestHash::hash_test2_incorrect` to be verified
22:33:32 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestHash::hash_test2` to be verified
22:33:32 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestHash::hash_test1_incorrect` to be verified
22:33:32 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestHash::hash_test1` to be verified
22:33:32 [DEBUG] (1) boogie_backend::bytecode_translator: translating module Hash
[INFO] translating module TestHash
22:33:32 [DEBUG] (1) move_prover: writing boogie to `output.bpl`
[INFO] running solver
22:33:32 [DEBUG] (1) boogie_backend::boogie_wrapper: command line: /home/ying/boogie/Source/BoogieDriver/bin/Debug/net5.0/BoogieDriver -doModSetAnalysis -printVerifiedProceduresCount:0 -printModel:1 -enhancedErrorMessages:1 -monomorphize -proverOpt:PROVER_PATH=/home/ying/bin/z3 -proverOpt:O:smt.QI.EAGER_THRESHOLD=100 -proverOpt:O:smt.QI.LAZY_THRESHOLD=100 -vcsCores:4 -proverLog:@PROC@.smt output.bpl
22:33:32 [DEBUG] (12) boogie_backend::prover_task_runner: runing Boogie command with seed 1
22:33:32 [DEBUG] (1) boogie_backend::boogie_wrapper: analyzing boogie output
22:33:32 [DEBUG] (1) boogie_backend::boogie_wrapper: writing boogie log to output.bpl.log
[INFO] 0.009s build, 0.003s trafo, 0.006s gen, 0.615s verify
error: post-condition does not hold

    ┌── /home/ying/diem/language/move-prover/tests/sources/functional/hash_model.move:48:9 ───
    │
 48 │         ensures len(result_1) > 0 ==> result_1[0] < max_u8(); // should be <=
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/hash_model.move:48
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/hash_model.move:39: hash_test1_incorrect
    =         v1 = vector{(size): 1, default: 255u8}
    =         v2 = vector{}
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/hash_model.move:41: hash_test1_incorrect
    =         h1 = vector{(size): 32, 255u8, 4: 45u8, 12: 4u8, default: 255u8}
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/hash_model.move:42: hash_test1_incorrect
    =         h2 = vector{(size): 32, 4: 44u8, 12: 3u8, default: 255u8}
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/hash_model.move:43: hash_test1_incorrect
    =         result_1 = vector{(size): 32, 255u8, 4: 45u8, 12: 4u8, default: 255u8}
    =         result_2 = vector{(size): 32, 4: 44u8, 12: 3u8, default: 255u8}
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/hash_model.move:44: hash_test1_incorrect
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/hash_model.move:46
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/hash_model.move:48

error: post-condition does not hold

    ┌── /home/ying/diem/language/move-prover/tests/sources/functional/hash_model.move:91:9 ───
    │
 91 │         ensures len(result_1) > 0 ==> result_1[0] < max_u8();
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/hash_model.move:91
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/hash_model.move:82: hash_test2_incorrect
    =         v1 = vector{(size): 1, default: 255u8}
    =         v2 = vector{}
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/hash_model.move:84: hash_test2_incorrect
    =         h1 = vector{(size): 32, 255u8, 4: 45u8, 12: 4u8, default: 255u8}
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/hash_model.move:85: hash_test2_incorrect
    =         h2 = vector{(size): 32, 4: 44u8, 12: 3u8, default: 255u8}
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/hash_model.move:86: hash_test2_incorrect
    =         result_1 = vector{(size): 32, 255u8, 4: 45u8, 12: 4u8, default: 255u8}
    =         result_2 = vector{(size): 32, 4: 44u8, 12: 3u8, default: 255u8}
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/hash_model.move:87: hash_test2_incorrect
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/hash_model.move:89
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/hash_model.move:91

exiting with boogie verification errors
