(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)

(declare-sort Element 0)
(declare-fun a_492 () (Seq Element))
(declare-fun a_494 () (Seq Element))
(declare-fun a_496 () (Seq Element))
(declare-fun a_498 () (Seq Element))
(declare-fun a_500 () (Seq Element))
(declare-fun a_502 () (Seq Element))
(declare-fun a_504 () (Seq Element))
(declare-fun a_505 () (Seq Element))
(declare-fun a_507 () (Seq Element))
(declare-fun a_509 () (Seq Element))
(declare-fun a_511 () (Seq Element))
(declare-fun a_513 () (Seq Element))
(declare-fun a_514 () (Seq Element))
(declare-fun a_515 () (Seq Element))
(declare-fun a_517 () (Seq Element))
(declare-fun a_519 () (Seq Element))
(declare-fun a_521 () (Seq Element))
(declare-fun a_523 () (Seq Element))
(declare-fun a_525 () (Seq Element))
(declare-fun a_526 () (Seq Element))
(declare-fun a_528 () (Seq Element))
(declare-fun a_530 () (Seq Element))
(declare-fun a_532 () (Seq Element))
(declare-fun a_534 () (Seq Element))
(declare-fun e_491 () Element)
(declare-fun e_493 () Element)
(declare-fun e_495 () Element)
(declare-fun e_497 () Element)
(declare-fun e_499 () Element)
(declare-fun e_501 () Element)
(declare-fun e_503 () Element)
(declare-fun e_506 () Element)
(declare-fun e_508 () Element)
(declare-fun e_510 () Element)
(declare-fun e_512 () Element)
(declare-fun e_516 () Element)
(declare-fun e_518 () Element)
(declare-fun e_520 () Element)
(declare-fun e_522 () Element)
(declare-fun e_524 () Element)
(declare-fun e_527 () Element)
(declare-fun e_529 () Element)
(declare-fun e_531 () Element)
(declare-fun e_533 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(assert (= a_492 (seq.update a1 i0 (seq.unit e_491))))
(assert (= a_494 (seq.update a_492 i1 (seq.unit e_493))))
(assert (= a_496 (seq.update a_494 i5 (seq.unit e_495))))
(assert (= a_498 (seq.update a_496 i1 (seq.unit e_497))))
(assert (= a_500 (seq.update a_498 i3 (seq.unit e_499))))
(assert (= a_502 (seq.update a_500 i1 (seq.unit e_501))))
(assert (= a_504 (seq.update a_502 i4 (seq.unit e_503))))
(assert (= a_505 (seq.update a_504 i4 (seq.unit e_503))))
(assert (= a_507 (seq.update a_505 i1 (seq.unit e_506))))
(assert (= a_509 (seq.update a_507 i5 (seq.unit e_508))))
(assert (= a_511 (seq.update a_509 i3 (seq.unit e_510))))
(assert (= a_513 (seq.update a_511 i1 (seq.unit e_512))))
(assert (= a_514 (seq.update a1 i1 (seq.unit e_493))))
(assert (= a_515 (seq.update a_514 i0 (seq.unit e_491))))
(assert (= a_517 (seq.update a_515 i5 (seq.unit e_516))))
(assert (= a_519 (seq.update a_517 i1 (seq.unit e_518))))
(assert (= a_521 (seq.update a_519 i3 (seq.unit e_520))))
(assert (= a_523 (seq.update a_521 i1 (seq.unit e_522))))
(assert (= a_525 (seq.update a_523 i4 (seq.unit e_524))))
(assert (= a_526 (seq.update a_525 i4 (seq.unit e_524))))
(assert (= a_528 (seq.update a_526 i5 (seq.unit e_527))))
(assert (= a_530 (seq.update a_528 i1 (seq.unit e_529))))
(assert (= a_532 (seq.update a_530 i4 (seq.unit e_531))))
(assert (= a_534 (seq.update a_532 i1 (seq.unit e_533))))
(assert (= e_491 (seq.nth a1 i1)))
(assert (= e_493 (seq.nth a1 i0)))
(assert (= e_495 (seq.nth a_494 i1)))
(assert (= e_497 (seq.nth a_494 i5)))
(assert (= e_499 (seq.nth a_498 i1)))
(assert (= e_501 (seq.nth a_498 i3)))
(assert (= e_503 (seq.nth a_502 i4)))
(assert (= e_506 (seq.nth a_505 i5)))
(assert (= e_508 (seq.nth a_505 i1)))
(assert (= e_510 (seq.nth a_509 i1)))
(assert (= e_512 (seq.nth a_509 i3)))
(assert (= e_516 (seq.nth a_515 i1)))
(assert (= e_518 (seq.nth a_515 i5)))
(assert (= e_520 (seq.nth a_519 i1)))
(assert (= e_522 (seq.nth a_519 i3)))
(assert (= e_524 (seq.nth a_523 i4)))
(assert (= e_527 (seq.nth a_526 i1)))
(assert (= e_529 (seq.nth a_526 i5)))
(assert (= e_531 (seq.nth a_530 i1)))
(assert (= e_533 (seq.nth a_530 i4)))
(assert (not (= a_513 a_534)))
(check-sat)
(exit)
