(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)

(declare-sort Element 0)
(declare-fun a_558 () (Seq Element))
(declare-fun a_559 () (Seq Element))
(declare-fun a_560 () (Seq Element))
(declare-fun a_561 () (Seq Element))
(declare-fun a_562 () (Seq Element))
(declare-fun a_563 () (Seq Element))
(declare-fun a_564 () (Seq Element))
(declare-fun a_565 () (Seq Element))
(declare-fun a_566 () (Seq Element))
(declare-fun a_567 () (Seq Element))
(declare-fun a_568 () (Seq Element))
(declare-fun a_569 () (Seq Element))
(declare-fun a_570 () (Seq Element))
(declare-fun a_571 () (Seq Element))
(declare-fun a_572 () (Seq Element))
(declare-fun a_573 () (Seq Element))
(declare-fun a_574 () (Seq Element))
(declare-fun a_575 () (Seq Element))
(declare-fun a_576 () (Seq Element))
(declare-fun a_577 () (Seq Element))
(declare-fun a_578 () (Seq Element))
(declare-fun a_579 () (Seq Element))
(declare-fun a_580 () (Seq Element))
(declare-fun a_581 () (Seq Element))
(declare-fun a_582 () (Seq Element))
(declare-fun a_583 () (Seq Element))
(declare-fun a_584 () (Seq Element))
(declare-fun a_585 () (Seq Element))
(declare-fun a_586 () (Seq Element))
(declare-fun a_587 () (Seq Element))
(declare-fun a_588 () (Seq Element))
(declare-fun a_589 () (Seq Element))
(declare-fun a_590 () (Seq Element))
(declare-fun a_591 () (Seq Element))
(declare-fun a_592 () (Seq Element))
(declare-fun a_593 () (Seq Element))
(declare-fun a_594 () (Seq Element))
(declare-fun a_595 () (Seq Element))
(declare-fun a_596 () (Seq Element))
(declare-fun a_597 () (Seq Element))
(declare-fun a1 () (Seq Element))
(declare-fun e1 () Element)
(declare-fun e10 () Element)
(declare-fun e11 () Element)
(declare-fun e12 () Element)
(declare-fun e13 () Element)
(declare-fun e14 () Element)
(declare-fun e15 () Element)
(declare-fun e16 () Element)
(declare-fun e17 () Element)
(declare-fun e18 () Element)
(declare-fun e19 () Element)
(declare-fun e2 () Element)
(declare-fun e20 () Element)
(declare-fun e3 () Element)
(declare-fun e4 () Element)
(declare-fun e5 () Element)
(declare-fun e6 () Element)
(declare-fun e7 () Element)
(declare-fun e8 () Element)
(declare-fun e9 () Element)
(declare-fun i1 () Int)
(declare-fun i10 () Int)
(declare-fun i11 () Int)
(declare-fun i12 () Int)
(declare-fun i13 () Int)
(declare-fun i14 () Int)
(declare-fun i15 () Int)
(declare-fun i16 () Int)
(declare-fun i17 () Int)
(declare-fun i18 () Int)
(declare-fun i19 () Int)
(declare-fun i2 () Int)
(declare-fun i20 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(declare-fun i8 () Int)
(declare-fun i9 () Int)
(assert (= a_558 (seq.update a1 i1 (seq.unit e1))))
(assert (= a_559 (seq.update a_558 i2 (seq.unit e2))))
(assert (= a_560 (seq.update a_559 i3 (seq.unit e3))))
(assert (= a_561 (seq.update a_560 i4 (seq.unit e4))))
(assert (= a_562 (seq.update a_561 i5 (seq.unit e5))))
(assert (= a_563 (seq.update a_562 i6 (seq.unit e6))))
(assert (= a_564 (seq.update a_563 i7 (seq.unit e7))))
(assert (= a_565 (seq.update a_564 i8 (seq.unit e8))))
(assert (= a_566 (seq.update a_565 i9 (seq.unit e9))))
(assert (= a_567 (seq.update a_566 i10 (seq.unit e10))))
(assert (= a_568 (seq.update a_567 i11 (seq.unit e11))))
(assert (= a_569 (seq.update a_568 i12 (seq.unit e12))))
(assert (= a_570 (seq.update a_569 i13 (seq.unit e13))))
(assert (= a_571 (seq.update a_570 i14 (seq.unit e14))))
(assert (= a_572 (seq.update a_571 i15 (seq.unit e15))))
(assert (= a_573 (seq.update a_572 i16 (seq.unit e16))))
(assert (= a_574 (seq.update a_573 i17 (seq.unit e17))))
(assert (= a_575 (seq.update a_574 i18 (seq.unit e18))))
(assert (= a_576 (seq.update a_575 i19 (seq.unit e19))))
(assert (= a_577 (seq.update a_576 i20 (seq.unit e20))))
(assert (= a_578 (seq.update a1 i4 (seq.unit e4))))
(assert (= a_579 (seq.update a_578 i17 (seq.unit e17))))
(assert (= a_580 (seq.update a_579 i7 (seq.unit e7))))
(assert (= a_581 (seq.update a_580 i8 (seq.unit e8))))
(assert (= a_582 (seq.update a_581 i3 (seq.unit e3))))
(assert (= a_583 (seq.update a_582 i18 (seq.unit e18))))
(assert (= a_584 (seq.update a_583 i14 (seq.unit e14))))
(assert (= a_585 (seq.update a_584 i11 (seq.unit e11))))
(assert (= a_586 (seq.update a_585 i15 (seq.unit e15))))
(assert (= a_587 (seq.update a_586 i10 (seq.unit e10))))
(assert (= a_588 (seq.update a_587 i16 (seq.unit e16))))
(assert (= a_589 (seq.update a_588 i19 (seq.unit e19))))
(assert (= a_590 (seq.update a_589 i1 (seq.unit e1))))
(assert (= a_591 (seq.update a_590 i12 (seq.unit e12))))
(assert (= a_592 (seq.update a_591 i5 (seq.unit e5))))
(assert (= a_593 (seq.update a_592 i6 (seq.unit e6))))
(assert (= a_594 (seq.update a_593 i2 (seq.unit e2))))
(assert (= a_595 (seq.update a_594 i20 (seq.unit e20))))
(assert (= a_596 (seq.update a_595 i9 (seq.unit e9))))
(assert (= a_597 (seq.update a_596 i13 (seq.unit e13))))
(assert (not (= i19 i20)))
(assert (not (= i18 i20)))
(assert (not (= i18 i19)))
(assert (not (= i17 i20)))
(assert (not (= i17 i19)))
(assert (not (= i17 i18)))
(assert (not (= i16 i20)))
(assert (not (= i16 i19)))
(assert (not (= i16 i18)))
(assert (not (= i16 i17)))
(assert (not (= i15 i20)))
(assert (not (= i15 i19)))
(assert (not (= i15 i18)))
(assert (not (= i15 i17)))
(assert (not (= i15 i16)))
(assert (not (= i14 i20)))
(assert (not (= i14 i19)))
(assert (not (= i14 i18)))
(assert (not (= i14 i17)))
(assert (not (= i14 i16)))
(assert (not (= i14 i15)))
(assert (not (= i13 i20)))
(assert (not (= i13 i19)))
(assert (not (= i13 i18)))
(assert (not (= i13 i17)))
(assert (not (= i13 i16)))
(assert (not (= i13 i15)))
(assert (not (= i13 i14)))
(assert (not (= i12 i20)))
(assert (not (= i12 i19)))
(assert (not (= i12 i18)))
(assert (not (= i12 i17)))
(assert (not (= i12 i16)))
(assert (not (= i12 i15)))
(assert (not (= i12 i14)))
(assert (not (= i12 i13)))
(assert (not (= i11 i20)))
(assert (not (= i11 i19)))
(assert (not (= i11 i18)))
(assert (not (= i11 i17)))
(assert (not (= i11 i16)))
(assert (not (= i11 i15)))
(assert (not (= i11 i14)))
(assert (not (= i11 i13)))
(assert (not (= i11 i12)))
(assert (not (= i10 i20)))
(assert (not (= i10 i19)))
(assert (not (= i10 i18)))
(assert (not (= i10 i17)))
(assert (not (= i10 i16)))
(assert (not (= i10 i15)))
(assert (not (= i10 i14)))
(assert (not (= i10 i13)))
(assert (not (= i10 i12)))
(assert (not (= i10 i11)))
(assert (not (= i9 i20)))
(assert (not (= i9 i19)))
(assert (not (= i9 i18)))
(assert (not (= i9 i17)))
(assert (not (= i9 i16)))
(assert (not (= i9 i15)))
(assert (not (= i9 i14)))
(assert (not (= i9 i13)))
(assert (not (= i9 i12)))
(assert (not (= i9 i11)))
(assert (not (= i9 i10)))
(assert (not (= i8 i20)))
(assert (not (= i8 i19)))
(assert (not (= i8 i18)))
(assert (not (= i8 i17)))
(assert (not (= i8 i16)))
(assert (not (= i8 i15)))
(assert (not (= i8 i14)))
(assert (not (= i8 i13)))
(assert (not (= i8 i12)))
(assert (not (= i8 i11)))
(assert (not (= i8 i10)))
(assert (not (= i8 i9)))
(assert (not (= i7 i20)))
(assert (not (= i7 i19)))
(assert (not (= i7 i18)))
(assert (not (= i7 i17)))
(assert (not (= i7 i16)))
(assert (not (= i7 i15)))
(assert (not (= i7 i14)))
(assert (not (= i7 i13)))
(assert (not (= i7 i12)))
(assert (not (= i7 i11)))
(assert (not (= i7 i10)))
(assert (not (= i7 i9)))
(assert (not (= i7 i8)))
(assert (not (= i6 i20)))
(assert (not (= i6 i19)))
(assert (not (= i6 i18)))
(assert (not (= i6 i17)))
(assert (not (= i6 i16)))
(assert (not (= i6 i15)))
(assert (not (= i6 i14)))
(assert (not (= i6 i13)))
(assert (not (= i6 i12)))
(assert (not (= i6 i11)))
(assert (not (= i6 i10)))
(assert (not (= i6 i9)))
(assert (not (= i6 i8)))
(assert (not (= i6 i7)))
(assert (not (= i5 i20)))
(assert (not (= i5 i19)))
(assert (not (= i5 i18)))
(assert (not (= i5 i17)))
(assert (not (= i5 i16)))
(assert (not (= i5 i15)))
(assert (not (= i5 i14)))
(assert (not (= i5 i13)))
(assert (not (= i5 i12)))
(assert (not (= i5 i11)))
(assert (not (= i5 i10)))
(assert (not (= i5 i9)))
(assert (not (= i5 i8)))
(assert (not (= i5 i7)))
(assert (not (= i5 i6)))
(assert (not (= i4 i20)))
(assert (not (= i4 i19)))
(assert (not (= i4 i18)))
(assert (not (= i4 i17)))
(assert (not (= i4 i16)))
(assert (not (= i4 i15)))
(assert (not (= i4 i14)))
(assert (not (= i4 i13)))
(assert (not (= i4 i12)))
(assert (not (= i4 i11)))
(assert (not (= i4 i10)))
(assert (not (= i4 i9)))
(assert (not (= i4 i8)))
(assert (not (= i4 i7)))
(assert (not (= i4 i6)))
(assert (not (= i4 i5)))
(assert (not (= i3 i20)))
(assert (not (= i3 i19)))
(assert (not (= i3 i18)))
(assert (not (= i3 i17)))
(assert (not (= i3 i16)))
(assert (not (= i3 i15)))
(assert (not (= i3 i14)))
(assert (not (= i3 i13)))
(assert (not (= i3 i12)))
(assert (not (= i3 i11)))
(assert (not (= i3 i10)))
(assert (not (= i3 i9)))
(assert (not (= i3 i8)))
(assert (not (= i3 i7)))
(assert (not (= i3 i6)))
(assert (not (= i3 i5)))
(assert (not (= i3 i4)))
(assert (not (= i2 i20)))
(assert (not (= i2 i19)))
(assert (not (= i2 i18)))
(assert (not (= i2 i17)))
(assert (not (= i2 i16)))
(assert (not (= i2 i15)))
(assert (not (= i2 i14)))
(assert (not (= i2 i13)))
(assert (not (= i2 i12)))
(assert (not (= i2 i11)))
(assert (not (= i2 i10)))
(assert (not (= i2 i9)))
(assert (not (= i2 i8)))
(assert (not (= i2 i7)))
(assert (not (= i2 i6)))
(assert (not (= i2 i5)))
(assert (not (= i2 i4)))
(assert (not (= i2 i3)))
(assert (not (= i1 i20)))
(assert (not (= i1 i19)))
(assert (not (= i1 i18)))
(assert (not (= i1 i17)))
(assert (not (= i1 i16)))
(assert (not (= i1 i15)))
(assert (not (= i1 i14)))
(assert (not (= i1 i13)))
(assert (not (= i1 i12)))
(assert (not (= i1 i11)))
(assert (not (= i1 i10)))
(assert (not (= i1 i9)))
(assert (not (= i1 i8)))
(assert (not (= i1 i7)))
(assert (not (= i1 i6)))
(assert (not (= i1 i5)))
(assert (not (= i1 i4)))
(assert (not (= i1 i3)))
(assert (not (= i1 i2)))
(assert (not (= a_577 a_597)))
(check-sat)
(exit)
