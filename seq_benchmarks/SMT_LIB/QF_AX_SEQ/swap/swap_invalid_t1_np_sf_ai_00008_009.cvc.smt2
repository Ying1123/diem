(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)

(declare-sort Element 0)
(declare-fun a_1 () (Seq Element))
(declare-fun a_11 () (Seq Element))
(declare-fun a_13 () (Seq Element))
(declare-fun a_15 () (Seq Element))
(declare-fun a_17 () (Seq Element))
(declare-fun a_19 () (Seq Element))
(declare-fun a_21 () (Seq Element))
(declare-fun a_23 () (Seq Element))
(declare-fun a_25 () (Seq Element))
(declare-fun a_27 () (Seq Element))
(declare-fun a_29 () (Seq Element))
(declare-fun a_3 () (Seq Element))
(declare-fun a_31 () (Seq Element))
(declare-fun a_32 () (Seq Element))
(declare-fun a_33 () (Seq Element))
(declare-fun a_35 () (Seq Element))
(declare-fun a_37 () (Seq Element))
(declare-fun a_39 () (Seq Element))
(declare-fun a_41 () (Seq Element))
(declare-fun a_43 () (Seq Element))
(declare-fun a_45 () (Seq Element))
(declare-fun a_47 () (Seq Element))
(declare-fun a_49 () (Seq Element))
(declare-fun a_5 () (Seq Element))
(declare-fun a_51 () (Seq Element))
(declare-fun a_53 () (Seq Element))
(declare-fun a_55 () (Seq Element))
(declare-fun a_57 () (Seq Element))
(declare-fun a_59 () (Seq Element))
(declare-fun a_61 () (Seq Element))
(declare-fun a_7 () (Seq Element))
(declare-fun a_9 () (Seq Element))
(declare-fun e_0 () Element)
(declare-fun e_10 () Element)
(declare-fun e_12 () Element)
(declare-fun e_14 () Element)
(declare-fun e_16 () Element)
(declare-fun e_18 () Element)
(declare-fun e_2 () Element)
(declare-fun e_20 () Element)
(declare-fun e_22 () Element)
(declare-fun e_24 () Element)
(declare-fun e_26 () Element)
(declare-fun e_28 () Element)
(declare-fun e_30 () Element)
(declare-fun e_34 () Element)
(declare-fun e_36 () Element)
(declare-fun e_38 () Element)
(declare-fun e_4 () Element)
(declare-fun e_40 () Element)
(declare-fun e_42 () Element)
(declare-fun e_44 () Element)
(declare-fun e_46 () Element)
(declare-fun e_48 () Element)
(declare-fun e_50 () Element)
(declare-fun e_52 () Element)
(declare-fun e_54 () Element)
(declare-fun e_56 () Element)
(declare-fun e_58 () Element)
(declare-fun e_6 () Element)
(declare-fun e_60 () Element)
(declare-fun e_8 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(assert (= a_1 (seq.update a1 i3 (seq.unit e_0))))
(assert (= a_11 (seq.update a_9 i0 (seq.unit e_10))))
(assert (= a_13 (seq.update a_11 i6 (seq.unit e_12))))
(assert (= a_15 (seq.update a_13 i7 (seq.unit e_14))))
(assert (= a_17 (seq.update a_15 i1 (seq.unit e_16))))
(assert (= a_19 (seq.update a_17 i5 (seq.unit e_18))))
(assert (= a_21 (seq.update a_19 i5 (seq.unit e_20))))
(assert (= a_23 (seq.update a_21 i3 (seq.unit e_22))))
(assert (= a_25 (seq.update a_23 i6 (seq.unit e_24))))
(assert (= a_27 (seq.update a_25 i3 (seq.unit e_26))))
(assert (= a_29 (seq.update a_27 i0 (seq.unit e_28))))
(assert (= a_3 (seq.update a_1 i6 (seq.unit e_2))))
(assert (= a_31 (seq.update a_29 i2 (seq.unit e_30))))
(assert (= a_32 (seq.update a1 i6 (seq.unit e_2))))
(assert (= a_33 (seq.update a_32 i3 (seq.unit e_0))))
(assert (= a_35 (seq.update a_33 i5 (seq.unit e_34))))
(assert (= a_37 (seq.update a_35 i1 (seq.unit e_36))))
(assert (= a_39 (seq.update a_37 i0 (seq.unit e_38))))
(assert (= a_41 (seq.update a_39 i1 (seq.unit e_40))))
(assert (= a_43 (seq.update a_41 i6 (seq.unit e_42))))
(assert (= a_45 (seq.update a_43 i7 (seq.unit e_44))))
(assert (= a_47 (seq.update a_45 i1 (seq.unit e_46))))
(assert (= a_49 (seq.update a_47 i5 (seq.unit e_48))))
(assert (= a_5 (seq.update a_3 i5 (seq.unit e_4))))
(assert (= a_51 (seq.update a_49 i3 (seq.unit e_50))))
(assert (= a_53 (seq.update a_51 i5 (seq.unit e_52))))
(assert (= a_55 (seq.update a_53 i3 (seq.unit e_54))))
(assert (= a_57 (seq.update a_55 i6 (seq.unit e_56))))
(assert (= a_59 (seq.update a_57 i0 (seq.unit e_58))))
(assert (= a_61 (seq.update a_59 i3 (seq.unit e_60))))
(assert (= a_7 (seq.update a_5 i1 (seq.unit e_6))))
(assert (= a_9 (seq.update a_7 i1 (seq.unit e_8))))
(assert (= e_0 (seq.nth a1 i6)))
(assert (= e_10 (seq.nth a_7 i1)))
(assert (= e_12 (seq.nth a_11 i7)))
(assert (= e_14 (seq.nth a_11 i6)))
(assert (= e_16 (seq.nth a_15 i5)))
(assert (= e_18 (seq.nth a_15 i1)))
(assert (= e_2 (seq.nth a1 i3)))
(assert (= e_20 (seq.nth a_19 i3)))
(assert (= e_22 (seq.nth a_19 i5)))
(assert (= e_24 (seq.nth a_23 i3)))
(assert (= e_26 (seq.nth a_23 i6)))
(assert (= e_28 (seq.nth a_27 i2)))
(assert (= e_30 (seq.nth a_27 i0)))
(assert (= e_34 (seq.nth a_33 i1)))
(assert (= e_36 (seq.nth a_33 i5)))
(assert (= e_38 (seq.nth a_37 i1)))
(assert (= e_4 (seq.nth a_3 i1)))
(assert (= e_40 (seq.nth a_37 i0)))
(assert (= e_42 (seq.nth a_41 i7)))
(assert (= e_44 (seq.nth a_41 i6)))
(assert (= e_46 (seq.nth a_45 i5)))
(assert (= e_48 (seq.nth a_45 i1)))
(assert (= e_50 (seq.nth a_49 i5)))
(assert (= e_52 (seq.nth a_49 i3)))
(assert (= e_54 (seq.nth a_53 i6)))
(assert (= e_56 (seq.nth a_53 i3)))
(assert (= e_58 (seq.nth a_57 i3)))
(assert (= e_6 (seq.nth a_3 i5)))
(assert (= e_60 (seq.nth a_57 i0)))
(assert (= e_8 (seq.nth a_7 i0)))
(assert (not (= a_31 a_61)))
(check-sat)
(exit)
