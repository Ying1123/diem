(set-info :smt-lib-version 2.6)
(set-logic QF_AX)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-sort Index 0)
(declare-sort Element 0)
(declare-fun a_864 () (Array Index Element))
(declare-fun a_865 () (Array Index Element))
(declare-fun a_867 () (Array Index Element))
(declare-fun a_869 () (Array Index Element))
(declare-fun a_871 () (Array Index Element))
(declare-fun a_873 () (Array Index Element))
(declare-fun a_875 () (Array Index Element))
(declare-fun a_877 () (Array Index Element))
(declare-fun a_879 () (Array Index Element))
(declare-fun a_881 () (Array Index Element))
(declare-fun a_883 () (Array Index Element))
(declare-fun a_885 () (Array Index Element))
(declare-fun a_887 () (Array Index Element))
(declare-fun a_889 () (Array Index Element))
(declare-fun a_891 () (Array Index Element))
(declare-fun a_893 () (Array Index Element))
(declare-fun a_895 () (Array Index Element))
(declare-fun a_897 () (Array Index Element))
(declare-fun a_899 () (Array Index Element))
(declare-fun a_901 () (Array Index Element))
(declare-fun a_902 () (Array Index Element))
(declare-fun a_903 () (Array Index Element))
(declare-fun a_905 () (Array Index Element))
(declare-fun a_907 () (Array Index Element))
(declare-fun a_909 () (Array Index Element))
(declare-fun a_911 () (Array Index Element))
(declare-fun a_913 () (Array Index Element))
(declare-fun a_915 () (Array Index Element))
(declare-fun a_917 () (Array Index Element))
(declare-fun a_919 () (Array Index Element))
(declare-fun a_921 () (Array Index Element))
(declare-fun a_923 () (Array Index Element))
(declare-fun a_925 () (Array Index Element))
(declare-fun a_927 () (Array Index Element))
(declare-fun a_929 () (Array Index Element))
(declare-fun a_931 () (Array Index Element))
(declare-fun e_863 () Element)
(declare-fun e_866 () Element)
(declare-fun e_868 () Element)
(declare-fun e_870 () Element)
(declare-fun e_872 () Element)
(declare-fun e_874 () Element)
(declare-fun e_876 () Element)
(declare-fun e_878 () Element)
(declare-fun e_880 () Element)
(declare-fun e_882 () Element)
(declare-fun e_884 () Element)
(declare-fun e_886 () Element)
(declare-fun e_888 () Element)
(declare-fun e_890 () Element)
(declare-fun e_892 () Element)
(declare-fun e_894 () Element)
(declare-fun e_896 () Element)
(declare-fun e_898 () Element)
(declare-fun e_900 () Element)
(declare-fun e_904 () Element)
(declare-fun e_906 () Element)
(declare-fun e_908 () Element)
(declare-fun e_910 () Element)
(declare-fun e_912 () Element)
(declare-fun e_914 () Element)
(declare-fun e_916 () Element)
(declare-fun e_918 () Element)
(declare-fun e_920 () Element)
(declare-fun e_922 () Element)
(declare-fun e_924 () Element)
(declare-fun e_926 () Element)
(declare-fun e_928 () Element)
(declare-fun e_930 () Element)
(declare-fun a1 () (Array Index Element))
(declare-fun i0 () Index)
(declare-fun i1 () Index)
(declare-fun i2 () Index)
(declare-fun i3 () Index)
(declare-fun i5 () Index)
(declare-fun i6 () Index)
(declare-fun i7 () Index)
(declare-fun i8 () Index)
(declare-fun i9 () Index)
(assert (= a_864 (store a1 i5 e_863)))
(assert (= a_865 (store a_864 i5 e_863)))
(assert (= a_867 (store a_865 i1 e_866)))
(assert (= a_869 (store a_867 i3 e_868)))
(assert (= a_871 (store a_869 i1 e_870)))
(assert (= a_873 (store a_871 i0 e_872)))
(assert (= a_875 (store a_873 i8 e_874)))
(assert (= a_877 (store a_875 i6 e_876)))
(assert (= a_879 (store a_877 i1 e_878)))
(assert (= a_881 (store a_879 i5 e_880)))
(assert (= a_883 (store a_881 i0 e_882)))
(assert (= a_885 (store a_883 i7 e_884)))
(assert (= a_887 (store a_885 i7 e_886)))
(assert (= a_889 (store a_887 i9 e_888)))
(assert (= a_891 (store a_889 i1 e_890)))
(assert (= a_893 (store a_891 i5 e_892)))
(assert (= a_895 (store a_893 i3 e_894)))
(assert (= a_897 (store a_895 i2 e_896)))
(assert (= a_899 (store a_897 i0 e_898)))
(assert (= a_901 (store a_899 i7 e_900)))
(assert (= a_902 (store a_869 i0 e_872)))
(assert (= a_903 (store a_902 i1 e_870)))
(assert (= a_905 (store a_903 i8 e_904)))
(assert (= a_907 (store a_905 i6 e_906)))
(assert (= a_909 (store a_907 i5 e_908)))
(assert (= a_911 (store a_909 i1 e_910)))
(assert (= a_913 (store a_911 i0 e_912)))
(assert (= a_915 (store a_913 i7 e_914)))
(assert (= a_917 (store a_915 i7 e_916)))
(assert (= a_919 (store a_917 i9 e_918)))
(assert (= a_921 (store a_919 i1 e_920)))
(assert (= a_923 (store a_921 i5 e_922)))
(assert (= a_925 (store a_923 i3 e_924)))
(assert (= a_927 (store a_925 i2 e_926)))
(assert (= a_929 (store a_927 i7 e_928)))
(assert (= a_931 (store a_929 i0 e_930)))
(assert (= e_863 (select a1 i5)))
(assert (= e_866 (select a_865 i3)))
(assert (= e_868 (select a_865 i1)))
(assert (= e_870 (select a_869 i0)))
(assert (= e_872 (select a_869 i1)))
(assert (= e_874 (select a_873 i6)))
(assert (= e_876 (select a_873 i8)))
(assert (= e_878 (select a_877 i5)))
(assert (= e_880 (select a_877 i1)))
(assert (= e_882 (select a_881 i7)))
(assert (= e_884 (select a_881 i0)))
(assert (= e_886 (select a_885 i9)))
(assert (= e_888 (select a_885 i7)))
(assert (= e_890 (select a_889 i5)))
(assert (= e_892 (select a_889 i1)))
(assert (= e_894 (select a_893 i2)))
(assert (= e_896 (select a_893 i3)))
(assert (= e_898 (select a_897 i7)))
(assert (= e_900 (select a_897 i0)))
(assert (= e_904 (select a_903 i6)))
(assert (= e_906 (select a_903 i8)))
(assert (= e_908 (select a_907 i1)))
(assert (= e_910 (select a_907 i5)))
(assert (= e_912 (select a_911 i7)))
(assert (= e_914 (select a_911 i0)))
(assert (= e_916 (select a_915 i9)))
(assert (= e_918 (select a_915 i7)))
(assert (= e_920 (select a_919 i5)))
(assert (= e_922 (select a_919 i1)))
(assert (= e_924 (select a_923 i2)))
(assert (= e_926 (select a_923 i3)))
(assert (= e_928 (select a_927 i0)))
(assert (= e_930 (select a_927 i7)))
(assert (not (= a_901 a_931)))
(check-sat)
(exit)
