(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)

(declare-sort Element 0)
(declare-fun a_100 () (Seq Element))
(declare-fun a_102 () (Seq Element))
(declare-fun a_104 () (Seq Element))
(declare-fun a_106 () (Seq Element))
(declare-fun a_108 () (Seq Element))
(declare-fun a_110 () (Seq Element))
(declare-fun a_112 () (Seq Element))
(declare-fun a_114 () (Seq Element))
(declare-fun a_116 () (Seq Element))
(declare-fun a_118 () (Seq Element))
(declare-fun a_119 () (Seq Element))
(declare-fun a_120 () (Seq Element))
(declare-fun a_122 () (Seq Element))
(declare-fun a_124 () (Seq Element))
(declare-fun a_126 () (Seq Element))
(declare-fun a_128 () (Seq Element))
(declare-fun a_130 () (Seq Element))
(declare-fun a_132 () (Seq Element))
(declare-fun a_134 () (Seq Element))
(declare-fun a_136 () (Seq Element))
(declare-fun a_138 () (Seq Element))
(declare-fun a_140 () (Seq Element))
(declare-fun a_92 () (Seq Element))
(declare-fun a_94 () (Seq Element))
(declare-fun a_96 () (Seq Element))
(declare-fun a_98 () (Seq Element))
(declare-fun e_101 () Element)
(declare-fun e_103 () Element)
(declare-fun e_105 () Element)
(declare-fun e_107 () Element)
(declare-fun e_109 () Element)
(declare-fun e_111 () Element)
(declare-fun e_113 () Element)
(declare-fun e_115 () Element)
(declare-fun e_117 () Element)
(declare-fun e_121 () Element)
(declare-fun e_123 () Element)
(declare-fun e_125 () Element)
(declare-fun e_127 () Element)
(declare-fun e_129 () Element)
(declare-fun e_131 () Element)
(declare-fun e_133 () Element)
(declare-fun e_135 () Element)
(declare-fun e_137 () Element)
(declare-fun e_139 () Element)
(declare-fun e_91 () Element)
(declare-fun e_93 () Element)
(declare-fun e_95 () Element)
(declare-fun e_97 () Element)
(declare-fun e_99 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(assert (= a_100 (seq.update a_98 i4 (seq.unit e_99))))
(assert (= a_102 (seq.update a_100 i2 (seq.unit e_101))))
(assert (= a_104 (seq.update a_102 i6 (seq.unit e_103))))
(assert (= a_106 (seq.update a_104 i0 (seq.unit e_105))))
(assert (= a_108 (seq.update a_106 i5 (seq.unit e_107))))
(assert (= a_110 (seq.update a_108 i3 (seq.unit e_109))))
(assert (= a_112 (seq.update a_110 i6 (seq.unit e_111))))
(assert (= a_114 (seq.update a_112 i5 (seq.unit e_113))))
(assert (= a_116 (seq.update a_114 i3 (seq.unit e_115))))
(assert (= a_118 (seq.update a_116 i4 (seq.unit e_117))))
(assert (= a_119 (seq.update a_94 i5 (seq.unit e_97))))
(assert (= a_120 (seq.update a_119 i2 (seq.unit e_95))))
(assert (= a_122 (seq.update a_120 i2 (seq.unit e_121))))
(assert (= a_124 (seq.update a_122 i4 (seq.unit e_123))))
(assert (= a_126 (seq.update a_124 i0 (seq.unit e_125))))
(assert (= a_128 (seq.update a_126 i6 (seq.unit e_127))))
(assert (= a_130 (seq.update a_128 i5 (seq.unit e_129))))
(assert (= a_132 (seq.update a_130 i3 (seq.unit e_131))))
(assert (= a_134 (seq.update a_132 i6 (seq.unit e_133))))
(assert (= a_136 (seq.update a_134 i5 (seq.unit e_135))))
(assert (= a_138 (seq.update a_136 i3 (seq.unit e_137))))
(assert (= a_140 (seq.update a_138 i5 (seq.unit e_139))))
(assert (= a_92 (seq.update a1 i1 (seq.unit e_91))))
(assert (= a_94 (seq.update a_92 i4 (seq.unit e_93))))
(assert (= a_96 (seq.update a_94 i2 (seq.unit e_95))))
(assert (= a_98 (seq.update a_96 i5 (seq.unit e_97))))
(assert (= e_101 (seq.nth a_98 i4)))
(assert (= e_103 (seq.nth a_102 i0)))
(assert (= e_105 (seq.nth a_102 i6)))
(assert (= e_107 (seq.nth a_106 i3)))
(assert (= e_109 (seq.nth a_106 i5)))
(assert (= e_111 (seq.nth a_110 i5)))
(assert (= e_113 (seq.nth a_110 i6)))
(assert (= e_115 (seq.nth a_114 i4)))
(assert (= e_117 (seq.nth a_114 i3)))
(assert (= e_121 (seq.nth a_120 i4)))
(assert (= e_123 (seq.nth a_120 i2)))
(assert (= e_125 (seq.nth a_124 i6)))
(assert (= e_127 (seq.nth a_124 i0)))
(assert (= e_129 (seq.nth a_128 i3)))
(assert (= e_131 (seq.nth a_128 i5)))
(assert (= e_133 (seq.nth a_132 i5)))
(assert (= e_135 (seq.nth a_132 i6)))
(assert (= e_137 (seq.nth a_136 i5)))
(assert (= e_139 (seq.nth a_136 i3)))
(assert (= e_91 (seq.nth a1 i4)))
(assert (= e_93 (seq.nth a1 i1)))
(assert (= e_95 (seq.nth a_94 i5)))
(assert (= e_97 (seq.nth a_94 i2)))
(assert (= e_99 (seq.nth a_98 i2)))
(assert (not (= a_118 a_140)))
(check-sat)
(exit)
