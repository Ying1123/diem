(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)

(declare-sort Element 0)
(declare-fun a_396 () (Seq Element))
(declare-fun a_397 () (Seq Element))
(declare-fun a_399 () (Seq Element))
(declare-fun a_401 () (Seq Element))
(declare-fun a_403 () (Seq Element))
(declare-fun a_404 () (Seq Element))
(declare-fun a_406 () (Seq Element))
(declare-fun a_408 () (Seq Element))
(declare-fun a_409 () (Seq Element))
(declare-fun a_410 () (Seq Element))
(declare-fun a_412 () (Seq Element))
(declare-fun a_413 () (Seq Element))
(declare-fun a_415 () (Seq Element))
(declare-fun a_416 () (Seq Element))
(declare-fun e_395 () Element)
(declare-fun e_398 () Element)
(declare-fun e_400 () Element)
(declare-fun e_402 () Element)
(declare-fun e_405 () Element)
(declare-fun e_407 () Element)
(declare-fun e_411 () Element)
(declare-fun e_414 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(assert (= a_396 (seq.update a1 i1 (seq.unit e_395))))
(assert (= a_397 (seq.update a_396 i1 (seq.unit e_395))))
(assert (= a_399 (seq.update a_397 i2 (seq.unit e_398))))
(assert (= a_401 (seq.update a_399 i0 (seq.unit e_400))))
(assert (= a_403 (seq.update a_401 i3 (seq.unit e_402))))
(assert (= a_404 (seq.update a_403 i3 (seq.unit e_402))))
(assert (= a_406 (seq.update a_404 i1 (seq.unit e_405))))
(assert (= a_408 (seq.update a_406 i2 (seq.unit e_407))))
(assert (= a_409 (seq.update a_397 i0 (seq.unit e_400))))
(assert (= a_410 (seq.update a_409 i2 (seq.unit e_398))))
(assert (= a_412 (seq.update a_410 i3 (seq.unit e_411))))
(assert (= a_413 (seq.update a_412 i3 (seq.unit e_411))))
(assert (= a_415 (seq.update a_413 i2 (seq.unit e_414))))
(assert (= a_416 (seq.update a_415 i2 (seq.unit e_414))))
(assert (= e_395 (seq.nth a1 i1)))
(assert (= e_398 (seq.nth a_397 i0)))
(assert (= e_400 (seq.nth a_397 i2)))
(assert (= e_402 (seq.nth a_401 i3)))
(assert (= e_405 (seq.nth a_404 i2)))
(assert (= e_407 (seq.nth a_404 i1)))
(assert (= e_411 (seq.nth a_410 i3)))
(assert (= e_414 (seq.nth a_413 i2)))
(assert (not (= a_408 a_416)))
(check-sat)
(exit)
