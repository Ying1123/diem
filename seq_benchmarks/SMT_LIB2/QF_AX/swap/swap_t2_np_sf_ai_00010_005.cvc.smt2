(set-info :smt-lib-version 2.6)
(set-logic QF_AX)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-sort Index 0)
(declare-sort Element 0)
(declare-fun a_566 () (Array Index Element))
(declare-fun a_568 () (Array Index Element))
(declare-fun a_570 () (Array Index Element))
(declare-fun a_572 () (Array Index Element))
(declare-fun a_574 () (Array Index Element))
(declare-fun a_576 () (Array Index Element))
(declare-fun a_578 () (Array Index Element))
(declare-fun a_580 () (Array Index Element))
(declare-fun a_582 () (Array Index Element))
(declare-fun a_584 () (Array Index Element))
(declare-fun a_586 () (Array Index Element))
(declare-fun a_588 () (Array Index Element))
(declare-fun a_590 () (Array Index Element))
(declare-fun a_592 () (Array Index Element))
(declare-fun a_594 () (Array Index Element))
(declare-fun a_596 () (Array Index Element))
(declare-fun a_598 () (Array Index Element))
(declare-fun a_600 () (Array Index Element))
(declare-fun a_602 () (Array Index Element))
(declare-fun a_604 () (Array Index Element))
(declare-fun a_605 () (Array Index Element))
(declare-fun a_606 () (Array Index Element))
(declare-fun a_608 () (Array Index Element))
(declare-fun a_610 () (Array Index Element))
(declare-fun a_612 () (Array Index Element))
(declare-fun a_614 () (Array Index Element))
(declare-fun a_616 () (Array Index Element))
(declare-fun a_618 () (Array Index Element))
(declare-fun a_620 () (Array Index Element))
(declare-fun a_622 () (Array Index Element))
(declare-fun a_624 () (Array Index Element))
(declare-fun a_626 () (Array Index Element))
(declare-fun a_628 () (Array Index Element))
(declare-fun a_630 () (Array Index Element))
(declare-fun e_565 () Element)
(declare-fun e_567 () Element)
(declare-fun e_569 () Element)
(declare-fun e_571 () Element)
(declare-fun e_573 () Element)
(declare-fun e_575 () Element)
(declare-fun e_577 () Element)
(declare-fun e_579 () Element)
(declare-fun e_581 () Element)
(declare-fun e_583 () Element)
(declare-fun e_585 () Element)
(declare-fun e_587 () Element)
(declare-fun e_589 () Element)
(declare-fun e_591 () Element)
(declare-fun e_593 () Element)
(declare-fun e_595 () Element)
(declare-fun e_597 () Element)
(declare-fun e_599 () Element)
(declare-fun e_601 () Element)
(declare-fun e_603 () Element)
(declare-fun e_607 () Element)
(declare-fun e_609 () Element)
(declare-fun e_611 () Element)
(declare-fun e_613 () Element)
(declare-fun e_615 () Element)
(declare-fun e_617 () Element)
(declare-fun e_619 () Element)
(declare-fun e_621 () Element)
(declare-fun e_623 () Element)
(declare-fun e_625 () Element)
(declare-fun e_627 () Element)
(declare-fun e_629 () Element)
(declare-fun a1 () (Array Index Element))
(declare-fun i0 () Index)
(declare-fun i1 () Index)
(declare-fun i2 () Index)
(declare-fun i3 () Index)
(declare-fun i4 () Index)
(declare-fun i5 () Index)
(declare-fun i6 () Index)
(declare-fun i7 () Index)
(declare-fun i8 () Index)
(declare-fun i9 () Index)
(assert (= a_566 (store a1 i4 e_565)))
(assert (= a_568 (store a_566 i3 e_567)))
(assert (= a_570 (store a_568 i6 e_569)))
(assert (= a_572 (store a_570 i7 e_571)))
(assert (= a_574 (store a_572 i5 e_573)))
(assert (= a_576 (store a_574 i0 e_575)))
(assert (= a_578 (store a_576 i4 e_577)))
(assert (= a_580 (store a_578 i7 e_579)))
(assert (= a_582 (store a_580 i3 e_581)))
(assert (= a_584 (store a_582 i6 e_583)))
(assert (= a_586 (store a_584 i8 e_585)))
(assert (= a_588 (store a_586 i2 e_587)))
(assert (= a_590 (store a_588 i7 e_589)))
(assert (= a_592 (store a_590 i2 e_591)))
(assert (= a_594 (store a_592 i6 e_593)))
(assert (= a_596 (store a_594 i4 e_595)))
(assert (= a_598 (store a_596 i2 e_597)))
(assert (= a_600 (store a_598 i9 e_599)))
(assert (= a_602 (store a_600 i1 e_601)))
(assert (= a_604 (store a_602 i2 e_603)))
(assert (= a_605 (store a_576 i7 e_579)))
(assert (= a_606 (store a_605 i4 e_577)))
(assert (= a_608 (store a_606 i3 e_607)))
(assert (= a_610 (store a_608 i6 e_609)))
(assert (= a_612 (store a_610 i8 e_611)))
(assert (= a_614 (store a_612 i2 e_613)))
(assert (= a_616 (store a_614 i7 e_615)))
(assert (= a_618 (store a_616 i2 e_617)))
(assert (= a_620 (store a_618 i6 e_619)))
(assert (= a_622 (store a_620 i4 e_621)))
(assert (= a_624 (store a_622 i9 e_623)))
(assert (= a_626 (store a_624 i2 e_625)))
(assert (= a_628 (store a_626 i1 e_627)))
(assert (= a_630 (store a_628 i2 e_629)))
(assert (= e_565 (select a1 i3)))
(assert (= e_567 (select a1 i4)))
(assert (= e_569 (select a_568 i7)))
(assert (= e_571 (select a_568 i6)))
(assert (= e_573 (select a_572 i0)))
(assert (= e_575 (select a_572 i5)))
(assert (= e_577 (select a_576 i7)))
(assert (= e_579 (select a_576 i4)))
(assert (= e_581 (select a_580 i6)))
(assert (= e_583 (select a_580 i3)))
(assert (= e_585 (select a_584 i2)))
(assert (= e_587 (select a_584 i8)))
(assert (= e_589 (select a_588 i2)))
(assert (= e_591 (select a_588 i7)))
(assert (= e_593 (select a_592 i4)))
(assert (= e_595 (select a_592 i6)))
(assert (= e_597 (select a_596 i9)))
(assert (= e_599 (select a_596 i2)))
(assert (= e_601 (select a_600 i2)))
(assert (= e_603 (select a_600 i1)))
(assert (= e_607 (select a_606 i6)))
(assert (= e_609 (select a_606 i3)))
(assert (= e_611 (select a_610 i2)))
(assert (= e_613 (select a_610 i8)))
(assert (= e_615 (select a_614 i2)))
(assert (= e_617 (select a_614 i7)))
(assert (= e_619 (select a_618 i4)))
(assert (= e_621 (select a_618 i6)))
(assert (= e_623 (select a_622 i2)))
(assert (= e_625 (select a_622 i9)))
(assert (= e_627 (select a_626 i2)))
(assert (= e_629 (select a_626 i1)))
(assert (not (= a_604 a_630)))
(check-sat)
(exit)
