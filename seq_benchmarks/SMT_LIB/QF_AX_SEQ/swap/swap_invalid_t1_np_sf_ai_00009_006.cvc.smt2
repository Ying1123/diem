(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)

(declare-sort Element 0)
(declare-fun a_404 () (Seq Element))
(declare-fun a_406 () (Seq Element))
(declare-fun a_408 () (Seq Element))
(declare-fun a_410 () (Seq Element))
(declare-fun a_412 () (Seq Element))
(declare-fun a_414 () (Seq Element))
(declare-fun a_416 () (Seq Element))
(declare-fun a_418 () (Seq Element))
(declare-fun a_420 () (Seq Element))
(declare-fun a_422 () (Seq Element))
(declare-fun a_424 () (Seq Element))
(declare-fun a_426 () (Seq Element))
(declare-fun a_428 () (Seq Element))
(declare-fun a_430 () (Seq Element))
(declare-fun a_432 () (Seq Element))
(declare-fun a_434 () (Seq Element))
(declare-fun a_436 () (Seq Element))
(declare-fun a_438 () (Seq Element))
(declare-fun a_439 () (Seq Element))
(declare-fun a_440 () (Seq Element))
(declare-fun a_442 () (Seq Element))
(declare-fun a_444 () (Seq Element))
(declare-fun a_446 () (Seq Element))
(declare-fun a_448 () (Seq Element))
(declare-fun a_450 () (Seq Element))
(declare-fun a_452 () (Seq Element))
(declare-fun a_454 () (Seq Element))
(declare-fun a_456 () (Seq Element))
(declare-fun a_458 () (Seq Element))
(declare-fun a_460 () (Seq Element))
(declare-fun a_462 () (Seq Element))
(declare-fun a_464 () (Seq Element))
(declare-fun a_466 () (Seq Element))
(declare-fun a_468 () (Seq Element))
(declare-fun a_470 () (Seq Element))
(declare-fun a_472 () (Seq Element))
(declare-fun e_403 () Element)
(declare-fun e_405 () Element)
(declare-fun e_407 () Element)
(declare-fun e_409 () Element)
(declare-fun e_411 () Element)
(declare-fun e_413 () Element)
(declare-fun e_415 () Element)
(declare-fun e_417 () Element)
(declare-fun e_419 () Element)
(declare-fun e_421 () Element)
(declare-fun e_423 () Element)
(declare-fun e_425 () Element)
(declare-fun e_427 () Element)
(declare-fun e_429 () Element)
(declare-fun e_431 () Element)
(declare-fun e_433 () Element)
(declare-fun e_435 () Element)
(declare-fun e_437 () Element)
(declare-fun e_441 () Element)
(declare-fun e_443 () Element)
(declare-fun e_445 () Element)
(declare-fun e_447 () Element)
(declare-fun e_449 () Element)
(declare-fun e_451 () Element)
(declare-fun e_453 () Element)
(declare-fun e_455 () Element)
(declare-fun e_457 () Element)
(declare-fun e_459 () Element)
(declare-fun e_461 () Element)
(declare-fun e_463 () Element)
(declare-fun e_465 () Element)
(declare-fun e_467 () Element)
(declare-fun e_469 () Element)
(declare-fun e_471 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(declare-fun i8 () Int)
(assert (= a_404 (seq.update a1 i4 (seq.unit e_403))))
(assert (= a_406 (seq.update a_404 i0 (seq.unit e_405))))
(assert (= a_408 (seq.update a_406 i6 (seq.unit e_407))))
(assert (= a_410 (seq.update a_408 i1 (seq.unit e_409))))
(assert (= a_412 (seq.update a_410 i2 (seq.unit e_411))))
(assert (= a_414 (seq.update a_412 i4 (seq.unit e_413))))
(assert (= a_416 (seq.update a_414 i1 (seq.unit e_415))))
(assert (= a_418 (seq.update a_416 i4 (seq.unit e_417))))
(assert (= a_420 (seq.update a_418 i0 (seq.unit e_419))))
(assert (= a_422 (seq.update a_420 i5 (seq.unit e_421))))
(assert (= a_424 (seq.update a_422 i7 (seq.unit e_423))))
(assert (= a_426 (seq.update a_424 i5 (seq.unit e_425))))
(assert (= a_428 (seq.update a_426 i8 (seq.unit e_427))))
(assert (= a_430 (seq.update a_428 i6 (seq.unit e_429))))
(assert (= a_432 (seq.update a_430 i4 (seq.unit e_431))))
(assert (= a_434 (seq.update a_432 i3 (seq.unit e_433))))
(assert (= a_436 (seq.update a_434 i4 (seq.unit e_435))))
(assert (= a_438 (seq.update a_436 i3 (seq.unit e_437))))
(assert (= a_439 (seq.update a1 i0 (seq.unit e_405))))
(assert (= a_440 (seq.update a_439 i4 (seq.unit e_403))))
(assert (= a_442 (seq.update a_440 i1 (seq.unit e_441))))
(assert (= a_444 (seq.update a_442 i6 (seq.unit e_443))))
(assert (= a_446 (seq.update a_444 i2 (seq.unit e_445))))
(assert (= a_448 (seq.update a_446 i4 (seq.unit e_447))))
(assert (= a_450 (seq.update a_448 i1 (seq.unit e_449))))
(assert (= a_452 (seq.update a_450 i4 (seq.unit e_451))))
(assert (= a_454 (seq.update a_452 i0 (seq.unit e_453))))
(assert (= a_456 (seq.update a_454 i5 (seq.unit e_455))))
(assert (= a_458 (seq.update a_456 i7 (seq.unit e_457))))
(assert (= a_460 (seq.update a_458 i5 (seq.unit e_459))))
(assert (= a_462 (seq.update a_460 i8 (seq.unit e_461))))
(assert (= a_464 (seq.update a_462 i6 (seq.unit e_463))))
(assert (= a_466 (seq.update a_464 i3 (seq.unit e_465))))
(assert (= a_468 (seq.update a_466 i4 (seq.unit e_467))))
(assert (= a_470 (seq.update a_468 i5 (seq.unit e_469))))
(assert (= a_472 (seq.update a_470 i3 (seq.unit e_471))))
(assert (= e_403 (seq.nth a1 i0)))
(assert (= e_405 (seq.nth a1 i4)))
(assert (= e_407 (seq.nth a_406 i1)))
(assert (= e_409 (seq.nth a_406 i6)))
(assert (= e_411 (seq.nth a_410 i4)))
(assert (= e_413 (seq.nth a_410 i2)))
(assert (= e_415 (seq.nth a_414 i4)))
(assert (= e_417 (seq.nth a_414 i1)))
(assert (= e_419 (seq.nth a_418 i5)))
(assert (= e_421 (seq.nth a_418 i0)))
(assert (= e_423 (seq.nth a_422 i5)))
(assert (= e_425 (seq.nth a_422 i7)))
(assert (= e_427 (seq.nth a_426 i6)))
(assert (= e_429 (seq.nth a_426 i8)))
(assert (= e_431 (seq.nth a_430 i3)))
(assert (= e_433 (seq.nth a_430 i4)))
(assert (= e_435 (seq.nth a_434 i3)))
(assert (= e_437 (seq.nth a_434 i4)))
(assert (= e_441 (seq.nth a_440 i6)))
(assert (= e_443 (seq.nth a_440 i1)))
(assert (= e_445 (seq.nth a_444 i4)))
(assert (= e_447 (seq.nth a_444 i2)))
(assert (= e_449 (seq.nth a_448 i4)))
(assert (= e_451 (seq.nth a_448 i1)))
(assert (= e_453 (seq.nth a_452 i5)))
(assert (= e_455 (seq.nth a_452 i0)))
(assert (= e_457 (seq.nth a_456 i5)))
(assert (= e_459 (seq.nth a_456 i7)))
(assert (= e_461 (seq.nth a_460 i6)))
(assert (= e_463 (seq.nth a_460 i8)))
(assert (= e_465 (seq.nth a_464 i4)))
(assert (= e_467 (seq.nth a_464 i3)))
(assert (= e_469 (seq.nth a_468 i3)))
(assert (= e_471 (seq.nth a_468 i5)))
(assert (not (= a_438 a_472)))
(check-sat)
(exit)
