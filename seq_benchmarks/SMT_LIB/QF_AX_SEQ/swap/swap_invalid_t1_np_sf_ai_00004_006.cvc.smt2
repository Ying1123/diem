(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)

(declare-sort Element 0)
(declare-fun a_151 () (Seq Element))
(declare-fun a_153 () (Seq Element))
(declare-fun a_155 () (Seq Element))
(declare-fun a_157 () (Seq Element))
(declare-fun a_159 () (Seq Element))
(declare-fun a_160 () (Seq Element))
(declare-fun a_162 () (Seq Element))
(declare-fun a_164 () (Seq Element))
(declare-fun a_165 () (Seq Element))
(declare-fun a_166 () (Seq Element))
(declare-fun a_168 () (Seq Element))
(declare-fun a_169 () (Seq Element))
(declare-fun a_171 () (Seq Element))
(declare-fun a_173 () (Seq Element))
(declare-fun e_150 () Element)
(declare-fun e_152 () Element)
(declare-fun e_154 () Element)
(declare-fun e_156 () Element)
(declare-fun e_158 () Element)
(declare-fun e_161 () Element)
(declare-fun e_163 () Element)
(declare-fun e_167 () Element)
(declare-fun e_170 () Element)
(declare-fun e_172 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(assert (= a_151 (seq.update a1 i3 (seq.unit e_150))))
(assert (= a_153 (seq.update a_151 i2 (seq.unit e_152))))
(assert (= a_155 (seq.update a_153 i0 (seq.unit e_154))))
(assert (= a_157 (seq.update a_155 i2 (seq.unit e_156))))
(assert (= a_159 (seq.update a_157 i3 (seq.unit e_158))))
(assert (= a_160 (seq.update a_159 i3 (seq.unit e_158))))
(assert (= a_162 (seq.update a_160 i1 (seq.unit e_161))))
(assert (= a_164 (seq.update a_162 i3 (seq.unit e_163))))
(assert (= a_165 (seq.update a_153 i2 (seq.unit e_156))))
(assert (= a_166 (seq.update a_165 i0 (seq.unit e_154))))
(assert (= a_168 (seq.update a_166 i3 (seq.unit e_167))))
(assert (= a_169 (seq.update a_168 i3 (seq.unit e_167))))
(assert (= a_171 (seq.update a_169 i3 (seq.unit e_170))))
(assert (= a_173 (seq.update a_171 i2 (seq.unit e_172))))
(assert (= e_150 (seq.nth a1 i2)))
(assert (= e_152 (seq.nth a1 i3)))
(assert (= e_154 (seq.nth a_153 i2)))
(assert (= e_156 (seq.nth a_153 i0)))
(assert (= e_158 (seq.nth a_157 i3)))
(assert (= e_161 (seq.nth a_160 i3)))
(assert (= e_163 (seq.nth a_160 i1)))
(assert (= e_167 (seq.nth a_166 i3)))
(assert (= e_170 (seq.nth a_169 i2)))
(assert (= e_172 (seq.nth a_169 i3)))
(assert (not (= a_164 a_173)))
(check-sat)
(exit)
