(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)

(declare-sort Element 0)
(declare-fun a_346 () (Seq Element))
(declare-fun a_348 () (Seq Element))
(declare-fun a_350 () (Seq Element))
(declare-fun a_352 () (Seq Element))
(declare-fun a_354 () (Seq Element))
(declare-fun a_355 () (Seq Element))
(declare-fun a_357 () (Seq Element))
(declare-fun a_359 () (Seq Element))
(declare-fun a_361 () (Seq Element))
(declare-fun a_363 () (Seq Element))
(declare-fun a_365 () (Seq Element))
(declare-fun a_367 () (Seq Element))
(declare-fun a_369 () (Seq Element))
(declare-fun a_371 () (Seq Element))
(declare-fun a_373 () (Seq Element))
(declare-fun a_375 () (Seq Element))
(declare-fun a_376 () (Seq Element))
(declare-fun a_377 () (Seq Element))
(declare-fun a_379 () (Seq Element))
(declare-fun a_381 () (Seq Element))
(declare-fun a_383 () (Seq Element))
(declare-fun a_384 () (Seq Element))
(declare-fun a_386 () (Seq Element))
(declare-fun a_388 () (Seq Element))
(declare-fun a_390 () (Seq Element))
(declare-fun a_392 () (Seq Element))
(declare-fun a_394 () (Seq Element))
(declare-fun a_396 () (Seq Element))
(declare-fun a_398 () (Seq Element))
(declare-fun a_400 () (Seq Element))
(declare-fun a_402 () (Seq Element))
(declare-fun a_404 () (Seq Element))
(declare-fun e_345 () Element)
(declare-fun e_347 () Element)
(declare-fun e_349 () Element)
(declare-fun e_351 () Element)
(declare-fun e_353 () Element)
(declare-fun e_356 () Element)
(declare-fun e_358 () Element)
(declare-fun e_360 () Element)
(declare-fun e_362 () Element)
(declare-fun e_364 () Element)
(declare-fun e_366 () Element)
(declare-fun e_368 () Element)
(declare-fun e_370 () Element)
(declare-fun e_372 () Element)
(declare-fun e_374 () Element)
(declare-fun e_378 () Element)
(declare-fun e_380 () Element)
(declare-fun e_382 () Element)
(declare-fun e_385 () Element)
(declare-fun e_387 () Element)
(declare-fun e_389 () Element)
(declare-fun e_391 () Element)
(declare-fun e_393 () Element)
(declare-fun e_395 () Element)
(declare-fun e_397 () Element)
(declare-fun e_399 () Element)
(declare-fun e_401 () Element)
(declare-fun e_403 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(assert (= a_346 (seq.update a1 i3 (seq.unit e_345))))
(assert (= a_348 (seq.update a_346 i7 (seq.unit e_347))))
(assert (= a_350 (seq.update a_348 i4 (seq.unit e_349))))
(assert (= a_352 (seq.update a_350 i0 (seq.unit e_351))))
(assert (= a_354 (seq.update a_352 i7 (seq.unit e_353))))
(assert (= a_355 (seq.update a_354 i7 (seq.unit e_353))))
(assert (= a_357 (seq.update a_355 i1 (seq.unit e_356))))
(assert (= a_359 (seq.update a_357 i7 (seq.unit e_358))))
(assert (= a_361 (seq.update a_359 i6 (seq.unit e_360))))
(assert (= a_363 (seq.update a_361 i5 (seq.unit e_362))))
(assert (= a_365 (seq.update a_363 i1 (seq.unit e_364))))
(assert (= a_367 (seq.update a_365 i6 (seq.unit e_366))))
(assert (= a_369 (seq.update a_367 i6 (seq.unit e_368))))
(assert (= a_371 (seq.update a_369 i2 (seq.unit e_370))))
(assert (= a_373 (seq.update a_371 i3 (seq.unit e_372))))
(assert (= a_375 (seq.update a_373 i0 (seq.unit e_374))))
(assert (= a_376 (seq.update a1 i7 (seq.unit e_347))))
(assert (= a_377 (seq.update a_376 i3 (seq.unit e_345))))
(assert (= a_379 (seq.update a_377 i4 (seq.unit e_378))))
(assert (= a_381 (seq.update a_379 i0 (seq.unit e_380))))
(assert (= a_383 (seq.update a_381 i7 (seq.unit e_382))))
(assert (= a_384 (seq.update a_383 i7 (seq.unit e_382))))
(assert (= a_386 (seq.update a_384 i7 (seq.unit e_385))))
(assert (= a_388 (seq.update a_386 i1 (seq.unit e_387))))
(assert (= a_390 (seq.update a_388 i6 (seq.unit e_389))))
(assert (= a_392 (seq.update a_390 i5 (seq.unit e_391))))
(assert (= a_394 (seq.update a_392 i6 (seq.unit e_393))))
(assert (= a_396 (seq.update a_394 i1 (seq.unit e_395))))
(assert (= a_398 (seq.update a_396 i2 (seq.unit e_397))))
(assert (= a_400 (seq.update a_398 i6 (seq.unit e_399))))
(assert (= a_402 (seq.update a_400 i0 (seq.unit e_401))))
(assert (= a_404 (seq.update a_402 i3 (seq.unit e_403))))
(assert (= e_345 (seq.nth a1 i7)))
(assert (= e_347 (seq.nth a1 i3)))
(assert (= e_349 (seq.nth a_348 i0)))
(assert (= e_351 (seq.nth a_348 i4)))
(assert (= e_353 (seq.nth a_352 i7)))
(assert (= e_356 (seq.nth a_355 i7)))
(assert (= e_358 (seq.nth a_355 i1)))
(assert (= e_360 (seq.nth a_359 i5)))
(assert (= e_362 (seq.nth a_359 i6)))
(assert (= e_364 (seq.nth a_363 i6)))
(assert (= e_366 (seq.nth a_363 i1)))
(assert (= e_368 (seq.nth a_367 i2)))
(assert (= e_370 (seq.nth a_367 i6)))
(assert (= e_372 (seq.nth a_371 i0)))
(assert (= e_374 (seq.nth a_371 i3)))
(assert (= e_378 (seq.nth a_377 i0)))
(assert (= e_380 (seq.nth a_377 i4)))
(assert (= e_382 (seq.nth a_381 i7)))
(assert (= e_385 (seq.nth a_384 i1)))
(assert (= e_387 (seq.nth a_384 i7)))
(assert (= e_389 (seq.nth a_388 i5)))
(assert (= e_391 (seq.nth a_388 i6)))
(assert (= e_393 (seq.nth a_392 i1)))
(assert (= e_395 (seq.nth a_392 i6)))
(assert (= e_397 (seq.nth a_396 i6)))
(assert (= e_399 (seq.nth a_396 i2)))
(assert (= e_401 (seq.nth a_400 i3)))
(assert (= e_403 (seq.nth a_400 i0)))
(assert (not (= a_375 a_404)))
(check-sat)
(exit)
