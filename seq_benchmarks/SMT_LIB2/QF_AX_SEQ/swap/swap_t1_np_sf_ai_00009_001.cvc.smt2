(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)

(declare-sort Element 0)
(declare-fun a_1068 () (Seq Element))
(declare-fun a_1070 () (Seq Element))
(declare-fun a_1072 () (Seq Element))
(declare-fun a_1073 () (Seq Element))
(declare-fun a_1075 () (Seq Element))
(declare-fun a_1077 () (Seq Element))
(declare-fun a_1079 () (Seq Element))
(declare-fun a_1081 () (Seq Element))
(declare-fun a_1083 () (Seq Element))
(declare-fun a_1085 () (Seq Element))
(declare-fun a_1087 () (Seq Element))
(declare-fun a_1089 () (Seq Element))
(declare-fun a_1091 () (Seq Element))
(declare-fun a_1093 () (Seq Element))
(declare-fun a_1095 () (Seq Element))
(declare-fun a_1097 () (Seq Element))
(declare-fun a_1099 () (Seq Element))
(declare-fun a_1101 () (Seq Element))
(declare-fun a_1102 () (Seq Element))
(declare-fun a_1103 () (Seq Element))
(declare-fun a_1105 () (Seq Element))
(declare-fun a_1106 () (Seq Element))
(declare-fun a_1108 () (Seq Element))
(declare-fun a_1110 () (Seq Element))
(declare-fun a_1112 () (Seq Element))
(declare-fun a_1114 () (Seq Element))
(declare-fun a_1116 () (Seq Element))
(declare-fun a_1118 () (Seq Element))
(declare-fun a_1120 () (Seq Element))
(declare-fun a_1122 () (Seq Element))
(declare-fun a_1124 () (Seq Element))
(declare-fun a_1126 () (Seq Element))
(declare-fun a_1128 () (Seq Element))
(declare-fun a_1130 () (Seq Element))
(declare-fun a_1132 () (Seq Element))
(declare-fun a_1134 () (Seq Element))
(declare-fun e_1067 () Element)
(declare-fun e_1069 () Element)
(declare-fun e_1071 () Element)
(declare-fun e_1074 () Element)
(declare-fun e_1076 () Element)
(declare-fun e_1078 () Element)
(declare-fun e_1080 () Element)
(declare-fun e_1082 () Element)
(declare-fun e_1084 () Element)
(declare-fun e_1086 () Element)
(declare-fun e_1088 () Element)
(declare-fun e_1090 () Element)
(declare-fun e_1092 () Element)
(declare-fun e_1094 () Element)
(declare-fun e_1096 () Element)
(declare-fun e_1098 () Element)
(declare-fun e_1100 () Element)
(declare-fun e_1104 () Element)
(declare-fun e_1107 () Element)
(declare-fun e_1109 () Element)
(declare-fun e_1111 () Element)
(declare-fun e_1113 () Element)
(declare-fun e_1115 () Element)
(declare-fun e_1117 () Element)
(declare-fun e_1119 () Element)
(declare-fun e_1121 () Element)
(declare-fun e_1123 () Element)
(declare-fun e_1125 () Element)
(declare-fun e_1127 () Element)
(declare-fun e_1129 () Element)
(declare-fun e_1131 () Element)
(declare-fun e_1133 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(declare-fun i8 () Int)
(assert (= a_1068 (seq.update a1 i6 (seq.unit e_1067))))
(assert (= a_1070 (seq.update a_1068 i8 (seq.unit e_1069))))
(assert (= a_1072 (seq.update a_1070 i2 (seq.unit e_1071))))
(assert (= a_1073 (seq.update a_1072 i2 (seq.unit e_1071))))
(assert (= a_1075 (seq.update a_1073 i8 (seq.unit e_1074))))
(assert (= a_1077 (seq.update a_1075 i0 (seq.unit e_1076))))
(assert (= a_1079 (seq.update a_1077 i3 (seq.unit e_1078))))
(assert (= a_1081 (seq.update a_1079 i1 (seq.unit e_1080))))
(assert (= a_1083 (seq.update a_1081 i3 (seq.unit e_1082))))
(assert (= a_1085 (seq.update a_1083 i8 (seq.unit e_1084))))
(assert (= a_1087 (seq.update a_1085 i7 (seq.unit e_1086))))
(assert (= a_1089 (seq.update a_1087 i8 (seq.unit e_1088))))
(assert (= a_1091 (seq.update a_1089 i5 (seq.unit e_1090))))
(assert (= a_1093 (seq.update a_1091 i6 (seq.unit e_1092))))
(assert (= a_1095 (seq.update a_1093 i1 (seq.unit e_1094))))
(assert (= a_1097 (seq.update a_1095 i7 (seq.unit e_1096))))
(assert (= a_1099 (seq.update a_1097 i5 (seq.unit e_1098))))
(assert (= a_1101 (seq.update a_1099 i8 (seq.unit e_1100))))
(assert (= a_1102 (seq.update a1 i8 (seq.unit e_1069))))
(assert (= a_1103 (seq.update a_1102 i6 (seq.unit e_1067))))
(assert (= a_1105 (seq.update a_1103 i2 (seq.unit e_1104))))
(assert (= a_1106 (seq.update a_1105 i2 (seq.unit e_1104))))
(assert (= a_1108 (seq.update a_1106 i0 (seq.unit e_1107))))
(assert (= a_1110 (seq.update a_1108 i8 (seq.unit e_1109))))
(assert (= a_1112 (seq.update a_1110 i1 (seq.unit e_1111))))
(assert (= a_1114 (seq.update a_1112 i3 (seq.unit e_1113))))
(assert (= a_1116 (seq.update a_1114 i8 (seq.unit e_1115))))
(assert (= a_1118 (seq.update a_1116 i3 (seq.unit e_1117))))
(assert (= a_1120 (seq.update a_1118 i8 (seq.unit e_1119))))
(assert (= a_1122 (seq.update a_1120 i7 (seq.unit e_1121))))
(assert (= a_1124 (seq.update a_1122 i6 (seq.unit e_1123))))
(assert (= a_1126 (seq.update a_1124 i5 (seq.unit e_1125))))
(assert (= a_1128 (seq.update a_1126 i7 (seq.unit e_1127))))
(assert (= a_1130 (seq.update a_1128 i1 (seq.unit e_1129))))
(assert (= a_1132 (seq.update a_1130 i8 (seq.unit e_1131))))
(assert (= a_1134 (seq.update a_1132 i5 (seq.unit e_1133))))
(assert (= e_1067 (seq.nth a1 i8)))
(assert (= e_1069 (seq.nth a1 i6)))
(assert (= e_1071 (seq.nth a_1070 i2)))
(assert (= e_1074 (seq.nth a_1073 i0)))
(assert (= e_1076 (seq.nth a_1073 i8)))
(assert (= e_1078 (seq.nth a_1077 i1)))
(assert (= e_1080 (seq.nth a_1077 i3)))
(assert (= e_1082 (seq.nth a_1081 i8)))
(assert (= e_1084 (seq.nth a_1081 i3)))
(assert (= e_1086 (seq.nth a_1085 i8)))
(assert (= e_1088 (seq.nth a_1085 i7)))
(assert (= e_1090 (seq.nth a_1089 i6)))
(assert (= e_1092 (seq.nth a_1089 i5)))
(assert (= e_1094 (seq.nth a_1093 i7)))
(assert (= e_1096 (seq.nth a_1093 i1)))
(assert (= e_1098 (seq.nth a_1097 i8)))
(assert (= e_1100 (seq.nth a_1097 i5)))
(assert (= e_1104 (seq.nth a_1103 i2)))
(assert (= e_1107 (seq.nth a_1106 i8)))
(assert (= e_1109 (seq.nth a_1106 i0)))
(assert (= e_1111 (seq.nth a_1110 i3)))
(assert (= e_1113 (seq.nth a_1110 i1)))
(assert (= e_1115 (seq.nth a_1114 i3)))
(assert (= e_1117 (seq.nth a_1114 i8)))
(assert (= e_1119 (seq.nth a_1118 i7)))
(assert (= e_1121 (seq.nth a_1118 i8)))
(assert (= e_1123 (seq.nth a_1122 i5)))
(assert (= e_1125 (seq.nth a_1122 i6)))
(assert (= e_1127 (seq.nth a_1126 i1)))
(assert (= e_1129 (seq.nth a_1126 i7)))
(assert (= e_1131 (seq.nth a_1130 i5)))
(assert (= e_1133 (seq.nth a_1130 i8)))
(assert (not (= a_1101 a_1134)))
(check-sat)
(exit)
