(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)

(declare-sort Element 0)
(declare-fun a_119 () (Seq Element))
(declare-fun a_121 () (Seq Element))
(declare-fun a_123 () (Seq Element))
(declare-fun a_125 () (Seq Element))
(declare-fun a_127 () (Seq Element))
(declare-fun a_129 () (Seq Element))
(declare-fun a_131 () (Seq Element))
(declare-fun a_133 () (Seq Element))
(declare-fun a_135 () (Seq Element))
(declare-fun a_137 () (Seq Element))
(declare-fun a_139 () (Seq Element))
(declare-fun a_141 () (Seq Element))
(declare-fun a_143 () (Seq Element))
(declare-fun a_145 () (Seq Element))
(declare-fun a_147 () (Seq Element))
(declare-fun a_149 () (Seq Element))
(declare-fun a_150 () (Seq Element))
(declare-fun a_151 () (Seq Element))
(declare-fun a_153 () (Seq Element))
(declare-fun a_155 () (Seq Element))
(declare-fun a_157 () (Seq Element))
(declare-fun a_159 () (Seq Element))
(declare-fun a_161 () (Seq Element))
(declare-fun a_163 () (Seq Element))
(declare-fun a_165 () (Seq Element))
(declare-fun a_167 () (Seq Element))
(declare-fun a_169 () (Seq Element))
(declare-fun a_171 () (Seq Element))
(declare-fun a_173 () (Seq Element))
(declare-fun a_175 () (Seq Element))
(declare-fun a_177 () (Seq Element))
(declare-fun a_178 () (Seq Element))
(declare-fun e_118 () Element)
(declare-fun e_120 () Element)
(declare-fun e_122 () Element)
(declare-fun e_124 () Element)
(declare-fun e_126 () Element)
(declare-fun e_128 () Element)
(declare-fun e_130 () Element)
(declare-fun e_132 () Element)
(declare-fun e_134 () Element)
(declare-fun e_136 () Element)
(declare-fun e_138 () Element)
(declare-fun e_140 () Element)
(declare-fun e_142 () Element)
(declare-fun e_144 () Element)
(declare-fun e_146 () Element)
(declare-fun e_148 () Element)
(declare-fun e_152 () Element)
(declare-fun e_154 () Element)
(declare-fun e_156 () Element)
(declare-fun e_158 () Element)
(declare-fun e_160 () Element)
(declare-fun e_162 () Element)
(declare-fun e_164 () Element)
(declare-fun e_166 () Element)
(declare-fun e_168 () Element)
(declare-fun e_170 () Element)
(declare-fun e_172 () Element)
(declare-fun e_174 () Element)
(declare-fun e_176 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(assert (= a_119 (seq.update a1 i3 (seq.unit e_118))))
(assert (= a_121 (seq.update a_119 i4 (seq.unit e_120))))
(assert (= a_123 (seq.update a_121 i4 (seq.unit e_122))))
(assert (= a_125 (seq.update a_123 i0 (seq.unit e_124))))
(assert (= a_127 (seq.update a_125 i5 (seq.unit e_126))))
(assert (= a_129 (seq.update a_127 i2 (seq.unit e_128))))
(assert (= a_131 (seq.update a_129 i1 (seq.unit e_130))))
(assert (= a_133 (seq.update a_131 i5 (seq.unit e_132))))
(assert (= a_135 (seq.update a_133 i6 (seq.unit e_134))))
(assert (= a_137 (seq.update a_135 i5 (seq.unit e_136))))
(assert (= a_139 (seq.update a_137 i0 (seq.unit e_138))))
(assert (= a_141 (seq.update a_139 i7 (seq.unit e_140))))
(assert (= a_143 (seq.update a_141 i4 (seq.unit e_142))))
(assert (= a_145 (seq.update a_143 i0 (seq.unit e_144))))
(assert (= a_147 (seq.update a_145 i7 (seq.unit e_146))))
(assert (= a_149 (seq.update a_147 i6 (seq.unit e_148))))
(assert (= a_150 (seq.update a1 i4 (seq.unit e_120))))
(assert (= a_151 (seq.update a_150 i3 (seq.unit e_118))))
(assert (= a_153 (seq.update a_151 i0 (seq.unit e_152))))
(assert (= a_155 (seq.update a_153 i4 (seq.unit e_154))))
(assert (= a_157 (seq.update a_155 i2 (seq.unit e_156))))
(assert (= a_159 (seq.update a_157 i5 (seq.unit e_158))))
(assert (= a_161 (seq.update a_159 i1 (seq.unit e_160))))
(assert (= a_163 (seq.update a_161 i5 (seq.unit e_162))))
(assert (= a_165 (seq.update a_163 i6 (seq.unit e_164))))
(assert (= a_167 (seq.update a_165 i5 (seq.unit e_166))))
(assert (= a_169 (seq.update a_167 i7 (seq.unit e_168))))
(assert (= a_171 (seq.update a_169 i0 (seq.unit e_170))))
(assert (= a_173 (seq.update a_171 i4 (seq.unit e_172))))
(assert (= a_175 (seq.update a_173 i0 (seq.unit e_174))))
(assert (= a_177 (seq.update a_175 i7 (seq.unit e_176))))
(assert (= a_178 (seq.update a_177 i7 (seq.unit e_176))))
(assert (= e_118 (seq.nth a1 i4)))
(assert (= e_120 (seq.nth a1 i3)))
(assert (= e_122 (seq.nth a_121 i0)))
(assert (= e_124 (seq.nth a_121 i4)))
(assert (= e_126 (seq.nth a_125 i2)))
(assert (= e_128 (seq.nth a_125 i5)))
(assert (= e_130 (seq.nth a_129 i5)))
(assert (= e_132 (seq.nth a_129 i1)))
(assert (= e_134 (seq.nth a_133 i5)))
(assert (= e_136 (seq.nth a_133 i6)))
(assert (= e_138 (seq.nth a_137 i7)))
(assert (= e_140 (seq.nth a_137 i0)))
(assert (= e_142 (seq.nth a_141 i0)))
(assert (= e_144 (seq.nth a_141 i4)))
(assert (= e_146 (seq.nth a_145 i6)))
(assert (= e_148 (seq.nth a_145 i7)))
(assert (= e_152 (seq.nth a_151 i4)))
(assert (= e_154 (seq.nth a_151 i0)))
(assert (= e_156 (seq.nth a_155 i5)))
(assert (= e_158 (seq.nth a_155 i2)))
(assert (= e_160 (seq.nth a_159 i5)))
(assert (= e_162 (seq.nth a_159 i1)))
(assert (= e_164 (seq.nth a_163 i5)))
(assert (= e_166 (seq.nth a_163 i6)))
(assert (= e_168 (seq.nth a_167 i0)))
(assert (= e_170 (seq.nth a_167 i7)))
(assert (= e_172 (seq.nth a_171 i0)))
(assert (= e_174 (seq.nth a_171 i4)))
(assert (= e_176 (seq.nth a_175 i7)))
(assert (not (= a_149 a_178)))
(check-sat)
(exit)
