(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)

(declare-sort Element 0)
(declare-fun a_104 () (Seq Element))
(declare-fun a_106 () (Seq Element))
(declare-fun a_108 () (Seq Element))
(declare-fun a_110 () (Seq Element))
(declare-fun a_112 () (Seq Element))
(declare-fun a_114 () (Seq Element))
(declare-fun a_116 () (Seq Element))
(declare-fun a_118 () (Seq Element))
(declare-fun a_119 () (Seq Element))
(declare-fun a_120 () (Seq Element))
(declare-fun a_122 () (Seq Element))
(declare-fun a_123 () (Seq Element))
(declare-fun e_103 () Element)
(declare-fun e_105 () Element)
(declare-fun e_107 () Element)
(declare-fun e_109 () Element)
(declare-fun e_111 () Element)
(declare-fun e_113 () Element)
(declare-fun e_115 () Element)
(declare-fun e_117 () Element)
(declare-fun e_121 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(assert (= a_104 (seq.update a1 i2 (seq.unit e_103))))
(assert (= a_106 (seq.update a_104 i1 (seq.unit e_105))))
(assert (= a_108 (seq.update a_106 i2 (seq.unit e_107))))
(assert (= a_110 (seq.update a_108 i3 (seq.unit e_109))))
(assert (= a_112 (seq.update a_110 i1 (seq.unit e_111))))
(assert (= a_114 (seq.update a_112 i2 (seq.unit e_113))))
(assert (= a_116 (seq.update a_114 i3 (seq.unit e_115))))
(assert (= a_118 (seq.update a_116 i2 (seq.unit e_117))))
(assert (= a_119 (seq.update a_110 i2 (seq.unit e_113))))
(assert (= a_120 (seq.update a_119 i1 (seq.unit e_111))))
(assert (= a_122 (seq.update a_120 i3 (seq.unit e_121))))
(assert (= a_123 (seq.update a_122 i3 (seq.unit e_121))))
(assert (= e_103 (seq.nth a1 i1)))
(assert (= e_105 (seq.nth a1 i2)))
(assert (= e_107 (seq.nth a_106 i3)))
(assert (= e_109 (seq.nth a_106 i2)))
(assert (= e_111 (seq.nth a_110 i2)))
(assert (= e_113 (seq.nth a_110 i1)))
(assert (= e_115 (seq.nth a_114 i2)))
(assert (= e_117 (seq.nth a_114 i3)))
(assert (= e_121 (seq.nth a_120 i3)))
(assert (not (= a_118 a_123)))
(check-sat)
(exit)
