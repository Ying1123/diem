(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)

(declare-sort Element 0)
(declare-fun a_491 () (Seq Element))
(declare-fun a_493 () (Seq Element))
(declare-fun a_495 () (Seq Element))
(declare-fun a_497 () (Seq Element))
(declare-fun a_499 () (Seq Element))
(declare-fun a_501 () (Seq Element))
(declare-fun a_503 () (Seq Element))
(declare-fun a_504 () (Seq Element))
(declare-fun a_506 () (Seq Element))
(declare-fun a_508 () (Seq Element))
(declare-fun a_510 () (Seq Element))
(declare-fun a_512 () (Seq Element))
(declare-fun a_513 () (Seq Element))
(declare-fun a_514 () (Seq Element))
(declare-fun a_516 () (Seq Element))
(declare-fun a_518 () (Seq Element))
(declare-fun a_520 () (Seq Element))
(declare-fun a_522 () (Seq Element))
(declare-fun a_524 () (Seq Element))
(declare-fun a_525 () (Seq Element))
(declare-fun a_527 () (Seq Element))
(declare-fun a_529 () (Seq Element))
(declare-fun a_531 () (Seq Element))
(declare-fun a_533 () (Seq Element))
(declare-fun e_490 () Element)
(declare-fun e_492 () Element)
(declare-fun e_494 () Element)
(declare-fun e_496 () Element)
(declare-fun e_498 () Element)
(declare-fun e_500 () Element)
(declare-fun e_502 () Element)
(declare-fun e_505 () Element)
(declare-fun e_507 () Element)
(declare-fun e_509 () Element)
(declare-fun e_511 () Element)
(declare-fun e_515 () Element)
(declare-fun e_517 () Element)
(declare-fun e_519 () Element)
(declare-fun e_521 () Element)
(declare-fun e_523 () Element)
(declare-fun e_526 () Element)
(declare-fun e_528 () Element)
(declare-fun e_530 () Element)
(declare-fun e_532 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(assert (= a_491 (seq.update a1 i0 (seq.unit e_490))))
(assert (= a_493 (seq.update a_491 i1 (seq.unit e_492))))
(assert (= a_495 (seq.update a_493 i5 (seq.unit e_494))))
(assert (= a_497 (seq.update a_495 i1 (seq.unit e_496))))
(assert (= a_499 (seq.update a_497 i3 (seq.unit e_498))))
(assert (= a_501 (seq.update a_499 i1 (seq.unit e_500))))
(assert (= a_503 (seq.update a_501 i4 (seq.unit e_502))))
(assert (= a_504 (seq.update a_503 i4 (seq.unit e_502))))
(assert (= a_506 (seq.update a_504 i1 (seq.unit e_505))))
(assert (= a_508 (seq.update a_506 i5 (seq.unit e_507))))
(assert (= a_510 (seq.update a_508 i3 (seq.unit e_509))))
(assert (= a_512 (seq.update a_510 i1 (seq.unit e_511))))
(assert (= a_513 (seq.update a1 i1 (seq.unit e_492))))
(assert (= a_514 (seq.update a_513 i0 (seq.unit e_490))))
(assert (= a_516 (seq.update a_514 i5 (seq.unit e_515))))
(assert (= a_518 (seq.update a_516 i1 (seq.unit e_517))))
(assert (= a_520 (seq.update a_518 i3 (seq.unit e_519))))
(assert (= a_522 (seq.update a_520 i1 (seq.unit e_521))))
(assert (= a_524 (seq.update a_522 i4 (seq.unit e_523))))
(assert (= a_525 (seq.update a_524 i4 (seq.unit e_523))))
(assert (= a_527 (seq.update a_525 i5 (seq.unit e_526))))
(assert (= a_529 (seq.update a_527 i1 (seq.unit e_528))))
(assert (= a_531 (seq.update a_529 i3 (seq.unit e_530))))
(assert (= a_533 (seq.update a_531 i1 (seq.unit e_532))))
(assert (= e_490 (seq.nth a1 i1)))
(assert (= e_492 (seq.nth a1 i0)))
(assert (= e_494 (seq.nth a_493 i1)))
(assert (= e_496 (seq.nth a_493 i5)))
(assert (= e_498 (seq.nth a_497 i1)))
(assert (= e_500 (seq.nth a_497 i3)))
(assert (= e_502 (seq.nth a_501 i4)))
(assert (= e_505 (seq.nth a_504 i5)))
(assert (= e_507 (seq.nth a_504 i1)))
(assert (= e_509 (seq.nth a_508 i1)))
(assert (= e_511 (seq.nth a_508 i3)))
(assert (= e_515 (seq.nth a_514 i1)))
(assert (= e_517 (seq.nth a_514 i5)))
(assert (= e_519 (seq.nth a_518 i1)))
(assert (= e_521 (seq.nth a_518 i3)))
(assert (= e_523 (seq.nth a_522 i4)))
(assert (= e_526 (seq.nth a_525 i1)))
(assert (= e_528 (seq.nth a_525 i5)))
(assert (= e_530 (seq.nth a_529 i1)))
(assert (= e_532 (seq.nth a_529 i3)))
(assert (not (= a_512 a_533)))
(check-sat)
(exit)
