05:26:18 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestAbortsIf::no_aborts_if` to be verified
05:26:18 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestAbortsIf::multi_abort5_incorrect` to be verified
05:26:18 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestAbortsIf::multi_abort4` to be verified
05:26:18 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestAbortsIf::multi_abort3_incorrect` to be verified
05:26:18 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestAbortsIf::multi_abort2_incorrect` to be verified
05:26:18 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestAbortsIf::multi_abort1` to be verified
05:26:18 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestAbortsIf::abort_at_2_or_3_total_incorrect` to be verified
05:26:18 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestAbortsIf::abort_at_2_or_3_strict_incorrect` to be verified
05:26:18 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestAbortsIf::abort_at_2_or_3_spec_incorrect` to be verified
05:26:18 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestAbortsIf::abort_at_2_or_3` to be verified
05:26:18 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestAbortsIf::abort_1` to be verified
05:26:18 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestAbortsIf::abort6_incorrect` to be verified
05:26:18 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestAbortsIf::abort5_incorrect` to be verified
05:26:18 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestAbortsIf::abort4_incorrect` to be verified
05:26:18 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestAbortsIf::abort3` to be verified
05:26:18 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestAbortsIf::abort2_incorrect` to be verified
05:26:18 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestAbortsIf::abort1` to be verified
05:26:18 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestAbortsIf::aborts_if_with_code` to be verified
[INFO] translating module TestAbortsIf
05:26:18 [DEBUG] (1) move_prover: writing boogie to `output.bpl`
[INFO] running solver
05:26:18 [DEBUG] (1) boogie_backend::boogie_wrapper: command line: /home/ying/boogie/Source/BoogieDriver/bin/Debug/net5.0/BoogieDriver -doModSetAnalysis -printVerifiedProceduresCount:0 -printModel:1 -enhancedErrorMessages:1 -monomorphize -proverOpt:SOLVER=cvc4 -proverOpt:PROVER_PATH=/home/ying/bin/cvc4 -proverOpt:O:smt.QI.EAGER_THRESHOLD=100 -proverOpt:O:smt.QI.LAZY_THRESHOLD=100 -vcsCores:4 -proverLog:@PROC@.smt output.bpl
05:26:18 [DEBUG] (14) boogie_backend::prover_task_runner: runing Boogie command with seed 1
05:26:19 [DEBUG] (1) boogie_backend::boogie_wrapper: analyzing boogie output
05:26:19 [DEBUG] (1) boogie_backend::boogie_wrapper: writing boogie log to output.bpl.log
[INFO] 0.013s build, 0.006s trafo, 0.004s gen, 0.714s verify
error: function does not abort under this condition

    ┌── /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:35:9 ───
    │
 35 │         aborts_if _x <= _y;
    │         ^^^^^^^^^^^^^^^^^^^
    │
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:32: abort2_incorrect
    =         _x = 0
    =         _y = 0
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:33: abort2_incorrect
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:35

error: function does not abort under this condition

    ┌── /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:52:9 ───
    │
 52 │         aborts_if x <= y;
    │         ^^^^^^^^^^^^^^^^^
    │
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:47: abort4_incorrect
    =         x = 0
    =         y = 0
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:48: abort4_incorrect
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:49: abort4_incorrect
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:52

error: abort not covered by any of the `aborts_if` clauses

    ┌── /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:59:5 ───
    │
 59 │ ╭     spec abort5_incorrect {
 60 │ │         aborts_if x < y;
 61 │ │     }
    │ ╰─────^
    ·
 57 │         if (x <= y) abort 1
    │                     ------- abort happened here with code 0x1
    │
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:56: abort5_incorrect
    =         x = 0
    =         y = 0
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:57: abort5_incorrect
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:57: abort5_incorrect
    =         ABORTED

error: function does not abort under this condition

    ┌── /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:68:9 ───
    │
 68 │         aborts_if x <= y;
    │         ^^^^^^^^^^^^^^^^^
    │
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:64: abort6_incorrect
    =         x = 0
    =         y = 0
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:65: abort6_incorrect
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:66: abort6_incorrect
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:68

error: function does not abort under this condition

     ┌── /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:151:9 ───
     │
 151 │         aborts_if x == 4;
     │         ^^^^^^^^^^^^^^^^^
     │
     =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:145: abort_at_2_or_3_spec_incorrect
     =         x = 4
     =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:146: abort_at_2_or_3_spec_incorrect
     =         tmp#$1 = false
     =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:147: abort_at_2_or_3_spec_incorrect
     =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:151

error: abort not covered by any of the `aborts_if` clauses

     ┌── /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:157:5 ───
     │
 157 │ ╭     spec abort_at_2_or_3_strict_incorrect {
 158 │ │         // When the strict mode is enabled, no aborts_if clause means aborts_if false.
 159 │ │         pragma aborts_if_is_strict = true;
 160 │ │     }
     │ ╰─────^
     ·
 155 │         if (x == 2 || x == 3) abort 1;
     │                               ------- abort happened here with code 0x1
     │
     =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:154: abort_at_2_or_3_strict_incorrect
     =         x = 3
     =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:155: abort_at_2_or_3_strict_incorrect
     =         tmp#$1 = true
     =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:155: abort_at_2_or_3_strict_incorrect
     =         ABORTED

error: abort not covered by any of the `aborts_if` clauses

     ┌── /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:139:5 ───
     │
 139 │ ╭     spec abort_at_2_or_3_total_incorrect {
 140 │ │         // Counter check that we get an error message without the pragma.
 141 │ │         // pragma aborts_if_is_partial = false;  // default
 142 │ │         aborts_if x == 2;
 143 │ │     }
     │ ╰─────^
     ·
 137 │         if (x == 2 || x == 3) abort 1;
     │                               ------- abort happened here with code 0x1
     │
     =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:136: abort_at_2_or_3_total_incorrect
     =         x = 3
     =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:137: abort_at_2_or_3_total_incorrect
     =         tmp#$1 = true
     =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:137: abort_at_2_or_3_total_incorrect
     =         ABORTED

error: function does not abort under this condition

    ┌── /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:91:9 ───
    │
 91 │         aborts_if x == y;
    │         ^^^^^^^^^^^^^^^^^
    │
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:86: multi_abort2_incorrect
    =         x = 0
    =         y = 0
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:87: multi_abort2_incorrect
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:88: multi_abort2_incorrect
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:90
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:91

error: abort not covered by any of the `aborts_if` clauses

     ┌── /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:98:5 ───
     │
  98 │ ╭     spec multi_abort3_incorrect {
  99 │ │         aborts_if _x < _y;
 100 │ │         aborts_if _x == _y;
 101 │ │     }
     │ ╰─────^
     ·
  96 │         abort 1
     │         ------- abort happened here with code 0x1
     │
     =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:95: multi_abort3_incorrect
     =         _x = 1
     =         _y = 0
     =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:96: multi_abort3_incorrect
     =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:96: multi_abort3_incorrect
     =         ABORTED

error: function does not abort under this condition

     ┌── /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:119:9 ───
     │
 119 │         aborts_if true;
     │         ^^^^^^^^^^^^^^^
     │
     =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:113: multi_abort5_incorrect
     =         x = 1
     =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:114: multi_abort5_incorrect
     =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:117: multi_abort5_incorrect
     =     at /home/ying/diem/language/move-prover/tests/sources/functional/aborts_if.move:119

exiting with boogie verification errors
