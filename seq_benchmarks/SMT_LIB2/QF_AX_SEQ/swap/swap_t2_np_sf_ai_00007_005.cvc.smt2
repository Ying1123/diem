(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)

(declare-sort Element 0)
(declare-fun a_370 () (Seq Element))
(declare-fun a_372 () (Seq Element))
(declare-fun a_374 () (Seq Element))
(declare-fun a_376 () (Seq Element))
(declare-fun a_378 () (Seq Element))
(declare-fun a_380 () (Seq Element))
(declare-fun a_382 () (Seq Element))
(declare-fun a_384 () (Seq Element))
(declare-fun a_386 () (Seq Element))
(declare-fun a_387 () (Seq Element))
(declare-fun a_389 () (Seq Element))
(declare-fun a_391 () (Seq Element))
(declare-fun a_393 () (Seq Element))
(declare-fun a_395 () (Seq Element))
(declare-fun a_396 () (Seq Element))
(declare-fun a_397 () (Seq Element))
(declare-fun a_399 () (Seq Element))
(declare-fun a_401 () (Seq Element))
(declare-fun a_403 () (Seq Element))
(declare-fun a_404 () (Seq Element))
(declare-fun a_406 () (Seq Element))
(declare-fun a_408 () (Seq Element))
(declare-fun a_410 () (Seq Element))
(declare-fun a_412 () (Seq Element))
(declare-fun e_369 () Element)
(declare-fun e_371 () Element)
(declare-fun e_373 () Element)
(declare-fun e_375 () Element)
(declare-fun e_377 () Element)
(declare-fun e_379 () Element)
(declare-fun e_381 () Element)
(declare-fun e_383 () Element)
(declare-fun e_385 () Element)
(declare-fun e_388 () Element)
(declare-fun e_390 () Element)
(declare-fun e_392 () Element)
(declare-fun e_394 () Element)
(declare-fun e_398 () Element)
(declare-fun e_400 () Element)
(declare-fun e_402 () Element)
(declare-fun e_405 () Element)
(declare-fun e_407 () Element)
(declare-fun e_409 () Element)
(declare-fun e_411 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(assert (= a_370 (seq.update a1 i1 (seq.unit e_369))))
(assert (= a_372 (seq.update a_370 i5 (seq.unit e_371))))
(assert (= a_374 (seq.update a_372 i0 (seq.unit e_373))))
(assert (= a_376 (seq.update a_374 i3 (seq.unit e_375))))
(assert (= a_378 (seq.update a_376 i1 (seq.unit e_377))))
(assert (= a_380 (seq.update a_378 i4 (seq.unit e_379))))
(assert (= a_382 (seq.update a_380 i6 (seq.unit e_381))))
(assert (= a_384 (seq.update a_382 i0 (seq.unit e_383))))
(assert (= a_386 (seq.update a_384 i3 (seq.unit e_385))))
(assert (= a_387 (seq.update a_386 i3 (seq.unit e_385))))
(assert (= a_389 (seq.update a_387 i1 (seq.unit e_388))))
(assert (= a_391 (seq.update a_389 i3 (seq.unit e_390))))
(assert (= a_393 (seq.update a_391 i0 (seq.unit e_392))))
(assert (= a_395 (seq.update a_393 i3 (seq.unit e_394))))
(assert (= a_396 (seq.update a_376 i4 (seq.unit e_379))))
(assert (= a_397 (seq.update a_396 i1 (seq.unit e_377))))
(assert (= a_399 (seq.update a_397 i0 (seq.unit e_398))))
(assert (= a_401 (seq.update a_399 i6 (seq.unit e_400))))
(assert (= a_403 (seq.update a_401 i3 (seq.unit e_402))))
(assert (= a_404 (seq.update a_403 i3 (seq.unit e_402))))
(assert (= a_406 (seq.update a_404 i3 (seq.unit e_405))))
(assert (= a_408 (seq.update a_406 i1 (seq.unit e_407))))
(assert (= a_410 (seq.update a_408 i3 (seq.unit e_409))))
(assert (= a_412 (seq.update a_410 i0 (seq.unit e_411))))
(assert (= e_369 (seq.nth a1 i5)))
(assert (= e_371 (seq.nth a1 i1)))
(assert (= e_373 (seq.nth a_372 i3)))
(assert (= e_375 (seq.nth a_372 i0)))
(assert (= e_377 (seq.nth a_376 i4)))
(assert (= e_379 (seq.nth a_376 i1)))
(assert (= e_381 (seq.nth a_380 i0)))
(assert (= e_383 (seq.nth a_380 i6)))
(assert (= e_385 (seq.nth a_384 i3)))
(assert (= e_388 (seq.nth a_387 i3)))
(assert (= e_390 (seq.nth a_387 i1)))
(assert (= e_392 (seq.nth a_391 i3)))
(assert (= e_394 (seq.nth a_391 i0)))
(assert (= e_398 (seq.nth a_397 i6)))
(assert (= e_400 (seq.nth a_397 i0)))
(assert (= e_402 (seq.nth a_401 i3)))
(assert (= e_405 (seq.nth a_404 i1)))
(assert (= e_407 (seq.nth a_404 i3)))
(assert (= e_409 (seq.nth a_408 i0)))
(assert (= e_411 (seq.nth a_408 i3)))
(assert (not (= a_395 a_412)))
(check-sat)
(exit)
