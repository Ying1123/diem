21:42:58 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestLet::spec_let_with_schema` to be verified
21:42:58 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestLet::spec_let_with_old` to be verified
21:42:58 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestLet::spec_let_with_abort_incorrect` to be verified
21:42:58 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestLet::spec_let_with_abort` to be verified
21:42:58 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestLet::spec_let` to be verified
21:42:58 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestLet::local_let_with_memory_access` to be verified
21:42:58 [DEBUG] (1) bytecode::verification_analysis_v2: marking `TestLet::spec_let_with_abort_opaque_caller` to be verified
[INFO] translating module TestLet
21:42:58 [DEBUG] (1) move_prover: writing boogie to `output.bpl`
[INFO] running solver
21:42:58 [DEBUG] (1) boogie_backend::boogie_wrapper: command line: /home/ying/.dotnet/tools/boogie -doModSetAnalysis -printVerifiedProceduresCount:0 -printModel:1 -enhancedErrorMessages:1 -monomorphize -proverOpt:PROVER_PATH=/home/ying/bin/z3 -proverOpt:O:smt.QI.EAGER_THRESHOLD=100 -proverOpt:O:smt.QI.LAZY_THRESHOLD=100 -vcsCores:4 -proverLog:@PROC@.smt output.bpl
21:42:58 [DEBUG] (16) boogie_backend::prover_task_runner: runing Boogie command with seed 1
21:42:59 [DEBUG] (1) boogie_backend::boogie_wrapper: analyzing boogie output
21:42:59 [DEBUG] (1) boogie_backend::boogie_wrapper: writing boogie log to output.bpl.log
[INFO] 0.009s build, 0.005s trafo, 0.008s gen, 0.896s verify
error: function does not abort under this condition

    ┌── /home/ying/diem/language/move-prover/tests/sources/functional/let.move:76:9 ───
    │
 76 │         aborts_if sum != 0;
    │         ^^^^^^^^^^^^^^^^^^^
    │
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/let.move:68: spec_let_with_abort_incorrect
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/let.move:74
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/let.move:75
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/let.move:68: spec_let_with_abort_incorrect
    =         a = &0
    =         b = &1
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/let.move:69: spec_let_with_abort_incorrect
    =         saved_a = 0
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/let.move:70: spec_let_with_abort_incorrect
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/let.move:71: spec_let_with_abort_incorrect
    =         a = &0
    =         b = &0
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/let.move:72: spec_let_with_abort_incorrect
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/let.move:79
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/let.move:76

error: abort not covered by any of the `aborts_if` clauses

    ┌── /home/ying/diem/language/move-prover/tests/sources/functional/let.move:73:5 ───
    │
 73 │ ╭     spec spec_let_with_abort_incorrect {
 74 │ │         let sum = a + b;
 75 │ │         let product = a * b;
 76 │ │         aborts_if sum != 0;
 77 │ │         aborts_if sum >= MAX_U64;
 78 │ │         aborts_if product >= MAX_U64;
 79 │ │         let post new_a = old(a) / sum;
 80 │ │         ensures a == new_a;
 81 │ │         ensures b == product;
 82 │ │     }
    │ ╰─────^
    ·
 70 │         *a = *a / (*a + *b);
    │                 - abort happened here with execution failure
    │
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/let.move:68: spec_let_with_abort_incorrect
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/let.move:74
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/let.move:75
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/let.move:68: spec_let_with_abort_incorrect
    =         a = &0
    =         b = &0
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/let.move:69: spec_let_with_abort_incorrect
    =         saved_a = 0
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/let.move:70: spec_let_with_abort_incorrect
    =     at /home/ying/diem/language/move-prover/tests/sources/functional/let.move:70: spec_let_with_abort_incorrect
    =         ABORTED

exiting with boogie verification errors
