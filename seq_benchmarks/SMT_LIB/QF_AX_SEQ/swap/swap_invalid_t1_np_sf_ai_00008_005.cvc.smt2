(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)

(declare-sort Element 0)
(declare-fun a_456 () (Seq Element))
(declare-fun a_457 () (Seq Element))
(declare-fun a_459 () (Seq Element))
(declare-fun a_461 () (Seq Element))
(declare-fun a_463 () (Seq Element))
(declare-fun a_465 () (Seq Element))
(declare-fun a_467 () (Seq Element))
(declare-fun a_468 () (Seq Element))
(declare-fun a_470 () (Seq Element))
(declare-fun a_472 () (Seq Element))
(declare-fun a_474 () (Seq Element))
(declare-fun a_476 () (Seq Element))
(declare-fun a_478 () (Seq Element))
(declare-fun a_480 () (Seq Element))
(declare-fun a_482 () (Seq Element))
(declare-fun a_484 () (Seq Element))
(declare-fun a_485 () (Seq Element))
(declare-fun a_486 () (Seq Element))
(declare-fun a_488 () (Seq Element))
(declare-fun a_490 () (Seq Element))
(declare-fun a_492 () (Seq Element))
(declare-fun a_493 () (Seq Element))
(declare-fun a_495 () (Seq Element))
(declare-fun a_497 () (Seq Element))
(declare-fun a_499 () (Seq Element))
(declare-fun a_501 () (Seq Element))
(declare-fun a_503 () (Seq Element))
(declare-fun a_505 () (Seq Element))
(declare-fun a_507 () (Seq Element))
(declare-fun a_509 () (Seq Element))
(declare-fun e_455 () Element)
(declare-fun e_458 () Element)
(declare-fun e_460 () Element)
(declare-fun e_462 () Element)
(declare-fun e_464 () Element)
(declare-fun e_466 () Element)
(declare-fun e_469 () Element)
(declare-fun e_471 () Element)
(declare-fun e_473 () Element)
(declare-fun e_475 () Element)
(declare-fun e_477 () Element)
(declare-fun e_479 () Element)
(declare-fun e_481 () Element)
(declare-fun e_483 () Element)
(declare-fun e_487 () Element)
(declare-fun e_489 () Element)
(declare-fun e_491 () Element)
(declare-fun e_494 () Element)
(declare-fun e_496 () Element)
(declare-fun e_498 () Element)
(declare-fun e_500 () Element)
(declare-fun e_502 () Element)
(declare-fun e_504 () Element)
(declare-fun e_506 () Element)
(declare-fun e_508 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(assert (= a_456 (seq.update a1 i2 (seq.unit e_455))))
(assert (= a_457 (seq.update a_456 i2 (seq.unit e_455))))
(assert (= a_459 (seq.update a_457 i7 (seq.unit e_458))))
(assert (= a_461 (seq.update a_459 i5 (seq.unit e_460))))
(assert (= a_463 (seq.update a_461 i7 (seq.unit e_462))))
(assert (= a_465 (seq.update a_463 i3 (seq.unit e_464))))
(assert (= a_467 (seq.update a_465 i2 (seq.unit e_466))))
(assert (= a_468 (seq.update a_467 i2 (seq.unit e_466))))
(assert (= a_470 (seq.update a_468 i6 (seq.unit e_469))))
(assert (= a_472 (seq.update a_470 i3 (seq.unit e_471))))
(assert (= a_474 (seq.update a_472 i0 (seq.unit e_473))))
(assert (= a_476 (seq.update a_474 i2 (seq.unit e_475))))
(assert (= a_478 (seq.update a_476 i6 (seq.unit e_477))))
(assert (= a_480 (seq.update a_478 i0 (seq.unit e_479))))
(assert (= a_482 (seq.update a_480 i2 (seq.unit e_481))))
(assert (= a_484 (seq.update a_482 i5 (seq.unit e_483))))
(assert (= a_485 (seq.update a_457 i5 (seq.unit e_460))))
(assert (= a_486 (seq.update a_485 i7 (seq.unit e_458))))
(assert (= a_488 (seq.update a_486 i3 (seq.unit e_487))))
(assert (= a_490 (seq.update a_488 i7 (seq.unit e_489))))
(assert (= a_492 (seq.update a_490 i2 (seq.unit e_491))))
(assert (= a_493 (seq.update a_492 i2 (seq.unit e_491))))
(assert (= a_495 (seq.update a_493 i6 (seq.unit e_494))))
(assert (= a_497 (seq.update a_495 i3 (seq.unit e_496))))
(assert (= a_499 (seq.update a_497 i2 (seq.unit e_498))))
(assert (= a_501 (seq.update a_499 i0 (seq.unit e_500))))
(assert (= a_503 (seq.update a_501 i0 (seq.unit e_502))))
(assert (= a_505 (seq.update a_503 i6 (seq.unit e_504))))
(assert (= a_507 (seq.update a_505 i3 (seq.unit e_506))))
(assert (= a_509 (seq.update a_507 i5 (seq.unit e_508))))
(assert (= e_455 (seq.nth a1 i2)))
(assert (= e_458 (seq.nth a_457 i5)))
(assert (= e_460 (seq.nth a_457 i7)))
(assert (= e_462 (seq.nth a_461 i3)))
(assert (= e_464 (seq.nth a_461 i7)))
(assert (= e_466 (seq.nth a_465 i2)))
(assert (= e_469 (seq.nth a_468 i3)))
(assert (= e_471 (seq.nth a_468 i6)))
(assert (= e_473 (seq.nth a_472 i2)))
(assert (= e_475 (seq.nth a_472 i0)))
(assert (= e_477 (seq.nth a_476 i0)))
(assert (= e_479 (seq.nth a_476 i6)))
(assert (= e_481 (seq.nth a_480 i5)))
(assert (= e_483 (seq.nth a_480 i2)))
(assert (= e_487 (seq.nth a_486 i7)))
(assert (= e_489 (seq.nth a_486 i3)))
(assert (= e_491 (seq.nth a_490 i2)))
(assert (= e_494 (seq.nth a_493 i3)))
(assert (= e_496 (seq.nth a_493 i6)))
(assert (= e_498 (seq.nth a_497 i0)))
(assert (= e_500 (seq.nth a_497 i2)))
(assert (= e_502 (seq.nth a_501 i6)))
(assert (= e_504 (seq.nth a_501 i0)))
(assert (= e_506 (seq.nth a_505 i5)))
(assert (= e_508 (seq.nth a_505 i3)))
(assert (not (= a_484 a_509)))
(check-sat)
(exit)
