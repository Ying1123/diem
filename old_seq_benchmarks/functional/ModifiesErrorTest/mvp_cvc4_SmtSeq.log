05:27:37 [DEBUG] (1) bytecode::verification_analysis_v2: marking `A::read_at` to be verified
05:27:37 [DEBUG] (1) bytecode::verification_analysis_v2: marking `A::mutate_at` to be verified
05:27:37 [DEBUG] (1) bytecode::verification_analysis_v2: marking `B::mutate_at_test_incorrect` to be verified
05:27:37 [DEBUG] (1) bytecode::verification_analysis_v2: marking `B::move_to_test_incorrect` to be verified
05:27:37 [DEBUG] (1) bytecode::verification_analysis_v2: marking `B::move_from_test_incorrect` to be verified
05:27:37 [DEBUG] (1) bytecode::verification_analysis_v2: marking `B::mutate_S_test2_incorrect` to be verified
05:27:37 [DEBUG] (1) bytecode::verification_analysis_v2: marking `B::mutate_S_test1_incorrect` to be verified
[INFO] translating module A
[INFO] translating module B
05:27:37 [DEBUG] (1) move_prover: writing boogie to `output.bpl`
[INFO] running solver
05:27:37 [DEBUG] (1) boogie_backend::boogie_wrapper: command line: /home/ying/boogie/Source/BoogieDriver/bin/Debug/net5.0/BoogieDriver -doModSetAnalysis -printVerifiedProceduresCount:0 -printModel:1 -enhancedErrorMessages:1 -monomorphize -proverOpt:SOLVER=cvc4 -proverOpt:PROVER_PATH=/home/ying/bin/cvc4 -proverOpt:O:smt.QI.EAGER_THRESHOLD=100 -proverOpt:O:smt.QI.LAZY_THRESHOLD=100 -vcsCores:4 -proverLog:@PROC@.smt output.bpl
05:27:37 [DEBUG] (14) boogie_backend::prover_task_runner: runing Boogie command with seed 1
05:27:38 [DEBUG] (1) boogie_backend::boogie_wrapper: analyzing boogie output
[internal] boogie exited with prover errors:
assert_failed(2,1563,1572): caller does not have permission to modify `B::T` at given address
Execution trace:
    output.bpl(1149,9): anon0
    output.bpl(1149,9): anon0$1
    output.bpl(1192,34): anon10_Else
Augmented execution trace:
$at(2,1427,1690)
$at(2,1765,1791)
$at(2,1427,1428)
$track_local(1,0,0):1
$track_local(1,0,1):0
$at(2,1528,1545)
$track_local(1,0,3):0
$at(2,1563,1572)
*** MODEL
_$t0 -> 1
_$t1 -> 0
$0_A_S_$memory -> ($Memory_10918 T@[Int]Bool!val!3 T@[Int]$0_A_S!val!0)
$0_B_T_$memory -> ($Memory_12014 T@[Int]Bool!val!4 T@[Int]$0_B_T!val!0)
$0_B_T_$memory@0 -> ($Memory_12014 T@[Int]Bool!val!0 T@[Int]$0_B_T!val!0)
$0_B_T_$modifies -> T@[Int]Bool!val!0
$abort_code@0 -> 0
$abort_code@1 -> 0
$abort_flag@0 -> false
$EXEC_FAILURE_CODE -> (- 1)
$MAX_U128 -> 340282366920938463463374607431768211455
$MAX_U64 -> 18446744073709551615
$MAX_U8 -> 255
$t10 -> false
$t5 -> 0
$t6 -> false
$t8 -> ($0_B_T 1)
$t8@0 -> ($0_B_T (- 1))
$t8@1 -> ($0_B_T 0)
$t9 -> (- 1)
$1_Hash_sha2 -> {
  else -> (seq.empty)
}
$1_Hash_sha3 -> {
  else -> (seq.empty)
}
$1_Signature_$ed25519_validate_pubkey -> {
  else -> false
}
$1_Signature_$ed25519_verify -> {
  else -> false
}
$ConstMemoryDomain -> {
  false -> T@[Int]Bool!val!1
  true -> T@[Int]Bool!val!2
  else -> T@[Int]Bool!val!2
}
$IndexOfVec'u8' -> {
  else -> 0
}
$InRange -> {
  else -> false
}
$IsValid'$0_A_S' -> {
  else -> false
}
$IsValid'$0_B_T' -> {
  else -> false
}
$IsValid'address' -> {
  0 -> true
  1 -> true
  else -> true
}
$IsValid'num' -> {
  else -> false
}
$IsValid'u128' -> {
  else -> false
}
$IsValid'u64' -> {
  (- 1) -> false
  0 -> true
  else -> false
}
$IsValid'u8' -> {
  else -> false
}
$IsValid'vec'u8'' -> {
  else -> false
}
$shl -> {
  else -> 0
}
$shr -> {
  else -> 0
}
ControlFlow -> {
  0 0 -> 17428
  0 15551 -> 15587
  0 15587 -> (- 18032)
  0 17428 -> 15551
  else -> (- 18032)
}
lambda#0 -> {
  false -> T@[Int]Bool!val!1
  true -> T@[Int]Bool!val!2
  else -> T@[Int]Bool!val!2
}
ReverseVec_3283 -> {
  else -> (seq.empty)
}
Select__T@[Int]$0_A_S_ -> {
  T@[Int]$0_A_S!val!0 0 -> ($0_A_S 0)
  else -> ($0_A_S 0)
}
Select__T@[Int]$0_B_T_ -> {
  T@[Int]$0_B_T!val!0 1 -> ($0_B_T 2)
  else -> ($0_B_T 2)
}
Select__T@[Int]Bool_ -> {
  T@[Int]Bool!val!0 0 -> true
  T@[Int]Bool!val!0 1 -> false
  T@[Int]Bool!val!3 0 -> true
  T@[Int]Bool!val!5 1 -> false
  else -> false
}
Store__T@[Int]Bool_ -> {
  T@[Int]Bool!val!4 1 false -> T@[Int]Bool!val!5
  else -> T@[Int]Bool!val!5
}
*** END_MODEL
assert_failed(2,1190,1197): caller does not have permission to modify `B::T` at given address
Execution trace:
    output.bpl(1321,9): anon0
    output.bpl(1321,9): anon0$1
    output.bpl(1364,34): anon10_Else
Augmented execution trace:
$at(2,1076,1316)
$at(2,1389,1415)
$at(2,1076,1077)
$track_local(1,1,0):1
$track_local(1,1,1):0
$at(2,1163,1180)
$track_local(1,1,2):0
$at(2,1215,1216)
*** MODEL
_$t0 -> 1
_$t1 -> 0
$0_A_S_$memory -> ($Memory_10918 T@[Int]Bool!val!3 T@[Int]$0_A_S!val!0)
$0_B_T_$memory -> ($Memory_12014 T@[Int]Bool!val!4 T@[Int]$0_B_T!val!0)
$0_B_T_$memory@0 -> ($Memory_12014 T@[Int]Bool!val!0 T@[Int]$0_B_T!val!0)
$0_B_T_$modifies -> T@[Int]Bool!val!0
$abort_code@0 -> 0
$abort_code@1 -> 0
$abort_flag@0 -> false
$EXEC_FAILURE_CODE -> (- 1)
$MAX_U128 -> 340282366920938463463374607431768211455
$MAX_U64 -> 18446744073709551615
$MAX_U8 -> 255
$t10 -> false
$t4 -> 0
$t5 -> false
$t8@0 -> ($0_B_T 2)
$t9 -> (- 1)
$1_Hash_sha2 -> {
  else -> (seq.empty)
}
$1_Hash_sha3 -> {
  else -> (seq.empty)
}
$1_Signature_$ed25519_validate_pubkey -> {
  else -> false
}
$1_Signature_$ed25519_verify -> {
  else -> false
}
$ConstMemoryDomain -> {
  false -> T@[Int]Bool!val!1
  true -> T@[Int]Bool!val!2
  else -> T@[Int]Bool!val!2
}
$IndexOfVec'u8' -> {
  else -> 0
}
$InRange -> {
  else -> false
}
$IsValid'$0_A_S' -> {
  else -> false
}
$IsValid'$0_B_T' -> {
  else -> false
}
$IsValid'address' -> {
  0 -> true
  1 -> true
  else -> true
}
$IsValid'num' -> {
  else -> false
}
$IsValid'u128' -> {
  else -> false
}
$IsValid'u64' -> {
  (- 1) -> false
  0 -> true
  2 -> true
  else -> false
}
$IsValid'u8' -> {
  else -> false
}
$IsValid'vec'u8'' -> {
  else -> false
}
$shl -> {
  else -> 0
}
$shr -> {
  else -> 0
}
ControlFlow -> {
  0 0 -> 17424
  0 15958 -> 16004
  0 16004 -> (- 18041)
  0 17424 -> 15958
  else -> (- 18041)
}
lambda#0 -> {
  false -> T@[Int]Bool!val!1
  true -> T@[Int]Bool!val!2
  else -> T@[Int]Bool!val!2
}
ReverseVec_3283 -> {
  else -> (seq.empty)
}
Select__T@[Int]$0_A_S_ -> {
  T@[Int]$0_A_S!val!0 0 -> ($0_A_S 0)
  else -> ($0_A_S 0)
}
Select__T@[Int]$0_B_T_ -> {
  T@[Int]$0_B_T!val!1 1 -> ($0_B_T 2)
  else -> ($0_B_T 2)
}
Select__T@[Int]Bool_ -> {
  T@[Int]Bool!val!0 0 -> true
  T@[Int]Bool!val!0 1 -> false
  T@[Int]Bool!val!3 0 -> true
  T@[Int]Bool!val!5 1 -> true
  else -> false
}
Store__T@[Int]$0_B_T_ -> {
  T@[Int]$0_B_T!val!0 1 ($0_B_T 2) -> T@[Int]$0_B_T!val!1
  else -> T@[Int]$0_B_T!val!1
}
Store__T@[Int]Bool_ -> {
  T@[Int]Bool!val!4 1 true -> T@[Int]Bool!val!5
  else -> T@[Int]Bool!val!5
}
*** END_MODEL
assert_failed(2,1917,1936): caller does not have permission to modify `A::S` at given address
Execution trace:
    output.bpl(1492,9): anon0
    output.bpl(1492,9): anon0$1
    output.bpl(1535,34): anon10_Else
Augmented execution trace:
$at(2,1803,2034)
$at(2,2079,2103)
$at(2,2112,2141)
$at(2,1803,1804)
$track_local(1,2,0):1
$track_local(1,2,1):0
$at(2,1890,1907)
$track_local(1,2,2):0
$at(2,1917,1936)
*** MODEL
_$t0 -> 0
_$t0@@0 -> 1
_$t1 -> 0
$0_A_S_$memory -> ($Memory_10918 T@[Int]Bool!val!2 T@[Int]$0_A_S!val!0)
$0_A_S_$memory@0 -> ($Memory_10918 T@[Int]Bool!val!0 T@[Int]$0_A_S!val!0)
$0_A_S_$memory@0@@0 -> ($Memory_10918 T@[Int]Bool!val!0 T@[Int]$0_A_S!val!1)
$0_A_S_$memory@1 -> ($Memory_10918 T@[Int]Bool!val!0 T@[Int]$0_A_S!val!0)
$0_A_S_$memory@2 -> ($Memory_10918 T@[Int]Bool!val!4 T@[Int]$0_A_S!val!1)
$0_A_S_$modifies -> T@[Int]Bool!val!0
$0_A_S_$modifies@@0 -> T@[Int]Bool!val!3
$abort_code@0 -> 0
$abort_code@1 -> 0
$abort_flag@0 -> false
$EXEC_FAILURE_CODE -> (- 1)
$MAX_U128 -> 340282366920938463463374607431768211455
$MAX_U64 -> 18446744073709551615
$MAX_U8 -> 255
$t1 -> ($Mutation_10951 ($Global 0) (seq.empty) ($0_A_S 0))
$t2 -> ($Mutation_10951 ($Global 0) (seq.empty) ($0_A_S 0))
$t2@0 -> ($Mutation_10951 ($Global 0) (seq.empty) ($0_A_S 0))
$t2@1 -> ($Mutation_10951 ($Global 0) (seq.empty) ($0_A_S 0))
$t2@2 -> ($Mutation_10951 ($Global 0) (seq.empty) ($0_A_S 0))
$t4 -> 0
$t5 -> ($Mutation_3430 ($Global 0) (seq.empty) 0)
$t5@@0 -> false
$t5@0 -> ($Mutation_3430 ($Global 0) (seq.empty) 0)
$t5@1 -> ($Mutation_3430 ($Global 0) (seq.empty) 0)
$t7 -> false
$t8 -> (- 1)
$t9 -> false
$temp_0'$0_A_S'@0 -> ($0_A_S 0)
$temp_0'$0_A_S'@0@@0 -> ($0_A_S 3)
$temp_0'bool'@0 -> false
$1_Hash_sha2 -> {
  else -> (seq.empty)
}
$1_Hash_sha3 -> {
  else -> (seq.empty)
}
$1_Signature_$ed25519_validate_pubkey -> {
  else -> false
}
$1_Signature_$ed25519_verify -> {
  else -> false
}
$ConstMemoryDomain -> {
  false -> T@[Int]Bool!val!0
  true -> T@[Int]Bool!val!1
  else -> T@[Int]Bool!val!1
}
$IndexOfVec'u8' -> {
  else -> 0
}
$InRange -> {
  else -> false
}
$IsValid'$0_A_S' -> {
  else -> false
}
$IsValid'$0_B_T' -> {
  else -> false
}
$IsValid'address' -> {
  0 -> true
  1 -> true
  else -> true
}
$IsValid'num' -> {
  else -> false
}
$IsValid'u128' -> {
  else -> false
}
$IsValid'u64' -> {
  (- 1) -> false
  0 -> true
  else -> false
}
$IsValid'u8' -> {
  else -> false
}
$IsValid'vec'u8'' -> {
  else -> false
}
$shl -> {
  else -> 0
}
$shr -> {
  else -> 0
}
ControlFlow -> {
  0 0 -> 18756
  0 16334 -> 16382
  0 16382 -> (- 18909)
  0 18756 -> 16334
  else -> (- 18909)
}
lambda#0 -> {
  false -> T@[Int]Bool!val!0
  true -> T@[Int]Bool!val!1
  else -> T@[Int]Bool!val!1
}
ReverseVec_3283 -> {
  else -> (seq.empty)
}
Select__T@[Int]$0_A_S_ -> {
  T@[Int]$0_A_S!val!0 0 -> ($0_A_S 0)
  T@[Int]$0_A_S!val!1 0 -> ($0_A_S 2)
  T@[Int]$0_A_S!val!1 1 -> ($0_A_S (- 2))
  T@[Int]$0_A_S!val!2 1 -> ($0_A_S 3)
  else -> ($0_A_S 2)
}
Select__T@[Int]Bool_ -> {
  T@[Int]Bool!val!2 0 -> true
  T@[Int]Bool!val!3 0 -> true
  T@[Int]Bool!val!3 1 -> false
  T@[Int]Bool!val!5 1 -> false
  T@[Int]Bool!val!6 1 -> true
  else -> false
}
Store__T@[Int]$0_A_S_ -> {
  T@[Int]$0_A_S!val!0 1 ($0_A_S 3) -> T@[Int]$0_A_S!val!2
  else -> T@[Int]$0_A_S!val!2
}
Store__T@[Int]Bool_ -> {
  T@[Int]Bool!val!2 1 false -> T@[Int]Bool!val!5
  T@[Int]Bool!val!2 1 true -> T@[Int]Bool!val!6
  else -> T@[Int]Bool!val!5
}
*** END_MODEL
assert_failed(2,2331,2347): unknown assertion failed
Execution trace:
    output.bpl(1680,9): anon0
    output.bpl(1680,9): anon0$1
    output.bpl(1712,34): anon10_Else
    output.bpl(1752,34): anon11_Else
    output.bpl(1770,9): anon12_Then
    output.bpl(1777,5): anon7
    output.bpl(1791,34): anon13_Else
Augmented execution trace:
$at(2,2153,2364)
$at(2,2409,2437)
$at(2,2153,2154)
$track_local(1,3,0):0
$at(2,2223,2239)
$track_local(1,3,1):3
$at(2,2249,2267)
$at(2,2286,2302)
$track_local(1,3,2):2
$at(2,2331,2347)
*** MODEL
_$t0 -> 0
_$t0@@0 -> 0
$0_A_S_$memory -> ($Memory_10918 T@[Int]Bool!val!2 T@[Int]$0_A_S!val!0)
$0_A_S_$memory@0 -> ($Memory_10918 T@[Int]Bool!val!5 T@[Int]$0_A_S!val!1)
$0_A_S_$memory@1 -> ($Memory_10918 T@[Int]Bool!val!0 T@[Int]$0_A_S!val!0)
$0_A_S_$memory@2 -> ($Memory_10918 T@[Int]Bool!val!5 T@[Int]$0_A_S!val!1)
$0_A_S_$modifies -> T@[Int]Bool!val!3
$abort_code@0 -> 0
$abort_code@1 -> 0
$abort_flag@0 -> false
$EXEC_FAILURE_CODE -> (- 1)
$MAX_U128 -> 340282366920938463463374607431768211455
$MAX_U64 -> 18446744073709551615
$MAX_U8 -> 255
$t2 -> ($0_A_S 0)
$t2@0 -> ($0_A_S 0)
$t2@1 -> ($0_A_S 0)
$t3 -> 3
$t4 -> false
$t4@0 -> 0
$t6 -> false
$t7 -> 2
$t8 -> false
$temp_0'$0_A_S'@0 -> ($0_A_S 2)
$temp_0'bool'@0 -> true
$1_Hash_sha2 -> {
  else -> (seq.empty)
}
$1_Hash_sha3 -> {
  else -> (seq.empty)
}
$1_Signature_$ed25519_validate_pubkey -> {
  else -> false
}
$1_Signature_$ed25519_verify -> {
  else -> false
}
$ConstMemoryDomain -> {
  false -> T@[Int]Bool!val!0
  true -> T@[Int]Bool!val!1
  else -> T@[Int]Bool!val!1
}
$IndexOfVec'u8' -> {
  else -> 0
}
$InRange -> {
  else -> false
}
$IsValid'$0_A_S' -> {
  else -> false
}
$IsValid'$0_B_T' -> {
  else -> false
}
$IsValid'address' -> {
  0 -> true
  else -> true
}
$IsValid'num' -> {
  else -> false
}
$IsValid'u128' -> {
  else -> false
}
$IsValid'u64' -> {
  2 -> true
  3 -> true
  else -> true
}
$IsValid'u8' -> {
  else -> false
}
$IsValid'vec'u8'' -> {
  else -> false
}
$shl -> {
  else -> 0
}
$shr -> {
  else -> 0
}
ControlFlow -> {
  0 0 -> 19069
  0 16654 -> 16702
  0 16702 -> 16708
  0 16708 -> 16816
  0 16748 -> 16786
  0 16786 -> (- 19337)
  0 16816 -> 16748
  0 19069 -> 16654
  else -> (- 19337)
}
lambda#0 -> {
  false -> T@[Int]Bool!val!0
  true -> T@[Int]Bool!val!1
  else -> T@[Int]Bool!val!1
}
ReverseVec_3283 -> {
  else -> (seq.empty)
}
Select__T@[Int]$0_A_S_ -> {
  T@[Int]$0_A_S!val!0 0 -> ($0_A_S 3)
  T@[Int]$0_A_S!val!1 0 -> ($0_A_S 2)
  else -> ($0_A_S 3)
}
Select__T@[Int]Bool_ -> {
  T@[Int]Bool!val!2 0 -> true
  T@[Int]Bool!val!3 0 -> true
  T@[Int]Bool!val!4 0 -> false
  T@[Int]Bool!val!5 0 -> true
  else -> false
}
Store__T@[Int]$0_A_S_ -> {
  T@[Int]$0_A_S!val!0 0 ($0_A_S 2) -> T@[Int]$0_A_S!val!1
  else -> T@[Int]$0_A_S!val!1
}
Store__T@[Int]Bool_ -> {
  T@[Int]Bool!val!2 0 false -> T@[Int]Bool!val!4
  T@[Int]Bool!val!2 0 true -> T@[Int]Bool!val!5
  else -> T@[Int]Bool!val!4
}
*** END_MODEL
Prover error: Unexpected value: (seq.unit 1)

Advisory: $0_B_mutate_at_test_incorrect$verify SKIPPED because of internal error: unexpected prover output: Exception of type 'Microsoft.Boogie.SMTLib.SMTLibProcessTheoremProver+BadExprFromProver' was thrown.
output.bpl(1840,27): Verification inconclusive ($0_B_mutate_at_test_incorrect$verify)

Boogie program verifier finished with 4 errors, 1 inconclusive

