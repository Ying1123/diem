(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)

(declare-sort Element 0)
(declare-fun a_457 () (Seq Element))
(declare-fun a_458 () (Seq Element))
(declare-fun a_460 () (Seq Element))
(declare-fun a_462 () (Seq Element))
(declare-fun a_464 () (Seq Element))
(declare-fun a_466 () (Seq Element))
(declare-fun a_468 () (Seq Element))
(declare-fun a_469 () (Seq Element))
(declare-fun a_471 () (Seq Element))
(declare-fun a_473 () (Seq Element))
(declare-fun a_475 () (Seq Element))
(declare-fun a_477 () (Seq Element))
(declare-fun a_479 () (Seq Element))
(declare-fun a_481 () (Seq Element))
(declare-fun a_483 () (Seq Element))
(declare-fun a_485 () (Seq Element))
(declare-fun a_486 () (Seq Element))
(declare-fun a_487 () (Seq Element))
(declare-fun a_489 () (Seq Element))
(declare-fun a_491 () (Seq Element))
(declare-fun a_493 () (Seq Element))
(declare-fun a_494 () (Seq Element))
(declare-fun a_496 () (Seq Element))
(declare-fun a_498 () (Seq Element))
(declare-fun a_500 () (Seq Element))
(declare-fun a_502 () (Seq Element))
(declare-fun a_504 () (Seq Element))
(declare-fun a_506 () (Seq Element))
(declare-fun a_508 () (Seq Element))
(declare-fun a_510 () (Seq Element))
(declare-fun e_456 () Element)
(declare-fun e_459 () Element)
(declare-fun e_461 () Element)
(declare-fun e_463 () Element)
(declare-fun e_465 () Element)
(declare-fun e_467 () Element)
(declare-fun e_470 () Element)
(declare-fun e_472 () Element)
(declare-fun e_474 () Element)
(declare-fun e_476 () Element)
(declare-fun e_478 () Element)
(declare-fun e_480 () Element)
(declare-fun e_482 () Element)
(declare-fun e_484 () Element)
(declare-fun e_488 () Element)
(declare-fun e_490 () Element)
(declare-fun e_492 () Element)
(declare-fun e_495 () Element)
(declare-fun e_497 () Element)
(declare-fun e_499 () Element)
(declare-fun e_501 () Element)
(declare-fun e_503 () Element)
(declare-fun e_505 () Element)
(declare-fun e_507 () Element)
(declare-fun e_509 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(assert (= a_457 (seq.update a1 i2 (seq.unit e_456))))
(assert (= a_458 (seq.update a_457 i2 (seq.unit e_456))))
(assert (= a_460 (seq.update a_458 i7 (seq.unit e_459))))
(assert (= a_462 (seq.update a_460 i5 (seq.unit e_461))))
(assert (= a_464 (seq.update a_462 i7 (seq.unit e_463))))
(assert (= a_466 (seq.update a_464 i3 (seq.unit e_465))))
(assert (= a_468 (seq.update a_466 i2 (seq.unit e_467))))
(assert (= a_469 (seq.update a_468 i2 (seq.unit e_467))))
(assert (= a_471 (seq.update a_469 i6 (seq.unit e_470))))
(assert (= a_473 (seq.update a_471 i3 (seq.unit e_472))))
(assert (= a_475 (seq.update a_473 i0 (seq.unit e_474))))
(assert (= a_477 (seq.update a_475 i2 (seq.unit e_476))))
(assert (= a_479 (seq.update a_477 i6 (seq.unit e_478))))
(assert (= a_481 (seq.update a_479 i0 (seq.unit e_480))))
(assert (= a_483 (seq.update a_481 i2 (seq.unit e_482))))
(assert (= a_485 (seq.update a_483 i5 (seq.unit e_484))))
(assert (= a_486 (seq.update a_458 i5 (seq.unit e_461))))
(assert (= a_487 (seq.update a_486 i7 (seq.unit e_459))))
(assert (= a_489 (seq.update a_487 i3 (seq.unit e_488))))
(assert (= a_491 (seq.update a_489 i7 (seq.unit e_490))))
(assert (= a_493 (seq.update a_491 i2 (seq.unit e_492))))
(assert (= a_494 (seq.update a_493 i2 (seq.unit e_492))))
(assert (= a_496 (seq.update a_494 i6 (seq.unit e_495))))
(assert (= a_498 (seq.update a_496 i3 (seq.unit e_497))))
(assert (= a_500 (seq.update a_498 i2 (seq.unit e_499))))
(assert (= a_502 (seq.update a_500 i0 (seq.unit e_501))))
(assert (= a_504 (seq.update a_502 i0 (seq.unit e_503))))
(assert (= a_506 (seq.update a_504 i6 (seq.unit e_505))))
(assert (= a_508 (seq.update a_506 i2 (seq.unit e_507))))
(assert (= a_510 (seq.update a_508 i5 (seq.unit e_509))))
(assert (= e_456 (seq.nth a1 i2)))
(assert (= e_459 (seq.nth a_458 i5)))
(assert (= e_461 (seq.nth a_458 i7)))
(assert (= e_463 (seq.nth a_462 i3)))
(assert (= e_465 (seq.nth a_462 i7)))
(assert (= e_467 (seq.nth a_466 i2)))
(assert (= e_470 (seq.nth a_469 i3)))
(assert (= e_472 (seq.nth a_469 i6)))
(assert (= e_474 (seq.nth a_473 i2)))
(assert (= e_476 (seq.nth a_473 i0)))
(assert (= e_478 (seq.nth a_477 i0)))
(assert (= e_480 (seq.nth a_477 i6)))
(assert (= e_482 (seq.nth a_481 i5)))
(assert (= e_484 (seq.nth a_481 i2)))
(assert (= e_488 (seq.nth a_487 i7)))
(assert (= e_490 (seq.nth a_487 i3)))
(assert (= e_492 (seq.nth a_491 i2)))
(assert (= e_495 (seq.nth a_494 i3)))
(assert (= e_497 (seq.nth a_494 i6)))
(assert (= e_499 (seq.nth a_498 i0)))
(assert (= e_501 (seq.nth a_498 i2)))
(assert (= e_503 (seq.nth a_502 i6)))
(assert (= e_505 (seq.nth a_502 i0)))
(assert (= e_507 (seq.nth a_506 i5)))
(assert (= e_509 (seq.nth a_506 i2)))
(assert (not (= a_485 a_510)))
(check-sat)
(exit)
