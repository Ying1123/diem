(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)

(declare-sort Element 0)
(declare-fun a_81 () (Seq Element))
(declare-fun a_83 () (Seq Element))
(declare-fun a_85 () (Seq Element))
(declare-fun a_86 () (Seq Element))
(declare-fun a_88 () (Seq Element))
(declare-fun a_89 () (Seq Element))
(declare-fun a_90 () (Seq Element))
(declare-fun a_91 () (Seq Element))
(declare-fun a_93 () (Seq Element))
(declare-fun a_94 () (Seq Element))
(declare-fun a_96 () (Seq Element))
(declare-fun a_98 () (Seq Element))
(declare-fun e_80 () Element)
(declare-fun e_82 () Element)
(declare-fun e_84 () Element)
(declare-fun e_87 () Element)
(declare-fun e_92 () Element)
(declare-fun e_95 () Element)
(declare-fun e_97 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(assert (= a_81 (seq.update a1 i0 (seq.unit e_80))))
(assert (= a_83 (seq.update a_81 i1 (seq.unit e_82))))
(assert (= a_85 (seq.update a_83 i0 (seq.unit e_84))))
(assert (= a_86 (seq.update a_85 i0 (seq.unit e_84))))
(assert (= a_88 (seq.update a_86 i2 (seq.unit e_87))))
(assert (= a_89 (seq.update a_88 i2 (seq.unit e_87))))
(assert (= a_90 (seq.update a1 i1 (seq.unit e_82))))
(assert (= a_91 (seq.update a_90 i0 (seq.unit e_80))))
(assert (= a_93 (seq.update a_91 i0 (seq.unit e_92))))
(assert (= a_94 (seq.update a_93 i0 (seq.unit e_92))))
(assert (= a_96 (seq.update a_94 i2 (seq.unit e_95))))
(assert (= a_98 (seq.update a_96 i0 (seq.unit e_97))))
(assert (= e_80 (seq.nth a1 i1)))
(assert (= e_82 (seq.nth a1 i0)))
(assert (= e_84 (seq.nth a_83 i0)))
(assert (= e_87 (seq.nth a_86 i2)))
(assert (= e_92 (seq.nth a_91 i0)))
(assert (= e_95 (seq.nth a_94 i0)))
(assert (= e_97 (seq.nth a_94 i2)))
(assert (not (= a_89 a_98)))
(check-sat)
(exit)
