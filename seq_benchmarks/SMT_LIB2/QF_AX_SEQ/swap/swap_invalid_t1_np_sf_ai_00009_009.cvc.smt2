(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)

(declare-sort Element 0)
(declare-fun a_1 () (Seq Element))
(declare-fun a_10 () (Seq Element))
(declare-fun a_12 () (Seq Element))
(declare-fun a_14 () (Seq Element))
(declare-fun a_16 () (Seq Element))
(declare-fun a_18 () (Seq Element))
(declare-fun a_20 () (Seq Element))
(declare-fun a_21 () (Seq Element))
(declare-fun a_23 () (Seq Element))
(declare-fun a_25 () (Seq Element))
(declare-fun a_27 () (Seq Element))
(declare-fun a_29 () (Seq Element))
(declare-fun a_3 () (Seq Element))
(declare-fun a_31 () (Seq Element))
(declare-fun a_33 () (Seq Element))
(declare-fun a_34 () (Seq Element))
(declare-fun a_35 () (Seq Element))
(declare-fun a_37 () (Seq Element))
(declare-fun a_38 () (Seq Element))
(declare-fun a_40 () (Seq Element))
(declare-fun a_42 () (Seq Element))
(declare-fun a_44 () (Seq Element))
(declare-fun a_46 () (Seq Element))
(declare-fun a_48 () (Seq Element))
(declare-fun a_5 () (Seq Element))
(declare-fun a_50 () (Seq Element))
(declare-fun a_52 () (Seq Element))
(declare-fun a_53 () (Seq Element))
(declare-fun a_55 () (Seq Element))
(declare-fun a_57 () (Seq Element))
(declare-fun a_59 () (Seq Element))
(declare-fun a_6 () (Seq Element))
(declare-fun a_61 () (Seq Element))
(declare-fun a_63 () (Seq Element))
(declare-fun a_65 () (Seq Element))
(declare-fun a_8 () (Seq Element))
(declare-fun e_0 () Element)
(declare-fun e_11 () Element)
(declare-fun e_13 () Element)
(declare-fun e_15 () Element)
(declare-fun e_17 () Element)
(declare-fun e_19 () Element)
(declare-fun e_2 () Element)
(declare-fun e_22 () Element)
(declare-fun e_24 () Element)
(declare-fun e_26 () Element)
(declare-fun e_28 () Element)
(declare-fun e_30 () Element)
(declare-fun e_32 () Element)
(declare-fun e_36 () Element)
(declare-fun e_39 () Element)
(declare-fun e_4 () Element)
(declare-fun e_41 () Element)
(declare-fun e_43 () Element)
(declare-fun e_45 () Element)
(declare-fun e_47 () Element)
(declare-fun e_49 () Element)
(declare-fun e_51 () Element)
(declare-fun e_54 () Element)
(declare-fun e_56 () Element)
(declare-fun e_58 () Element)
(declare-fun e_60 () Element)
(declare-fun e_62 () Element)
(declare-fun e_64 () Element)
(declare-fun e_7 () Element)
(declare-fun e_9 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(declare-fun i8 () Int)
(assert (= a_1 (seq.update a1 i8 (seq.unit e_0))))
(assert (= a_10 (seq.update a_8 i7 (seq.unit e_9))))
(assert (= a_12 (seq.update a_10 i1 (seq.unit e_11))))
(assert (= a_14 (seq.update a_12 i6 (seq.unit e_13))))
(assert (= a_16 (seq.update a_14 i0 (seq.unit e_15))))
(assert (= a_18 (seq.update a_16 i8 (seq.unit e_17))))
(assert (= a_20 (seq.update a_18 i6 (seq.unit e_19))))
(assert (= a_21 (seq.update a_20 i6 (seq.unit e_19))))
(assert (= a_23 (seq.update a_21 i1 (seq.unit e_22))))
(assert (= a_25 (seq.update a_23 i5 (seq.unit e_24))))
(assert (= a_27 (seq.update a_25 i3 (seq.unit e_26))))
(assert (= a_29 (seq.update a_27 i6 (seq.unit e_28))))
(assert (= a_3 (seq.update a_1 i2 (seq.unit e_2))))
(assert (= a_31 (seq.update a_29 i0 (seq.unit e_30))))
(assert (= a_33 (seq.update a_31 i4 (seq.unit e_32))))
(assert (= a_34 (seq.update a1 i2 (seq.unit e_2))))
(assert (= a_35 (seq.update a_34 i8 (seq.unit e_0))))
(assert (= a_37 (seq.update a_35 i4 (seq.unit e_36))))
(assert (= a_38 (seq.update a_37 i4 (seq.unit e_36))))
(assert (= a_40 (seq.update a_38 i2 (seq.unit e_39))))
(assert (= a_42 (seq.update a_40 i7 (seq.unit e_41))))
(assert (= a_44 (seq.update a_42 i6 (seq.unit e_43))))
(assert (= a_46 (seq.update a_44 i1 (seq.unit e_45))))
(assert (= a_48 (seq.update a_46 i0 (seq.unit e_47))))
(assert (= a_5 (seq.update a_3 i4 (seq.unit e_4))))
(assert (= a_50 (seq.update a_48 i8 (seq.unit e_49))))
(assert (= a_52 (seq.update a_50 i6 (seq.unit e_51))))
(assert (= a_53 (seq.update a_52 i6 (seq.unit e_51))))
(assert (= a_55 (seq.update a_53 i1 (seq.unit e_54))))
(assert (= a_57 (seq.update a_55 i5 (seq.unit e_56))))
(assert (= a_59 (seq.update a_57 i3 (seq.unit e_58))))
(assert (= a_6 (seq.update a_5 i4 (seq.unit e_4))))
(assert (= a_61 (seq.update a_59 i6 (seq.unit e_60))))
(assert (= a_63 (seq.update a_61 i5 (seq.unit e_62))))
(assert (= a_65 (seq.update a_63 i0 (seq.unit e_64))))
(assert (= a_8 (seq.update a_6 i2 (seq.unit e_7))))
(assert (= e_0 (seq.nth a1 i2)))
(assert (= e_11 (seq.nth a_10 i6)))
(assert (= e_13 (seq.nth a_10 i1)))
(assert (= e_15 (seq.nth a_14 i8)))
(assert (= e_17 (seq.nth a_14 i0)))
(assert (= e_19 (seq.nth a_18 i6)))
(assert (= e_2 (seq.nth a1 i8)))
(assert (= e_22 (seq.nth a_21 i5)))
(assert (= e_24 (seq.nth a_21 i1)))
(assert (= e_26 (seq.nth a_25 i6)))
(assert (= e_28 (seq.nth a_25 i3)))
(assert (= e_30 (seq.nth a_29 i4)))
(assert (= e_32 (seq.nth a_29 i0)))
(assert (= e_36 (seq.nth a_35 i4)))
(assert (= e_39 (seq.nth a_38 i7)))
(assert (= e_4 (seq.nth a_3 i4)))
(assert (= e_41 (seq.nth a_38 i2)))
(assert (= e_43 (seq.nth a_42 i1)))
(assert (= e_45 (seq.nth a_42 i6)))
(assert (= e_47 (seq.nth a_46 i8)))
(assert (= e_49 (seq.nth a_46 i0)))
(assert (= e_51 (seq.nth a_50 i6)))
(assert (= e_54 (seq.nth a_53 i5)))
(assert (= e_56 (seq.nth a_53 i1)))
(assert (= e_58 (seq.nth a_57 i6)))
(assert (= e_60 (seq.nth a_57 i3)))
(assert (= e_62 (seq.nth a_61 i0)))
(assert (= e_64 (seq.nth a_61 i5)))
(assert (= e_7 (seq.nth a_6 i7)))
(assert (= e_9 (seq.nth a_6 i2)))
(assert (not (= a_33 a_65)))
(check-sat)
(exit)
