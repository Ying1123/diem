(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)

(declare-sort Element 0)
(declare-fun a_371 () (Seq Element))
(declare-fun a_373 () (Seq Element))
(declare-fun a_375 () (Seq Element))
(declare-fun a_377 () (Seq Element))
(declare-fun a_379 () (Seq Element))
(declare-fun a_381 () (Seq Element))
(declare-fun a_383 () (Seq Element))
(declare-fun a_385 () (Seq Element))
(declare-fun a_387 () (Seq Element))
(declare-fun a_388 () (Seq Element))
(declare-fun a_390 () (Seq Element))
(declare-fun a_392 () (Seq Element))
(declare-fun a_394 () (Seq Element))
(declare-fun a_396 () (Seq Element))
(declare-fun a_397 () (Seq Element))
(declare-fun a_398 () (Seq Element))
(declare-fun a_400 () (Seq Element))
(declare-fun a_402 () (Seq Element))
(declare-fun a_404 () (Seq Element))
(declare-fun a_405 () (Seq Element))
(declare-fun a_407 () (Seq Element))
(declare-fun a_409 () (Seq Element))
(declare-fun a_411 () (Seq Element))
(declare-fun a_413 () (Seq Element))
(declare-fun e_370 () Element)
(declare-fun e_372 () Element)
(declare-fun e_374 () Element)
(declare-fun e_376 () Element)
(declare-fun e_378 () Element)
(declare-fun e_380 () Element)
(declare-fun e_382 () Element)
(declare-fun e_384 () Element)
(declare-fun e_386 () Element)
(declare-fun e_389 () Element)
(declare-fun e_391 () Element)
(declare-fun e_393 () Element)
(declare-fun e_395 () Element)
(declare-fun e_399 () Element)
(declare-fun e_401 () Element)
(declare-fun e_403 () Element)
(declare-fun e_406 () Element)
(declare-fun e_408 () Element)
(declare-fun e_410 () Element)
(declare-fun e_412 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(assert (= a_371 (seq.update a1 i1 (seq.unit e_370))))
(assert (= a_373 (seq.update a_371 i5 (seq.unit e_372))))
(assert (= a_375 (seq.update a_373 i0 (seq.unit e_374))))
(assert (= a_377 (seq.update a_375 i3 (seq.unit e_376))))
(assert (= a_379 (seq.update a_377 i1 (seq.unit e_378))))
(assert (= a_381 (seq.update a_379 i4 (seq.unit e_380))))
(assert (= a_383 (seq.update a_381 i6 (seq.unit e_382))))
(assert (= a_385 (seq.update a_383 i0 (seq.unit e_384))))
(assert (= a_387 (seq.update a_385 i3 (seq.unit e_386))))
(assert (= a_388 (seq.update a_387 i3 (seq.unit e_386))))
(assert (= a_390 (seq.update a_388 i1 (seq.unit e_389))))
(assert (= a_392 (seq.update a_390 i3 (seq.unit e_391))))
(assert (= a_394 (seq.update a_392 i0 (seq.unit e_393))))
(assert (= a_396 (seq.update a_394 i3 (seq.unit e_395))))
(assert (= a_397 (seq.update a_377 i4 (seq.unit e_380))))
(assert (= a_398 (seq.update a_397 i1 (seq.unit e_378))))
(assert (= a_400 (seq.update a_398 i0 (seq.unit e_399))))
(assert (= a_402 (seq.update a_400 i6 (seq.unit e_401))))
(assert (= a_404 (seq.update a_402 i3 (seq.unit e_403))))
(assert (= a_405 (seq.update a_404 i3 (seq.unit e_403))))
(assert (= a_407 (seq.update a_405 i3 (seq.unit e_406))))
(assert (= a_409 (seq.update a_407 i1 (seq.unit e_408))))
(assert (= a_411 (seq.update a_409 i4 (seq.unit e_410))))
(assert (= a_413 (seq.update a_411 i0 (seq.unit e_412))))
(assert (= e_370 (seq.nth a1 i5)))
(assert (= e_372 (seq.nth a1 i1)))
(assert (= e_374 (seq.nth a_373 i3)))
(assert (= e_376 (seq.nth a_373 i0)))
(assert (= e_378 (seq.nth a_377 i4)))
(assert (= e_380 (seq.nth a_377 i1)))
(assert (= e_382 (seq.nth a_381 i0)))
(assert (= e_384 (seq.nth a_381 i6)))
(assert (= e_386 (seq.nth a_385 i3)))
(assert (= e_389 (seq.nth a_388 i3)))
(assert (= e_391 (seq.nth a_388 i1)))
(assert (= e_393 (seq.nth a_392 i3)))
(assert (= e_395 (seq.nth a_392 i0)))
(assert (= e_399 (seq.nth a_398 i6)))
(assert (= e_401 (seq.nth a_398 i0)))
(assert (= e_403 (seq.nth a_402 i3)))
(assert (= e_406 (seq.nth a_405 i1)))
(assert (= e_408 (seq.nth a_405 i3)))
(assert (= e_410 (seq.nth a_409 i0)))
(assert (= e_412 (seq.nth a_409 i4)))
(assert (not (= a_396 a_413)))
(check-sat)
(exit)
