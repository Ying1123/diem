(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)

(declare-sort Element 0)
(declare-fun a_405 () (Seq Element))
(declare-fun a_407 () (Seq Element))
(declare-fun a_409 () (Seq Element))
(declare-fun a_411 () (Seq Element))
(declare-fun a_413 () (Seq Element))
(declare-fun a_415 () (Seq Element))
(declare-fun a_417 () (Seq Element))
(declare-fun a_419 () (Seq Element))
(declare-fun a_421 () (Seq Element))
(declare-fun a_423 () (Seq Element))
(declare-fun a_425 () (Seq Element))
(declare-fun a_427 () (Seq Element))
(declare-fun a_429 () (Seq Element))
(declare-fun a_431 () (Seq Element))
(declare-fun a_433 () (Seq Element))
(declare-fun a_435 () (Seq Element))
(declare-fun a_437 () (Seq Element))
(declare-fun a_439 () (Seq Element))
(declare-fun a_440 () (Seq Element))
(declare-fun a_441 () (Seq Element))
(declare-fun a_443 () (Seq Element))
(declare-fun a_445 () (Seq Element))
(declare-fun a_447 () (Seq Element))
(declare-fun a_449 () (Seq Element))
(declare-fun a_451 () (Seq Element))
(declare-fun a_453 () (Seq Element))
(declare-fun a_455 () (Seq Element))
(declare-fun a_457 () (Seq Element))
(declare-fun a_459 () (Seq Element))
(declare-fun a_461 () (Seq Element))
(declare-fun a_463 () (Seq Element))
(declare-fun a_465 () (Seq Element))
(declare-fun a_467 () (Seq Element))
(declare-fun a_469 () (Seq Element))
(declare-fun a_471 () (Seq Element))
(declare-fun a_473 () (Seq Element))
(declare-fun e_404 () Element)
(declare-fun e_406 () Element)
(declare-fun e_408 () Element)
(declare-fun e_410 () Element)
(declare-fun e_412 () Element)
(declare-fun e_414 () Element)
(declare-fun e_416 () Element)
(declare-fun e_418 () Element)
(declare-fun e_420 () Element)
(declare-fun e_422 () Element)
(declare-fun e_424 () Element)
(declare-fun e_426 () Element)
(declare-fun e_428 () Element)
(declare-fun e_430 () Element)
(declare-fun e_432 () Element)
(declare-fun e_434 () Element)
(declare-fun e_436 () Element)
(declare-fun e_438 () Element)
(declare-fun e_442 () Element)
(declare-fun e_444 () Element)
(declare-fun e_446 () Element)
(declare-fun e_448 () Element)
(declare-fun e_450 () Element)
(declare-fun e_452 () Element)
(declare-fun e_454 () Element)
(declare-fun e_456 () Element)
(declare-fun e_458 () Element)
(declare-fun e_460 () Element)
(declare-fun e_462 () Element)
(declare-fun e_464 () Element)
(declare-fun e_466 () Element)
(declare-fun e_468 () Element)
(declare-fun e_470 () Element)
(declare-fun e_472 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(declare-fun i8 () Int)
(assert (= a_405 (seq.update a1 i4 (seq.unit e_404))))
(assert (= a_407 (seq.update a_405 i0 (seq.unit e_406))))
(assert (= a_409 (seq.update a_407 i6 (seq.unit e_408))))
(assert (= a_411 (seq.update a_409 i1 (seq.unit e_410))))
(assert (= a_413 (seq.update a_411 i2 (seq.unit e_412))))
(assert (= a_415 (seq.update a_413 i4 (seq.unit e_414))))
(assert (= a_417 (seq.update a_415 i1 (seq.unit e_416))))
(assert (= a_419 (seq.update a_417 i4 (seq.unit e_418))))
(assert (= a_421 (seq.update a_419 i0 (seq.unit e_420))))
(assert (= a_423 (seq.update a_421 i5 (seq.unit e_422))))
(assert (= a_425 (seq.update a_423 i7 (seq.unit e_424))))
(assert (= a_427 (seq.update a_425 i5 (seq.unit e_426))))
(assert (= a_429 (seq.update a_427 i8 (seq.unit e_428))))
(assert (= a_431 (seq.update a_429 i6 (seq.unit e_430))))
(assert (= a_433 (seq.update a_431 i4 (seq.unit e_432))))
(assert (= a_435 (seq.update a_433 i3 (seq.unit e_434))))
(assert (= a_437 (seq.update a_435 i4 (seq.unit e_436))))
(assert (= a_439 (seq.update a_437 i3 (seq.unit e_438))))
(assert (= a_440 (seq.update a1 i0 (seq.unit e_406))))
(assert (= a_441 (seq.update a_440 i4 (seq.unit e_404))))
(assert (= a_443 (seq.update a_441 i1 (seq.unit e_442))))
(assert (= a_445 (seq.update a_443 i6 (seq.unit e_444))))
(assert (= a_447 (seq.update a_445 i2 (seq.unit e_446))))
(assert (= a_449 (seq.update a_447 i4 (seq.unit e_448))))
(assert (= a_451 (seq.update a_449 i1 (seq.unit e_450))))
(assert (= a_453 (seq.update a_451 i4 (seq.unit e_452))))
(assert (= a_455 (seq.update a_453 i0 (seq.unit e_454))))
(assert (= a_457 (seq.update a_455 i5 (seq.unit e_456))))
(assert (= a_459 (seq.update a_457 i7 (seq.unit e_458))))
(assert (= a_461 (seq.update a_459 i5 (seq.unit e_460))))
(assert (= a_463 (seq.update a_461 i8 (seq.unit e_462))))
(assert (= a_465 (seq.update a_463 i6 (seq.unit e_464))))
(assert (= a_467 (seq.update a_465 i3 (seq.unit e_466))))
(assert (= a_469 (seq.update a_467 i4 (seq.unit e_468))))
(assert (= a_471 (seq.update a_469 i4 (seq.unit e_470))))
(assert (= a_473 (seq.update a_471 i3 (seq.unit e_472))))
(assert (= e_404 (seq.nth a1 i0)))
(assert (= e_406 (seq.nth a1 i4)))
(assert (= e_408 (seq.nth a_407 i1)))
(assert (= e_410 (seq.nth a_407 i6)))
(assert (= e_412 (seq.nth a_411 i4)))
(assert (= e_414 (seq.nth a_411 i2)))
(assert (= e_416 (seq.nth a_415 i4)))
(assert (= e_418 (seq.nth a_415 i1)))
(assert (= e_420 (seq.nth a_419 i5)))
(assert (= e_422 (seq.nth a_419 i0)))
(assert (= e_424 (seq.nth a_423 i5)))
(assert (= e_426 (seq.nth a_423 i7)))
(assert (= e_428 (seq.nth a_427 i6)))
(assert (= e_430 (seq.nth a_427 i8)))
(assert (= e_432 (seq.nth a_431 i3)))
(assert (= e_434 (seq.nth a_431 i4)))
(assert (= e_436 (seq.nth a_435 i3)))
(assert (= e_438 (seq.nth a_435 i4)))
(assert (= e_442 (seq.nth a_441 i6)))
(assert (= e_444 (seq.nth a_441 i1)))
(assert (= e_446 (seq.nth a_445 i4)))
(assert (= e_448 (seq.nth a_445 i2)))
(assert (= e_450 (seq.nth a_449 i4)))
(assert (= e_452 (seq.nth a_449 i1)))
(assert (= e_454 (seq.nth a_453 i5)))
(assert (= e_456 (seq.nth a_453 i0)))
(assert (= e_458 (seq.nth a_457 i5)))
(assert (= e_460 (seq.nth a_457 i7)))
(assert (= e_462 (seq.nth a_461 i6)))
(assert (= e_464 (seq.nth a_461 i8)))
(assert (= e_466 (seq.nth a_465 i4)))
(assert (= e_468 (seq.nth a_465 i3)))
(assert (= e_470 (seq.nth a_469 i3)))
(assert (= e_472 (seq.nth a_469 i4)))
(assert (not (= a_439 a_473)))
(check-sat)
(exit)
