(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)

(declare-sort Element 0)
(declare-fun a_638 () (Seq Element))
(declare-fun a_639 () (Seq Element))
(declare-fun a_640 () (Seq Element))
(declare-fun a_641 () (Seq Element))
(declare-fun a_642 () (Seq Element))
(declare-fun a_643 () (Seq Element))
(declare-fun a_644 () (Seq Element))
(declare-fun a_645 () (Seq Element))
(declare-fun a_646 () (Seq Element))
(declare-fun a_647 () (Seq Element))
(declare-fun a_648 () (Seq Element))
(declare-fun a_649 () (Seq Element))
(declare-fun a_650 () (Seq Element))
(declare-fun a_651 () (Seq Element))
(declare-fun a_652 () (Seq Element))
(declare-fun a_653 () (Seq Element))
(declare-fun a_654 () (Seq Element))
(declare-fun a_655 () (Seq Element))
(declare-fun a_656 () (Seq Element))
(declare-fun a_657 () (Seq Element))
(declare-fun a_658 () (Seq Element))
(declare-fun a_659 () (Seq Element))
(declare-fun a_660 () (Seq Element))
(declare-fun a_661 () (Seq Element))
(declare-fun a_662 () (Seq Element))
(declare-fun a_663 () (Seq Element))
(declare-fun a_664 () (Seq Element))
(declare-fun a_665 () (Seq Element))
(declare-fun a_666 () (Seq Element))
(declare-fun a_667 () (Seq Element))
(declare-fun a_668 () (Seq Element))
(declare-fun a_669 () (Seq Element))
(declare-fun a_670 () (Seq Element))
(declare-fun a_671 () (Seq Element))
(declare-fun a_672 () (Seq Element))
(declare-fun a_673 () (Seq Element))
(declare-fun a_674 () (Seq Element))
(declare-fun a_675 () (Seq Element))
(declare-fun a_676 () (Seq Element))
(declare-fun a_677 () (Seq Element))
(declare-fun a1 () (Seq Element))
(declare-fun e1 () Element)
(declare-fun e10 () Element)
(declare-fun e11 () Element)
(declare-fun e12 () Element)
(declare-fun e13 () Element)
(declare-fun e14 () Element)
(declare-fun e15 () Element)
(declare-fun e16 () Element)
(declare-fun e17 () Element)
(declare-fun e18 () Element)
(declare-fun e19 () Element)
(declare-fun e2 () Element)
(declare-fun e20 () Element)
(declare-fun e3 () Element)
(declare-fun e4 () Element)
(declare-fun e5 () Element)
(declare-fun e6 () Element)
(declare-fun e7 () Element)
(declare-fun e8 () Element)
(declare-fun e9 () Element)
(declare-fun i1 () Int)
(declare-fun i10 () Int)
(declare-fun i11 () Int)
(declare-fun i12 () Int)
(declare-fun i13 () Int)
(declare-fun i14 () Int)
(declare-fun i15 () Int)
(declare-fun i16 () Int)
(declare-fun i17 () Int)
(declare-fun i18 () Int)
(declare-fun i19 () Int)
(declare-fun i2 () Int)
(declare-fun i20 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(declare-fun i8 () Int)
(declare-fun i9 () Int)
(assert (= a_638 (seq.update a1 i1 (seq.unit e1))))
(assert (= a_639 (seq.update a_638 i2 (seq.unit e2))))
(assert (= a_640 (seq.update a_639 i3 (seq.unit e3))))
(assert (= a_641 (seq.update a_640 i4 (seq.unit e4))))
(assert (= a_642 (seq.update a_641 i5 (seq.unit e5))))
(assert (= a_643 (seq.update a_642 i6 (seq.unit e6))))
(assert (= a_644 (seq.update a_643 i7 (seq.unit e7))))
(assert (= a_645 (seq.update a_644 i8 (seq.unit e8))))
(assert (= a_646 (seq.update a_645 i9 (seq.unit e9))))
(assert (= a_647 (seq.update a_646 i10 (seq.unit e10))))
(assert (= a_648 (seq.update a_647 i11 (seq.unit e11))))
(assert (= a_649 (seq.update a_648 i12 (seq.unit e12))))
(assert (= a_650 (seq.update a_649 i13 (seq.unit e13))))
(assert (= a_651 (seq.update a_650 i14 (seq.unit e14))))
(assert (= a_652 (seq.update a_651 i15 (seq.unit e15))))
(assert (= a_653 (seq.update a_652 i16 (seq.unit e16))))
(assert (= a_654 (seq.update a_653 i17 (seq.unit e17))))
(assert (= a_655 (seq.update a_654 i18 (seq.unit e18))))
(assert (= a_656 (seq.update a_655 i19 (seq.unit e19))))
(assert (= a_657 (seq.update a_656 i20 (seq.unit e20))))
(assert (= a_658 (seq.update a1 i16 (seq.unit e16))))
(assert (= a_659 (seq.update a_658 i4 (seq.unit e4))))
(assert (= a_660 (seq.update a_659 i7 (seq.unit e7))))
(assert (= a_661 (seq.update a_660 i17 (seq.unit e17))))
(assert (= a_662 (seq.update a_661 i13 (seq.unit e13))))
(assert (= a_663 (seq.update a_662 i8 (seq.unit e8))))
(assert (= a_664 (seq.update a_663 i20 (seq.unit e20))))
(assert (= a_665 (seq.update a_664 i3 (seq.unit e3))))
(assert (= a_666 (seq.update a_665 i6 (seq.unit e6))))
(assert (= a_667 (seq.update a_666 i14 (seq.unit e14))))
(assert (= a_668 (seq.update a_667 i12 (seq.unit e12))))
(assert (= a_669 (seq.update a_668 i5 (seq.unit e5))))
(assert (= a_670 (seq.update a_669 i10 (seq.unit e10))))
(assert (= a_671 (seq.update a_670 i15 (seq.unit e15))))
(assert (= a_672 (seq.update a_671 i1 (seq.unit e1))))
(assert (= a_673 (seq.update a_672 i11 (seq.unit e11))))
(assert (= a_674 (seq.update a_673 i19 (seq.unit e19))))
(assert (= a_675 (seq.update a_674 i2 (seq.unit e2))))
(assert (= a_676 (seq.update a_675 i18 (seq.unit e18))))
(assert (= a_677 (seq.update a_676 i9 (seq.unit e9))))
(assert (not (= i19 i20)))
(assert (not (= i18 i20)))
(assert (not (= i18 i19)))
(assert (not (= i17 i20)))
(assert (not (= i17 i19)))
(assert (not (= i17 i18)))
(assert (not (= i16 i20)))
(assert (not (= i16 i19)))
(assert (not (= i16 i18)))
(assert (not (= i16 i17)))
(assert (not (= i15 i20)))
(assert (not (= i15 i19)))
(assert (not (= i15 i18)))
(assert (not (= i15 i17)))
(assert (not (= i15 i16)))
(assert (not (= i14 i20)))
(assert (not (= i14 i19)))
(assert (not (= i14 i18)))
(assert (not (= i14 i17)))
(assert (not (= i14 i16)))
(assert (not (= i14 i15)))
(assert (not (= i13 i20)))
(assert (not (= i13 i19)))
(assert (not (= i13 i18)))
(assert (not (= i13 i17)))
(assert (not (= i13 i16)))
(assert (not (= i13 i15)))
(assert (not (= i13 i14)))
(assert (not (= i12 i20)))
(assert (not (= i12 i19)))
(assert (not (= i12 i18)))
(assert (not (= i12 i17)))
(assert (not (= i12 i16)))
(assert (not (= i12 i15)))
(assert (not (= i12 i14)))
(assert (not (= i12 i13)))
(assert (not (= i11 i20)))
(assert (not (= i11 i19)))
(assert (not (= i11 i18)))
(assert (not (= i11 i17)))
(assert (not (= i11 i16)))
(assert (not (= i11 i15)))
(assert (not (= i11 i14)))
(assert (not (= i11 i13)))
(assert (not (= i11 i12)))
(assert (not (= i10 i20)))
(assert (not (= i10 i19)))
(assert (not (= i10 i18)))
(assert (not (= i10 i17)))
(assert (not (= i10 i16)))
(assert (not (= i10 i15)))
(assert (not (= i10 i14)))
(assert (not (= i10 i13)))
(assert (not (= i10 i12)))
(assert (not (= i10 i11)))
(assert (not (= i9 i20)))
(assert (not (= i9 i19)))
(assert (not (= i9 i18)))
(assert (not (= i9 i17)))
(assert (not (= i9 i16)))
(assert (not (= i9 i15)))
(assert (not (= i9 i14)))
(assert (not (= i9 i13)))
(assert (not (= i9 i12)))
(assert (not (= i9 i11)))
(assert (not (= i9 i10)))
(assert (not (= i8 i20)))
(assert (not (= i8 i19)))
(assert (not (= i8 i18)))
(assert (not (= i8 i17)))
(assert (not (= i8 i16)))
(assert (not (= i8 i15)))
(assert (not (= i8 i14)))
(assert (not (= i8 i13)))
(assert (not (= i8 i12)))
(assert (not (= i8 i11)))
(assert (not (= i8 i10)))
(assert (not (= i8 i9)))
(assert (not (= i7 i20)))
(assert (not (= i7 i19)))
(assert (not (= i7 i18)))
(assert (not (= i7 i17)))
(assert (not (= i7 i16)))
(assert (not (= i7 i15)))
(assert (not (= i7 i14)))
(assert (not (= i7 i13)))
(assert (not (= i7 i12)))
(assert (not (= i7 i11)))
(assert (not (= i7 i10)))
(assert (not (= i7 i9)))
(assert (not (= i7 i8)))
(assert (not (= i6 i20)))
(assert (not (= i6 i19)))
(assert (not (= i6 i18)))
(assert (not (= i6 i17)))
(assert (not (= i6 i16)))
(assert (not (= i6 i15)))
(assert (not (= i6 i14)))
(assert (not (= i6 i13)))
(assert (not (= i6 i12)))
(assert (not (= i6 i11)))
(assert (not (= i6 i10)))
(assert (not (= i6 i9)))
(assert (not (= i6 i8)))
(assert (not (= i6 i7)))
(assert (not (= i5 i20)))
(assert (not (= i5 i19)))
(assert (not (= i5 i18)))
(assert (not (= i5 i17)))
(assert (not (= i5 i16)))
(assert (not (= i5 i15)))
(assert (not (= i5 i14)))
(assert (not (= i5 i13)))
(assert (not (= i5 i12)))
(assert (not (= i5 i11)))
(assert (not (= i5 i10)))
(assert (not (= i5 i9)))
(assert (not (= i5 i8)))
(assert (not (= i5 i7)))
(assert (not (= i5 i6)))
(assert (not (= i4 i20)))
(assert (not (= i4 i19)))
(assert (not (= i4 i18)))
(assert (not (= i4 i17)))
(assert (not (= i4 i16)))
(assert (not (= i4 i15)))
(assert (not (= i4 i14)))
(assert (not (= i4 i13)))
(assert (not (= i4 i12)))
(assert (not (= i4 i11)))
(assert (not (= i4 i10)))
(assert (not (= i4 i9)))
(assert (not (= i4 i8)))
(assert (not (= i4 i7)))
(assert (not (= i4 i6)))
(assert (not (= i4 i5)))
(assert (not (= i3 i20)))
(assert (not (= i3 i19)))
(assert (not (= i3 i18)))
(assert (not (= i3 i17)))
(assert (not (= i3 i16)))
(assert (not (= i3 i15)))
(assert (not (= i3 i14)))
(assert (not (= i3 i13)))
(assert (not (= i3 i12)))
(assert (not (= i3 i11)))
(assert (not (= i3 i10)))
(assert (not (= i3 i9)))
(assert (not (= i3 i8)))
(assert (not (= i3 i7)))
(assert (not (= i3 i6)))
(assert (not (= i3 i5)))
(assert (not (= i3 i4)))
(assert (not (= i2 i20)))
(assert (not (= i2 i19)))
(assert (not (= i2 i18)))
(assert (not (= i2 i17)))
(assert (not (= i2 i16)))
(assert (not (= i2 i15)))
(assert (not (= i2 i14)))
(assert (not (= i2 i13)))
(assert (not (= i2 i12)))
(assert (not (= i2 i11)))
(assert (not (= i2 i10)))
(assert (not (= i2 i9)))
(assert (not (= i2 i8)))
(assert (not (= i2 i7)))
(assert (not (= i2 i6)))
(assert (not (= i2 i5)))
(assert (not (= i2 i4)))
(assert (not (= i2 i3)))
(assert (not (= i1 i20)))
(assert (not (= i1 i19)))
(assert (not (= i1 i18)))
(assert (not (= i1 i17)))
(assert (not (= i1 i16)))
(assert (not (= i1 i15)))
(assert (not (= i1 i14)))
(assert (not (= i1 i13)))
(assert (not (= i1 i12)))
(assert (not (= i1 i11)))
(assert (not (= i1 i10)))
(assert (not (= i1 i9)))
(assert (not (= i1 i8)))
(assert (not (= i1 i7)))
(assert (not (= i1 i6)))
(assert (not (= i1 i5)))
(assert (not (= i1 i4)))
(assert (not (= i1 i3)))
(assert (not (= i1 i2)))
(assert (not (= a_657 a_677)))
(check-sat)
(exit)
