(set-info :smt-lib-version 2.6)
(set-logic QF_AX)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-sort Index 0)
(declare-sort Element 0)
(declare-fun a_939 () (Array Index Element))
(declare-fun a_940 () (Array Index Element))
(declare-fun a_942 () (Array Index Element))
(declare-fun a_944 () (Array Index Element))
(declare-fun a_946 () (Array Index Element))
(declare-fun a_948 () (Array Index Element))
(declare-fun a_950 () (Array Index Element))
(declare-fun a_952 () (Array Index Element))
(declare-fun a_954 () (Array Index Element))
(declare-fun a_955 () (Array Index Element))
(declare-fun a_957 () (Array Index Element))
(declare-fun a_959 () (Array Index Element))
(declare-fun a_961 () (Array Index Element))
(declare-fun a_963 () (Array Index Element))
(declare-fun a_965 () (Array Index Element))
(declare-fun a_967 () (Array Index Element))
(declare-fun a_969 () (Array Index Element))
(declare-fun a_971 () (Array Index Element))
(declare-fun a_972 () (Array Index Element))
(declare-fun a_973 () (Array Index Element))
(declare-fun a_975 () (Array Index Element))
(declare-fun a_977 () (Array Index Element))
(declare-fun a_979 () (Array Index Element))
(declare-fun a_980 () (Array Index Element))
(declare-fun a_982 () (Array Index Element))
(declare-fun a_984 () (Array Index Element))
(declare-fun a_986 () (Array Index Element))
(declare-fun a_988 () (Array Index Element))
(declare-fun a_990 () (Array Index Element))
(declare-fun a_992 () (Array Index Element))
(declare-fun a_994 () (Array Index Element))
(declare-fun a_996 () (Array Index Element))
(declare-fun e_938 () Element)
(declare-fun e_941 () Element)
(declare-fun e_943 () Element)
(declare-fun e_945 () Element)
(declare-fun e_947 () Element)
(declare-fun e_949 () Element)
(declare-fun e_951 () Element)
(declare-fun e_953 () Element)
(declare-fun e_956 () Element)
(declare-fun e_958 () Element)
(declare-fun e_960 () Element)
(declare-fun e_962 () Element)
(declare-fun e_964 () Element)
(declare-fun e_966 () Element)
(declare-fun e_968 () Element)
(declare-fun e_970 () Element)
(declare-fun e_974 () Element)
(declare-fun e_976 () Element)
(declare-fun e_978 () Element)
(declare-fun e_981 () Element)
(declare-fun e_983 () Element)
(declare-fun e_985 () Element)
(declare-fun e_987 () Element)
(declare-fun e_989 () Element)
(declare-fun e_991 () Element)
(declare-fun e_993 () Element)
(declare-fun e_995 () Element)
(declare-fun a1 () (Array Index Element))
(declare-fun i0 () Index)
(declare-fun i1 () Index)
(declare-fun i2 () Index)
(declare-fun i3 () Index)
(declare-fun i4 () Index)
(declare-fun i5 () Index)
(declare-fun i6 () Index)
(declare-fun i7 () Index)
(declare-fun i8 () Index)
(assert (= a_939 (store a1 i2 e_938)))
(assert (= a_940 (store a_939 i2 e_938)))
(assert (= a_942 (store a_940 i4 e_941)))
(assert (= a_944 (store a_942 i6 e_943)))
(assert (= a_946 (store a_944 i5 e_945)))
(assert (= a_948 (store a_946 i0 e_947)))
(assert (= a_950 (store a_948 i2 e_949)))
(assert (= a_952 (store a_950 i8 e_951)))
(assert (= a_954 (store a_952 i7 e_953)))
(assert (= a_955 (store a_954 i7 e_953)))
(assert (= a_957 (store a_955 i8 e_956)))
(assert (= a_959 (store a_957 i1 e_958)))
(assert (= a_961 (store a_959 i3 e_960)))
(assert (= a_963 (store a_961 i7 e_962)))
(assert (= a_965 (store a_963 i7 e_964)))
(assert (= a_967 (store a_965 i0 e_966)))
(assert (= a_969 (store a_967 i5 e_968)))
(assert (= a_971 (store a_969 i2 e_970)))
(assert (= a_972 (store a_944 i0 e_947)))
(assert (= a_973 (store a_972 i5 e_945)))
(assert (= a_975 (store a_973 i8 e_974)))
(assert (= a_977 (store a_975 i2 e_976)))
(assert (= a_979 (store a_977 i7 e_978)))
(assert (= a_980 (store a_979 i7 e_978)))
(assert (= a_982 (store a_980 i1 e_981)))
(assert (= a_984 (store a_982 i8 e_983)))
(assert (= a_986 (store a_984 i7 e_985)))
(assert (= a_988 (store a_986 i3 e_987)))
(assert (= a_990 (store a_988 i0 e_989)))
(assert (= a_992 (store a_990 i7 e_991)))
(assert (= a_994 (store a_992 i6 e_993)))
(assert (= a_996 (store a_994 i2 e_995)))
(assert (= e_938 (select a1 i2)))
(assert (= e_941 (select a_940 i6)))
(assert (= e_943 (select a_940 i4)))
(assert (= e_945 (select a_944 i0)))
(assert (= e_947 (select a_944 i5)))
(assert (= e_949 (select a_948 i8)))
(assert (= e_951 (select a_948 i2)))
(assert (= e_953 (select a_952 i7)))
(assert (= e_956 (select a_955 i1)))
(assert (= e_958 (select a_955 i8)))
(assert (= e_960 (select a_959 i7)))
(assert (= e_962 (select a_959 i3)))
(assert (= e_964 (select a_963 i0)))
(assert (= e_966 (select a_963 i7)))
(assert (= e_968 (select a_967 i2)))
(assert (= e_970 (select a_967 i5)))
(assert (= e_974 (select a_973 i2)))
(assert (= e_976 (select a_973 i8)))
(assert (= e_978 (select a_977 i7)))
(assert (= e_981 (select a_980 i8)))
(assert (= e_983 (select a_980 i1)))
(assert (= e_985 (select a_984 i3)))
(assert (= e_987 (select a_984 i7)))
(assert (= e_989 (select a_988 i7)))
(assert (= e_991 (select a_988 i0)))
(assert (= e_993 (select a_992 i2)))
(assert (= e_995 (select a_992 i6)))
(assert (not (= a_971 a_996)))
(check-sat)
(exit)
