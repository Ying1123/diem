(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)

(declare-sort Element 0)
(declare-fun a_436 () (Seq Element))
(declare-fun a_438 () (Seq Element))
(declare-fun a_440 () (Seq Element))
(declare-fun a_442 () (Seq Element))
(declare-fun a_444 () (Seq Element))
(declare-fun a_445 () (Seq Element))
(declare-fun a_447 () (Seq Element))
(declare-fun a_448 () (Seq Element))
(declare-fun a_450 () (Seq Element))
(declare-fun a_452 () (Seq Element))
(declare-fun a_454 () (Seq Element))
(declare-fun a_456 () (Seq Element))
(declare-fun a_458 () (Seq Element))
(declare-fun a_460 () (Seq Element))
(declare-fun a_462 () (Seq Element))
(declare-fun a_464 () (Seq Element))
(declare-fun a_466 () (Seq Element))
(declare-fun a_468 () (Seq Element))
(declare-fun a_470 () (Seq Element))
(declare-fun a_472 () (Seq Element))
(declare-fun a_473 () (Seq Element))
(declare-fun a_474 () (Seq Element))
(declare-fun a_476 () (Seq Element))
(declare-fun a_478 () (Seq Element))
(declare-fun a_480 () (Seq Element))
(declare-fun a_482 () (Seq Element))
(declare-fun a_484 () (Seq Element))
(declare-fun a_486 () (Seq Element))
(declare-fun a_488 () (Seq Element))
(declare-fun a_490 () (Seq Element))
(declare-fun e_435 () Element)
(declare-fun e_437 () Element)
(declare-fun e_439 () Element)
(declare-fun e_441 () Element)
(declare-fun e_443 () Element)
(declare-fun e_446 () Element)
(declare-fun e_449 () Element)
(declare-fun e_451 () Element)
(declare-fun e_453 () Element)
(declare-fun e_455 () Element)
(declare-fun e_457 () Element)
(declare-fun e_459 () Element)
(declare-fun e_461 () Element)
(declare-fun e_463 () Element)
(declare-fun e_465 () Element)
(declare-fun e_467 () Element)
(declare-fun e_469 () Element)
(declare-fun e_471 () Element)
(declare-fun e_475 () Element)
(declare-fun e_477 () Element)
(declare-fun e_479 () Element)
(declare-fun e_481 () Element)
(declare-fun e_483 () Element)
(declare-fun e_485 () Element)
(declare-fun e_487 () Element)
(declare-fun e_489 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(declare-fun i8 () Int)
(assert (= a_436 (seq.update a1 i4 (seq.unit e_435))))
(assert (= a_438 (seq.update a_436 i7 (seq.unit e_437))))
(assert (= a_440 (seq.update a_438 i0 (seq.unit e_439))))
(assert (= a_442 (seq.update a_440 i3 (seq.unit e_441))))
(assert (= a_444 (seq.update a_442 i8 (seq.unit e_443))))
(assert (= a_445 (seq.update a_444 i8 (seq.unit e_443))))
(assert (= a_447 (seq.update a_445 i7 (seq.unit e_446))))
(assert (= a_448 (seq.update a_447 i7 (seq.unit e_446))))
(assert (= a_450 (seq.update a_448 i8 (seq.unit e_449))))
(assert (= a_452 (seq.update a_450 i2 (seq.unit e_451))))
(assert (= a_454 (seq.update a_452 i7 (seq.unit e_453))))
(assert (= a_456 (seq.update a_454 i6 (seq.unit e_455))))
(assert (= a_458 (seq.update a_456 i7 (seq.unit e_457))))
(assert (= a_460 (seq.update a_458 i2 (seq.unit e_459))))
(assert (= a_462 (seq.update a_460 i4 (seq.unit e_461))))
(assert (= a_464 (seq.update a_462 i0 (seq.unit e_463))))
(assert (= a_466 (seq.update a_464 i6 (seq.unit e_465))))
(assert (= a_468 (seq.update a_466 i7 (seq.unit e_467))))
(assert (= a_470 (seq.update a_468 i2 (seq.unit e_469))))
(assert (= a_472 (seq.update a_470 i6 (seq.unit e_471))))
(assert (= a_473 (seq.update a_452 i6 (seq.unit e_455))))
(assert (= a_474 (seq.update a_473 i7 (seq.unit e_453))))
(assert (= a_476 (seq.update a_474 i2 (seq.unit e_475))))
(assert (= a_478 (seq.update a_476 i7 (seq.unit e_477))))
(assert (= a_480 (seq.update a_478 i0 (seq.unit e_479))))
(assert (= a_482 (seq.update a_480 i4 (seq.unit e_481))))
(assert (= a_484 (seq.update a_482 i7 (seq.unit e_483))))
(assert (= a_486 (seq.update a_484 i6 (seq.unit e_485))))
(assert (= a_488 (seq.update a_486 i6 (seq.unit e_487))))
(assert (= a_490 (seq.update a_488 i2 (seq.unit e_489))))
(assert (= e_435 (seq.nth a1 i7)))
(assert (= e_437 (seq.nth a1 i4)))
(assert (= e_439 (seq.nth a_438 i3)))
(assert (= e_441 (seq.nth a_438 i0)))
(assert (= e_443 (seq.nth a_442 i8)))
(assert (= e_446 (seq.nth a_445 i7)))
(assert (= e_449 (seq.nth a_448 i2)))
(assert (= e_451 (seq.nth a_448 i8)))
(assert (= e_453 (seq.nth a_452 i6)))
(assert (= e_455 (seq.nth a_452 i7)))
(assert (= e_457 (seq.nth a_456 i2)))
(assert (= e_459 (seq.nth a_456 i7)))
(assert (= e_461 (seq.nth a_460 i0)))
(assert (= e_463 (seq.nth a_460 i4)))
(assert (= e_465 (seq.nth a_464 i7)))
(assert (= e_467 (seq.nth a_464 i6)))
(assert (= e_469 (seq.nth a_468 i6)))
(assert (= e_471 (seq.nth a_468 i2)))
(assert (= e_475 (seq.nth a_474 i7)))
(assert (= e_477 (seq.nth a_474 i2)))
(assert (= e_479 (seq.nth a_478 i4)))
(assert (= e_481 (seq.nth a_478 i0)))
(assert (= e_483 (seq.nth a_482 i6)))
(assert (= e_485 (seq.nth a_482 i7)))
(assert (= e_487 (seq.nth a_486 i2)))
(assert (= e_489 (seq.nth a_486 i6)))
(assert (not (= a_472 a_490)))
(check-sat)
(exit)
