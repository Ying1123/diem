(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)

(declare-sort Element 0)
(declare-fun a_442 () (Seq Element))
(declare-fun a_444 () (Seq Element))
(declare-fun a_446 () (Seq Element))
(declare-fun a_448 () (Seq Element))
(declare-fun a_450 () (Seq Element))
(declare-fun a_452 () (Seq Element))
(declare-fun a_454 () (Seq Element))
(declare-fun a_456 () (Seq Element))
(declare-fun a_458 () (Seq Element))
(declare-fun a_460 () (Seq Element))
(declare-fun a_462 () (Seq Element))
(declare-fun a_464 () (Seq Element))
(declare-fun a_466 () (Seq Element))
(declare-fun a_468 () (Seq Element))
(declare-fun a_469 () (Seq Element))
(declare-fun a_470 () (Seq Element))
(declare-fun a_472 () (Seq Element))
(declare-fun a_474 () (Seq Element))
(declare-fun a_476 () (Seq Element))
(declare-fun a_478 () (Seq Element))
(declare-fun a_480 () (Seq Element))
(declare-fun a_482 () (Seq Element))
(declare-fun e_441 () Element)
(declare-fun e_443 () Element)
(declare-fun e_445 () Element)
(declare-fun e_447 () Element)
(declare-fun e_449 () Element)
(declare-fun e_451 () Element)
(declare-fun e_453 () Element)
(declare-fun e_455 () Element)
(declare-fun e_457 () Element)
(declare-fun e_459 () Element)
(declare-fun e_461 () Element)
(declare-fun e_463 () Element)
(declare-fun e_465 () Element)
(declare-fun e_467 () Element)
(declare-fun e_471 () Element)
(declare-fun e_473 () Element)
(declare-fun e_475 () Element)
(declare-fun e_477 () Element)
(declare-fun e_479 () Element)
(declare-fun e_481 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(assert (= a_442 (seq.update a1 i0 (seq.unit e_441))))
(assert (= a_444 (seq.update a_442 i6 (seq.unit e_443))))
(assert (= a_446 (seq.update a_444 i2 (seq.unit e_445))))
(assert (= a_448 (seq.update a_446 i3 (seq.unit e_447))))
(assert (= a_450 (seq.update a_448 i3 (seq.unit e_449))))
(assert (= a_452 (seq.update a_450 i2 (seq.unit e_451))))
(assert (= a_454 (seq.update a_452 i3 (seq.unit e_453))))
(assert (= a_456 (seq.update a_454 i5 (seq.unit e_455))))
(assert (= a_458 (seq.update a_456 i3 (seq.unit e_457))))
(assert (= a_460 (seq.update a_458 i1 (seq.unit e_459))))
(assert (= a_462 (seq.update a_460 i1 (seq.unit e_461))))
(assert (= a_464 (seq.update a_462 i2 (seq.unit e_463))))
(assert (= a_466 (seq.update a_464 i0 (seq.unit e_465))))
(assert (= a_468 (seq.update a_466 i5 (seq.unit e_467))))
(assert (= a_469 (seq.update a_452 i5 (seq.unit e_455))))
(assert (= a_470 (seq.update a_469 i3 (seq.unit e_453))))
(assert (= a_472 (seq.update a_470 i1 (seq.unit e_471))))
(assert (= a_474 (seq.update a_472 i3 (seq.unit e_473))))
(assert (= a_476 (seq.update a_474 i2 (seq.unit e_475))))
(assert (= a_478 (seq.update a_476 i1 (seq.unit e_477))))
(assert (= a_480 (seq.update a_478 i0 (seq.unit e_479))))
(assert (= a_482 (seq.update a_480 i5 (seq.unit e_481))))
(assert (= e_441 (seq.nth a1 i6)))
(assert (= e_443 (seq.nth a1 i0)))
(assert (= e_445 (seq.nth a_444 i3)))
(assert (= e_447 (seq.nth a_444 i2)))
(assert (= e_449 (seq.nth a_448 i2)))
(assert (= e_451 (seq.nth a_448 i3)))
(assert (= e_453 (seq.nth a_452 i5)))
(assert (= e_455 (seq.nth a_452 i3)))
(assert (= e_457 (seq.nth a_456 i1)))
(assert (= e_459 (seq.nth a_456 i3)))
(assert (= e_461 (seq.nth a_460 i2)))
(assert (= e_463 (seq.nth a_460 i1)))
(assert (= e_465 (seq.nth a_464 i5)))
(assert (= e_467 (seq.nth a_464 i0)))
(assert (= e_471 (seq.nth a_470 i3)))
(assert (= e_473 (seq.nth a_470 i1)))
(assert (= e_475 (seq.nth a_474 i1)))
(assert (= e_477 (seq.nth a_474 i2)))
(assert (= e_479 (seq.nth a_478 i5)))
(assert (= e_481 (seq.nth a_478 i0)))
(assert (not (= a_468 a_482)))
(check-sat)
(exit)
