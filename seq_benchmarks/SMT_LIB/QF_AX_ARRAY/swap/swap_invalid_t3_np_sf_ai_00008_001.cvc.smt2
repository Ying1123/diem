(set-info :smt-lib-version 2.6)
(set-logic QF_AX)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-sort Index 0)
(declare-sort Element 0)
(declare-fun a_878 () (Array Index Element))
(declare-fun a_880 () (Array Index Element))
(declare-fun a_882 () (Array Index Element))
(declare-fun a_884 () (Array Index Element))
(declare-fun a_886 () (Array Index Element))
(declare-fun a_888 () (Array Index Element))
(declare-fun a_890 () (Array Index Element))
(declare-fun a_892 () (Array Index Element))
(declare-fun a_894 () (Array Index Element))
(declare-fun a_896 () (Array Index Element))
(declare-fun a_898 () (Array Index Element))
(declare-fun a_900 () (Array Index Element))
(declare-fun a_902 () (Array Index Element))
(declare-fun a_904 () (Array Index Element))
(declare-fun a_906 () (Array Index Element))
(declare-fun a_908 () (Array Index Element))
(declare-fun a_909 () (Array Index Element))
(declare-fun a_910 () (Array Index Element))
(declare-fun a_912 () (Array Index Element))
(declare-fun a_914 () (Array Index Element))
(declare-fun a_916 () (Array Index Element))
(declare-fun a_918 () (Array Index Element))
(declare-fun a_920 () (Array Index Element))
(declare-fun a_922 () (Array Index Element))
(declare-fun a_924 () (Array Index Element))
(declare-fun a_926 () (Array Index Element))
(declare-fun a_928 () (Array Index Element))
(declare-fun a_930 () (Array Index Element))
(declare-fun a_932 () (Array Index Element))
(declare-fun a_934 () (Array Index Element))
(declare-fun e_877 () Element)
(declare-fun e_879 () Element)
(declare-fun e_881 () Element)
(declare-fun e_883 () Element)
(declare-fun e_885 () Element)
(declare-fun e_887 () Element)
(declare-fun e_889 () Element)
(declare-fun e_891 () Element)
(declare-fun e_893 () Element)
(declare-fun e_895 () Element)
(declare-fun e_897 () Element)
(declare-fun e_899 () Element)
(declare-fun e_901 () Element)
(declare-fun e_903 () Element)
(declare-fun e_905 () Element)
(declare-fun e_907 () Element)
(declare-fun e_911 () Element)
(declare-fun e_913 () Element)
(declare-fun e_915 () Element)
(declare-fun e_917 () Element)
(declare-fun e_919 () Element)
(declare-fun e_921 () Element)
(declare-fun e_923 () Element)
(declare-fun e_925 () Element)
(declare-fun e_927 () Element)
(declare-fun e_929 () Element)
(declare-fun e_931 () Element)
(declare-fun e_933 () Element)
(declare-fun a1 () (Array Index Element))
(declare-fun i0 () Index)
(declare-fun i1 () Index)
(declare-fun i2 () Index)
(declare-fun i3 () Index)
(declare-fun i4 () Index)
(declare-fun i5 () Index)
(declare-fun i6 () Index)
(declare-fun i7 () Index)
(assert (= a_878 (store a1 i0 e_877)))
(assert (= a_880 (store a_878 i4 e_879)))
(assert (= a_882 (store a_880 i7 e_881)))
(assert (= a_884 (store a_882 i1 e_883)))
(assert (= a_886 (store a_884 i6 e_885)))
(assert (= a_888 (store a_886 i1 e_887)))
(assert (= a_890 (store a_888 i2 e_889)))
(assert (= a_892 (store a_890 i7 e_891)))
(assert (= a_894 (store a_892 i7 e_893)))
(assert (= a_896 (store a_894 i3 e_895)))
(assert (= a_898 (store a_896 i3 e_897)))
(assert (= a_900 (store a_898 i0 e_899)))
(assert (= a_902 (store a_900 i2 e_901)))
(assert (= a_904 (store a_902 i4 e_903)))
(assert (= a_906 (store a_904 i1 e_905)))
(assert (= a_908 (store a_906 i4 e_907)))
(assert (= a_909 (store a_880 i1 e_883)))
(assert (= a_910 (store a_909 i7 e_881)))
(assert (= a_912 (store a_910 i6 e_911)))
(assert (= a_914 (store a_912 i1 e_913)))
(assert (= a_916 (store a_914 i2 e_915)))
(assert (= a_918 (store a_916 i7 e_917)))
(assert (= a_920 (store a_918 i3 e_919)))
(assert (= a_922 (store a_920 i7 e_921)))
(assert (= a_924 (store a_922 i3 e_923)))
(assert (= a_926 (store a_924 i0 e_925)))
(assert (= a_928 (store a_926 i2 e_927)))
(assert (= a_930 (store a_928 i4 e_929)))
(assert (= a_932 (store a_930 i5 e_931)))
(assert (= a_934 (store a_932 i1 e_933)))
(assert (= e_877 (select a1 i4)))
(assert (= e_879 (select a1 i0)))
(assert (= e_881 (select a_880 i1)))
(assert (= e_883 (select a_880 i7)))
(assert (= e_885 (select a_884 i1)))
(assert (= e_887 (select a_884 i6)))
(assert (= e_889 (select a_888 i7)))
(assert (= e_891 (select a_888 i2)))
(assert (= e_893 (select a_892 i3)))
(assert (= e_895 (select a_892 i7)))
(assert (= e_897 (select a_896 i0)))
(assert (= e_899 (select a_896 i3)))
(assert (= e_901 (select a_900 i4)))
(assert (= e_903 (select a_900 i2)))
(assert (= e_905 (select a_904 i4)))
(assert (= e_907 (select a_904 i1)))
(assert (= e_911 (select a_910 i1)))
(assert (= e_913 (select a_910 i6)))
(assert (= e_915 (select a_914 i7)))
(assert (= e_917 (select a_914 i2)))
(assert (= e_919 (select a_918 i7)))
(assert (= e_921 (select a_918 i3)))
(assert (= e_923 (select a_922 i0)))
(assert (= e_925 (select a_922 i3)))
(assert (= e_927 (select a_926 i4)))
(assert (= e_929 (select a_926 i2)))
(assert (= e_931 (select a_930 i1)))
(assert (= e_933 (select a_930 i5)))
(assert (not (= a_908 a_934)))
(check-sat)
(exit)
