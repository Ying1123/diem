(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)

(declare-sort Element 0)
(declare-fun a_154 () (Seq Element))
(declare-fun a_156 () (Seq Element))
(declare-fun a_158 () (Seq Element))
(declare-fun a_160 () (Seq Element))
(declare-fun a_162 () (Seq Element))
(declare-fun a_163 () (Seq Element))
(declare-fun a_165 () (Seq Element))
(declare-fun a_167 () (Seq Element))
(declare-fun a_168 () (Seq Element))
(declare-fun a_169 () (Seq Element))
(declare-fun a_171 () (Seq Element))
(declare-fun a_172 () (Seq Element))
(declare-fun a_174 () (Seq Element))
(declare-fun a_176 () (Seq Element))
(declare-fun e_153 () Element)
(declare-fun e_155 () Element)
(declare-fun e_157 () Element)
(declare-fun e_159 () Element)
(declare-fun e_161 () Element)
(declare-fun e_164 () Element)
(declare-fun e_166 () Element)
(declare-fun e_170 () Element)
(declare-fun e_173 () Element)
(declare-fun e_175 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(assert (= a_154 (seq.update a1 i3 (seq.unit e_153))))
(assert (= a_156 (seq.update a_154 i2 (seq.unit e_155))))
(assert (= a_158 (seq.update a_156 i0 (seq.unit e_157))))
(assert (= a_160 (seq.update a_158 i2 (seq.unit e_159))))
(assert (= a_162 (seq.update a_160 i3 (seq.unit e_161))))
(assert (= a_163 (seq.update a_162 i3 (seq.unit e_161))))
(assert (= a_165 (seq.update a_163 i1 (seq.unit e_164))))
(assert (= a_167 (seq.update a_165 i3 (seq.unit e_166))))
(assert (= a_168 (seq.update a_156 i2 (seq.unit e_159))))
(assert (= a_169 (seq.update a_168 i0 (seq.unit e_157))))
(assert (= a_171 (seq.update a_169 i3 (seq.unit e_170))))
(assert (= a_172 (seq.update a_171 i3 (seq.unit e_170))))
(assert (= a_174 (seq.update a_172 i3 (seq.unit e_173))))
(assert (= a_176 (seq.update a_174 i1 (seq.unit e_175))))
(assert (= e_153 (seq.nth a1 i2)))
(assert (= e_155 (seq.nth a1 i3)))
(assert (= e_157 (seq.nth a_156 i2)))
(assert (= e_159 (seq.nth a_156 i0)))
(assert (= e_161 (seq.nth a_160 i3)))
(assert (= e_164 (seq.nth a_163 i3)))
(assert (= e_166 (seq.nth a_163 i1)))
(assert (= e_170 (seq.nth a_169 i3)))
(assert (= e_173 (seq.nth a_172 i1)))
(assert (= e_175 (seq.nth a_172 i3)))
(assert (not (= a_167 a_176)))
(check-sat)
(exit)
