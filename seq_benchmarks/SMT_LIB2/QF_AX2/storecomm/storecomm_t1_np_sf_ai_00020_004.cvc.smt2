(set-info :smt-lib-version 2.6)
(set-logic QF_AX)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-sort Index 0)
(declare-sort Element 0)
(declare-fun a_399 () (Array Index Element))
(declare-fun a_400 () (Array Index Element))
(declare-fun a_401 () (Array Index Element))
(declare-fun a_402 () (Array Index Element))
(declare-fun a_403 () (Array Index Element))
(declare-fun a_404 () (Array Index Element))
(declare-fun a_405 () (Array Index Element))
(declare-fun a_406 () (Array Index Element))
(declare-fun a_407 () (Array Index Element))
(declare-fun a_408 () (Array Index Element))
(declare-fun a_409 () (Array Index Element))
(declare-fun a_410 () (Array Index Element))
(declare-fun a_411 () (Array Index Element))
(declare-fun a_412 () (Array Index Element))
(declare-fun a_413 () (Array Index Element))
(declare-fun a_414 () (Array Index Element))
(declare-fun a_415 () (Array Index Element))
(declare-fun a_416 () (Array Index Element))
(declare-fun a_417 () (Array Index Element))
(declare-fun a_418 () (Array Index Element))
(declare-fun a_419 () (Array Index Element))
(declare-fun a_420 () (Array Index Element))
(declare-fun a_421 () (Array Index Element))
(declare-fun a_422 () (Array Index Element))
(declare-fun a_423 () (Array Index Element))
(declare-fun a_424 () (Array Index Element))
(declare-fun a_425 () (Array Index Element))
(declare-fun a_426 () (Array Index Element))
(declare-fun a_427 () (Array Index Element))
(declare-fun a_428 () (Array Index Element))
(declare-fun a_429 () (Array Index Element))
(declare-fun a_430 () (Array Index Element))
(declare-fun a_431 () (Array Index Element))
(declare-fun a_432 () (Array Index Element))
(declare-fun a_433 () (Array Index Element))
(declare-fun a_434 () (Array Index Element))
(declare-fun a_435 () (Array Index Element))
(declare-fun a_436 () (Array Index Element))
(declare-fun a_437 () (Array Index Element))
(declare-fun a_438 () (Array Index Element))
(declare-fun a1 () (Array Index Element))
(declare-fun e1 () Element)
(declare-fun e10 () Element)
(declare-fun e11 () Element)
(declare-fun e12 () Element)
(declare-fun e13 () Element)
(declare-fun e14 () Element)
(declare-fun e15 () Element)
(declare-fun e16 () Element)
(declare-fun e17 () Element)
(declare-fun e18 () Element)
(declare-fun e19 () Element)
(declare-fun e2 () Element)
(declare-fun e20 () Element)
(declare-fun e3 () Element)
(declare-fun e4 () Element)
(declare-fun e5 () Element)
(declare-fun e6 () Element)
(declare-fun e7 () Element)
(declare-fun e8 () Element)
(declare-fun e9 () Element)
(declare-fun i1 () Index)
(declare-fun i10 () Index)
(declare-fun i11 () Index)
(declare-fun i12 () Index)
(declare-fun i13 () Index)
(declare-fun i14 () Index)
(declare-fun i15 () Index)
(declare-fun i16 () Index)
(declare-fun i17 () Index)
(declare-fun i18 () Index)
(declare-fun i19 () Index)
(declare-fun i2 () Index)
(declare-fun i20 () Index)
(declare-fun i3 () Index)
(declare-fun i4 () Index)
(declare-fun i5 () Index)
(declare-fun i6 () Index)
(declare-fun i7 () Index)
(declare-fun i8 () Index)
(declare-fun i9 () Index)
(assert (= a_399 (store a1 i1 e1)))
(assert (= a_400 (store a_399 i2 e2)))
(assert (= a_401 (store a_400 i3 e3)))
(assert (= a_402 (store a_401 i4 e4)))
(assert (= a_403 (store a_402 i5 e5)))
(assert (= a_404 (store a_403 i6 e6)))
(assert (= a_405 (store a_404 i7 e7)))
(assert (= a_406 (store a_405 i8 e8)))
(assert (= a_407 (store a_406 i9 e9)))
(assert (= a_408 (store a_407 i10 e10)))
(assert (= a_409 (store a_408 i11 e11)))
(assert (= a_410 (store a_409 i12 e12)))
(assert (= a_411 (store a_410 i13 e13)))
(assert (= a_412 (store a_411 i14 e14)))
(assert (= a_413 (store a_412 i15 e15)))
(assert (= a_414 (store a_413 i16 e16)))
(assert (= a_415 (store a_414 i17 e17)))
(assert (= a_416 (store a_415 i18 e18)))
(assert (= a_417 (store a_416 i19 e19)))
(assert (= a_418 (store a_417 i20 e20)))
(assert (= a_419 (store a1 i4 e4)))
(assert (= a_420 (store a_419 i19 e19)))
(assert (= a_421 (store a_420 i16 e16)))
(assert (= a_422 (store a_421 i8 e8)))
(assert (= a_423 (store a_422 i7 e7)))
(assert (= a_424 (store a_423 i5 e5)))
(assert (= a_425 (store a_424 i9 e9)))
(assert (= a_426 (store a_425 i1 e1)))
(assert (= a_427 (store a_426 i14 e14)))
(assert (= a_428 (store a_427 i10 e10)))
(assert (= a_429 (store a_428 i3 e3)))
(assert (= a_430 (store a_429 i17 e17)))
(assert (= a_431 (store a_430 i2 e2)))
(assert (= a_432 (store a_431 i13 e13)))
(assert (= a_433 (store a_432 i11 e11)))
(assert (= a_434 (store a_433 i15 e15)))
(assert (= a_435 (store a_434 i18 e18)))
(assert (= a_436 (store a_435 i20 e20)))
(assert (= a_437 (store a_436 i6 e6)))
(assert (= a_438 (store a_437 i12 e12)))
(assert (not (= i19 i20)))
(assert (not (= i18 i20)))
(assert (not (= i18 i19)))
(assert (not (= i17 i20)))
(assert (not (= i17 i19)))
(assert (not (= i17 i18)))
(assert (not (= i16 i20)))
(assert (not (= i16 i19)))
(assert (not (= i16 i18)))
(assert (not (= i16 i17)))
(assert (not (= i15 i20)))
(assert (not (= i15 i19)))
(assert (not (= i15 i18)))
(assert (not (= i15 i17)))
(assert (not (= i15 i16)))
(assert (not (= i14 i20)))
(assert (not (= i14 i19)))
(assert (not (= i14 i18)))
(assert (not (= i14 i17)))
(assert (not (= i14 i16)))
(assert (not (= i14 i15)))
(assert (not (= i13 i20)))
(assert (not (= i13 i19)))
(assert (not (= i13 i18)))
(assert (not (= i13 i17)))
(assert (not (= i13 i16)))
(assert (not (= i13 i15)))
(assert (not (= i13 i14)))
(assert (not (= i12 i20)))
(assert (not (= i12 i19)))
(assert (not (= i12 i18)))
(assert (not (= i12 i17)))
(assert (not (= i12 i16)))
(assert (not (= i12 i15)))
(assert (not (= i12 i14)))
(assert (not (= i12 i13)))
(assert (not (= i11 i20)))
(assert (not (= i11 i19)))
(assert (not (= i11 i18)))
(assert (not (= i11 i17)))
(assert (not (= i11 i16)))
(assert (not (= i11 i15)))
(assert (not (= i11 i14)))
(assert (not (= i11 i13)))
(assert (not (= i11 i12)))
(assert (not (= i10 i20)))
(assert (not (= i10 i19)))
(assert (not (= i10 i18)))
(assert (not (= i10 i17)))
(assert (not (= i10 i16)))
(assert (not (= i10 i15)))
(assert (not (= i10 i14)))
(assert (not (= i10 i13)))
(assert (not (= i10 i12)))
(assert (not (= i10 i11)))
(assert (not (= i9 i20)))
(assert (not (= i9 i19)))
(assert (not (= i9 i18)))
(assert (not (= i9 i17)))
(assert (not (= i9 i16)))
(assert (not (= i9 i15)))
(assert (not (= i9 i14)))
(assert (not (= i9 i13)))
(assert (not (= i9 i12)))
(assert (not (= i9 i11)))
(assert (not (= i9 i10)))
(assert (not (= i8 i20)))
(assert (not (= i8 i19)))
(assert (not (= i8 i18)))
(assert (not (= i8 i17)))
(assert (not (= i8 i16)))
(assert (not (= i8 i15)))
(assert (not (= i8 i14)))
(assert (not (= i8 i13)))
(assert (not (= i8 i12)))
(assert (not (= i8 i11)))
(assert (not (= i8 i10)))
(assert (not (= i8 i9)))
(assert (not (= i7 i20)))
(assert (not (= i7 i19)))
(assert (not (= i7 i18)))
(assert (not (= i7 i17)))
(assert (not (= i7 i16)))
(assert (not (= i7 i15)))
(assert (not (= i7 i14)))
(assert (not (= i7 i13)))
(assert (not (= i7 i12)))
(assert (not (= i7 i11)))
(assert (not (= i7 i10)))
(assert (not (= i7 i9)))
(assert (not (= i7 i8)))
(assert (not (= i6 i20)))
(assert (not (= i6 i19)))
(assert (not (= i6 i18)))
(assert (not (= i6 i17)))
(assert (not (= i6 i16)))
(assert (not (= i6 i15)))
(assert (not (= i6 i14)))
(assert (not (= i6 i13)))
(assert (not (= i6 i12)))
(assert (not (= i6 i11)))
(assert (not (= i6 i10)))
(assert (not (= i6 i9)))
(assert (not (= i6 i8)))
(assert (not (= i6 i7)))
(assert (not (= i5 i20)))
(assert (not (= i5 i19)))
(assert (not (= i5 i18)))
(assert (not (= i5 i17)))
(assert (not (= i5 i16)))
(assert (not (= i5 i15)))
(assert (not (= i5 i14)))
(assert (not (= i5 i13)))
(assert (not (= i5 i12)))
(assert (not (= i5 i11)))
(assert (not (= i5 i10)))
(assert (not (= i5 i9)))
(assert (not (= i5 i8)))
(assert (not (= i5 i7)))
(assert (not (= i5 i6)))
(assert (not (= i4 i20)))
(assert (not (= i4 i19)))
(assert (not (= i4 i18)))
(assert (not (= i4 i17)))
(assert (not (= i4 i16)))
(assert (not (= i4 i15)))
(assert (not (= i4 i14)))
(assert (not (= i4 i13)))
(assert (not (= i4 i12)))
(assert (not (= i4 i11)))
(assert (not (= i4 i10)))
(assert (not (= i4 i9)))
(assert (not (= i4 i8)))
(assert (not (= i4 i7)))
(assert (not (= i4 i6)))
(assert (not (= i4 i5)))
(assert (not (= i3 i20)))
(assert (not (= i3 i19)))
(assert (not (= i3 i18)))
(assert (not (= i3 i17)))
(assert (not (= i3 i16)))
(assert (not (= i3 i15)))
(assert (not (= i3 i14)))
(assert (not (= i3 i13)))
(assert (not (= i3 i12)))
(assert (not (= i3 i11)))
(assert (not (= i3 i10)))
(assert (not (= i3 i9)))
(assert (not (= i3 i8)))
(assert (not (= i3 i7)))
(assert (not (= i3 i6)))
(assert (not (= i3 i5)))
(assert (not (= i3 i4)))
(assert (not (= i2 i20)))
(assert (not (= i2 i19)))
(assert (not (= i2 i18)))
(assert (not (= i2 i17)))
(assert (not (= i2 i16)))
(assert (not (= i2 i15)))
(assert (not (= i2 i14)))
(assert (not (= i2 i13)))
(assert (not (= i2 i12)))
(assert (not (= i2 i11)))
(assert (not (= i2 i10)))
(assert (not (= i2 i9)))
(assert (not (= i2 i8)))
(assert (not (= i2 i7)))
(assert (not (= i2 i6)))
(assert (not (= i2 i5)))
(assert (not (= i2 i4)))
(assert (not (= i2 i3)))
(assert (not (= i1 i20)))
(assert (not (= i1 i19)))
(assert (not (= i1 i18)))
(assert (not (= i1 i17)))
(assert (not (= i1 i16)))
(assert (not (= i1 i15)))
(assert (not (= i1 i14)))
(assert (not (= i1 i13)))
(assert (not (= i1 i12)))
(assert (not (= i1 i11)))
(assert (not (= i1 i10)))
(assert (not (= i1 i9)))
(assert (not (= i1 i8)))
(assert (not (= i1 i7)))
(assert (not (= i1 i6)))
(assert (not (= i1 i5)))
(assert (not (= i1 i4)))
(assert (not (= i1 i3)))
(assert (not (= i1 i2)))
(assert (not (= a_418 a_438)))
(check-sat)
(exit)
