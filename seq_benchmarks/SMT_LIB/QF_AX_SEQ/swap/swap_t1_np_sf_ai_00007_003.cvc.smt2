(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)

(declare-sort Element 0)
(declare-fun a_525 () (Seq Element))
(declare-fun a_527 () (Seq Element))
(declare-fun a_529 () (Seq Element))
(declare-fun a_531 () (Seq Element))
(declare-fun a_533 () (Seq Element))
(declare-fun a_535 () (Seq Element))
(declare-fun a_537 () (Seq Element))
(declare-fun a_538 () (Seq Element))
(declare-fun a_540 () (Seq Element))
(declare-fun a_542 () (Seq Element))
(declare-fun a_544 () (Seq Element))
(declare-fun a_546 () (Seq Element))
(declare-fun a_548 () (Seq Element))
(declare-fun a_550 () (Seq Element))
(declare-fun a_551 () (Seq Element))
(declare-fun a_552 () (Seq Element))
(declare-fun a_554 () (Seq Element))
(declare-fun a_556 () (Seq Element))
(declare-fun a_558 () (Seq Element))
(declare-fun a_559 () (Seq Element))
(declare-fun a_561 () (Seq Element))
(declare-fun a_563 () (Seq Element))
(declare-fun a_565 () (Seq Element))
(declare-fun a_567 () (Seq Element))
(declare-fun a_569 () (Seq Element))
(declare-fun a_571 () (Seq Element))
(declare-fun e_524 () Element)
(declare-fun e_526 () Element)
(declare-fun e_528 () Element)
(declare-fun e_530 () Element)
(declare-fun e_532 () Element)
(declare-fun e_534 () Element)
(declare-fun e_536 () Element)
(declare-fun e_539 () Element)
(declare-fun e_541 () Element)
(declare-fun e_543 () Element)
(declare-fun e_545 () Element)
(declare-fun e_547 () Element)
(declare-fun e_549 () Element)
(declare-fun e_553 () Element)
(declare-fun e_555 () Element)
(declare-fun e_557 () Element)
(declare-fun e_560 () Element)
(declare-fun e_562 () Element)
(declare-fun e_564 () Element)
(declare-fun e_566 () Element)
(declare-fun e_568 () Element)
(declare-fun e_570 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(assert (= a_525 (seq.update a1 i6 (seq.unit e_524))))
(assert (= a_527 (seq.update a_525 i0 (seq.unit e_526))))
(assert (= a_529 (seq.update a_527 i5 (seq.unit e_528))))
(assert (= a_531 (seq.update a_529 i0 (seq.unit e_530))))
(assert (= a_533 (seq.update a_531 i6 (seq.unit e_532))))
(assert (= a_535 (seq.update a_533 i3 (seq.unit e_534))))
(assert (= a_537 (seq.update a_535 i2 (seq.unit e_536))))
(assert (= a_538 (seq.update a_537 i2 (seq.unit e_536))))
(assert (= a_540 (seq.update a_538 i5 (seq.unit e_539))))
(assert (= a_542 (seq.update a_540 i0 (seq.unit e_541))))
(assert (= a_544 (seq.update a_542 i0 (seq.unit e_543))))
(assert (= a_546 (seq.update a_544 i2 (seq.unit e_545))))
(assert (= a_548 (seq.update a_546 i3 (seq.unit e_547))))
(assert (= a_550 (seq.update a_548 i4 (seq.unit e_549))))
(assert (= a_551 (seq.update a_527 i0 (seq.unit e_530))))
(assert (= a_552 (seq.update a_551 i5 (seq.unit e_528))))
(assert (= a_554 (seq.update a_552 i6 (seq.unit e_553))))
(assert (= a_556 (seq.update a_554 i3 (seq.unit e_555))))
(assert (= a_558 (seq.update a_556 i2 (seq.unit e_557))))
(assert (= a_559 (seq.update a_558 i2 (seq.unit e_557))))
(assert (= a_561 (seq.update a_559 i0 (seq.unit e_560))))
(assert (= a_563 (seq.update a_561 i5 (seq.unit e_562))))
(assert (= a_565 (seq.update a_563 i0 (seq.unit e_564))))
(assert (= a_567 (seq.update a_565 i2 (seq.unit e_566))))
(assert (= a_569 (seq.update a_567 i3 (seq.unit e_568))))
(assert (= a_571 (seq.update a_569 i4 (seq.unit e_570))))
(assert (= e_524 (seq.nth a1 i0)))
(assert (= e_526 (seq.nth a1 i6)))
(assert (= e_528 (seq.nth a_527 i0)))
(assert (= e_530 (seq.nth a_527 i5)))
(assert (= e_532 (seq.nth a_531 i3)))
(assert (= e_534 (seq.nth a_531 i6)))
(assert (= e_536 (seq.nth a_535 i2)))
(assert (= e_539 (seq.nth a_538 i0)))
(assert (= e_541 (seq.nth a_538 i5)))
(assert (= e_543 (seq.nth a_542 i2)))
(assert (= e_545 (seq.nth a_542 i0)))
(assert (= e_547 (seq.nth a_546 i4)))
(assert (= e_549 (seq.nth a_546 i3)))
(assert (= e_553 (seq.nth a_552 i3)))
(assert (= e_555 (seq.nth a_552 i6)))
(assert (= e_557 (seq.nth a_556 i2)))
(assert (= e_560 (seq.nth a_559 i5)))
(assert (= e_562 (seq.nth a_559 i0)))
(assert (= e_564 (seq.nth a_563 i2)))
(assert (= e_566 (seq.nth a_563 i0)))
(assert (= e_568 (seq.nth a_567 i4)))
(assert (= e_570 (seq.nth a_567 i3)))
(assert (not (= a_550 a_571)))
(check-sat)
(exit)
