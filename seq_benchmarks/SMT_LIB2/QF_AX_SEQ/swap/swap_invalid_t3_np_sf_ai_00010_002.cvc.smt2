(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)

(declare-sort Element 0)
(declare-fun a_1012 () (Seq Element))
(declare-fun a_1014 () (Seq Element))
(declare-fun a_1016 () (Seq Element))
(declare-fun a_1018 () (Seq Element))
(declare-fun a_1020 () (Seq Element))
(declare-fun a_1022 () (Seq Element))
(declare-fun a_1024 () (Seq Element))
(declare-fun a_1026 () (Seq Element))
(declare-fun a_1028 () (Seq Element))
(declare-fun a_1030 () (Seq Element))
(declare-fun a_1032 () (Seq Element))
(declare-fun a_1034 () (Seq Element))
(declare-fun a_1036 () (Seq Element))
(declare-fun a_1038 () (Seq Element))
(declare-fun a_1040 () (Seq Element))
(declare-fun a_1042 () (Seq Element))
(declare-fun a_1044 () (Seq Element))
(declare-fun a_1046 () (Seq Element))
(declare-fun a_1048 () (Seq Element))
(declare-fun a_1050 () (Seq Element))
(declare-fun a_1051 () (Seq Element))
(declare-fun a_1052 () (Seq Element))
(declare-fun a_1054 () (Seq Element))
(declare-fun a_1056 () (Seq Element))
(declare-fun a_1058 () (Seq Element))
(declare-fun a_1060 () (Seq Element))
(declare-fun a_1062 () (Seq Element))
(declare-fun a_1064 () (Seq Element))
(declare-fun a_1066 () (Seq Element))
(declare-fun a_1068 () (Seq Element))
(declare-fun a_1070 () (Seq Element))
(declare-fun a_1072 () (Seq Element))
(declare-fun a_1074 () (Seq Element))
(declare-fun a_1076 () (Seq Element))
(declare-fun a_1078 () (Seq Element))
(declare-fun a_1080 () (Seq Element))
(declare-fun a_1082 () (Seq Element))
(declare-fun a_1084 () (Seq Element))
(declare-fun a_1086 () (Seq Element))
(declare-fun a_1088 () (Seq Element))
(declare-fun e_1011 () Element)
(declare-fun e_1013 () Element)
(declare-fun e_1015 () Element)
(declare-fun e_1017 () Element)
(declare-fun e_1019 () Element)
(declare-fun e_1021 () Element)
(declare-fun e_1023 () Element)
(declare-fun e_1025 () Element)
(declare-fun e_1027 () Element)
(declare-fun e_1029 () Element)
(declare-fun e_1031 () Element)
(declare-fun e_1033 () Element)
(declare-fun e_1035 () Element)
(declare-fun e_1037 () Element)
(declare-fun e_1039 () Element)
(declare-fun e_1041 () Element)
(declare-fun e_1043 () Element)
(declare-fun e_1045 () Element)
(declare-fun e_1047 () Element)
(declare-fun e_1049 () Element)
(declare-fun e_1053 () Element)
(declare-fun e_1055 () Element)
(declare-fun e_1057 () Element)
(declare-fun e_1059 () Element)
(declare-fun e_1061 () Element)
(declare-fun e_1063 () Element)
(declare-fun e_1065 () Element)
(declare-fun e_1067 () Element)
(declare-fun e_1069 () Element)
(declare-fun e_1071 () Element)
(declare-fun e_1073 () Element)
(declare-fun e_1075 () Element)
(declare-fun e_1077 () Element)
(declare-fun e_1079 () Element)
(declare-fun e_1081 () Element)
(declare-fun e_1083 () Element)
(declare-fun e_1085 () Element)
(declare-fun e_1087 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(declare-fun i8 () Int)
(declare-fun i9 () Int)
(assert (= a_1012 (seq.update a1 i3 (seq.unit e_1011))))
(assert (= a_1014 (seq.update a_1012 i9 (seq.unit e_1013))))
(assert (= a_1016 (seq.update a_1014 i2 (seq.unit e_1015))))
(assert (= a_1018 (seq.update a_1016 i7 (seq.unit e_1017))))
(assert (= a_1020 (seq.update a_1018 i0 (seq.unit e_1019))))
(assert (= a_1022 (seq.update a_1020 i2 (seq.unit e_1021))))
(assert (= a_1024 (seq.update a_1022 i8 (seq.unit e_1023))))
(assert (= a_1026 (seq.update a_1024 i9 (seq.unit e_1025))))
(assert (= a_1028 (seq.update a_1026 i6 (seq.unit e_1027))))
(assert (= a_1030 (seq.update a_1028 i3 (seq.unit e_1029))))
(assert (= a_1032 (seq.update a_1030 i7 (seq.unit e_1031))))
(assert (= a_1034 (seq.update a_1032 i9 (seq.unit e_1033))))
(assert (= a_1036 (seq.update a_1034 i5 (seq.unit e_1035))))
(assert (= a_1038 (seq.update a_1036 i1 (seq.unit e_1037))))
(assert (= a_1040 (seq.update a_1038 i6 (seq.unit e_1039))))
(assert (= a_1042 (seq.update a_1040 i4 (seq.unit e_1041))))
(assert (= a_1044 (seq.update a_1042 i0 (seq.unit e_1043))))
(assert (= a_1046 (seq.update a_1044 i3 (seq.unit e_1045))))
(assert (= a_1048 (seq.update a_1046 i8 (seq.unit e_1047))))
(assert (= a_1050 (seq.update a_1048 i3 (seq.unit e_1049))))
(assert (= a_1051 (seq.update a1 i9 (seq.unit e_1013))))
(assert (= a_1052 (seq.update a_1051 i3 (seq.unit e_1011))))
(assert (= a_1054 (seq.update a_1052 i2 (seq.unit e_1053))))
(assert (= a_1056 (seq.update a_1054 i7 (seq.unit e_1055))))
(assert (= a_1058 (seq.update a_1056 i2 (seq.unit e_1057))))
(assert (= a_1060 (seq.update a_1058 i0 (seq.unit e_1059))))
(assert (= a_1062 (seq.update a_1060 i9 (seq.unit e_1061))))
(assert (= a_1064 (seq.update a_1062 i8 (seq.unit e_1063))))
(assert (= a_1066 (seq.update a_1064 i6 (seq.unit e_1065))))
(assert (= a_1068 (seq.update a_1066 i3 (seq.unit e_1067))))
(assert (= a_1070 (seq.update a_1068 i9 (seq.unit e_1069))))
(assert (= a_1072 (seq.update a_1070 i7 (seq.unit e_1071))))
(assert (= a_1074 (seq.update a_1072 i1 (seq.unit e_1073))))
(assert (= a_1076 (seq.update a_1074 i5 (seq.unit e_1075))))
(assert (= a_1078 (seq.update a_1076 i6 (seq.unit e_1077))))
(assert (= a_1080 (seq.update a_1078 i4 (seq.unit e_1079))))
(assert (= a_1082 (seq.update a_1080 i3 (seq.unit e_1081))))
(assert (= a_1084 (seq.update a_1082 i0 (seq.unit e_1083))))
(assert (= a_1086 (seq.update a_1084 i9 (seq.unit e_1085))))
(assert (= a_1088 (seq.update a_1086 i3 (seq.unit e_1087))))
(assert (= e_1011 (seq.nth a1 i9)))
(assert (= e_1013 (seq.nth a1 i3)))
(assert (= e_1015 (seq.nth a_1014 i7)))
(assert (= e_1017 (seq.nth a_1014 i2)))
(assert (= e_1019 (seq.nth a_1018 i2)))
(assert (= e_1021 (seq.nth a_1018 i0)))
(assert (= e_1023 (seq.nth a_1022 i9)))
(assert (= e_1025 (seq.nth a_1022 i8)))
(assert (= e_1027 (seq.nth a_1026 i3)))
(assert (= e_1029 (seq.nth a_1026 i6)))
(assert (= e_1031 (seq.nth a_1030 i9)))
(assert (= e_1033 (seq.nth a_1030 i7)))
(assert (= e_1035 (seq.nth a_1034 i1)))
(assert (= e_1037 (seq.nth a_1034 i5)))
(assert (= e_1039 (seq.nth a_1038 i4)))
(assert (= e_1041 (seq.nth a_1038 i6)))
(assert (= e_1043 (seq.nth a_1042 i3)))
(assert (= e_1045 (seq.nth a_1042 i0)))
(assert (= e_1047 (seq.nth a_1046 i3)))
(assert (= e_1049 (seq.nth a_1046 i8)))
(assert (= e_1053 (seq.nth a_1052 i7)))
(assert (= e_1055 (seq.nth a_1052 i2)))
(assert (= e_1057 (seq.nth a_1056 i0)))
(assert (= e_1059 (seq.nth a_1056 i2)))
(assert (= e_1061 (seq.nth a_1060 i8)))
(assert (= e_1063 (seq.nth a_1060 i9)))
(assert (= e_1065 (seq.nth a_1064 i3)))
(assert (= e_1067 (seq.nth a_1064 i6)))
(assert (= e_1069 (seq.nth a_1068 i7)))
(assert (= e_1071 (seq.nth a_1068 i9)))
(assert (= e_1073 (seq.nth a_1072 i5)))
(assert (= e_1075 (seq.nth a_1072 i1)))
(assert (= e_1077 (seq.nth a_1076 i4)))
(assert (= e_1079 (seq.nth a_1076 i6)))
(assert (= e_1081 (seq.nth a_1080 i0)))
(assert (= e_1083 (seq.nth a_1080 i3)))
(assert (= e_1085 (seq.nth a_1084 i3)))
(assert (= e_1087 (seq.nth a_1084 i9)))
(assert (not (= a_1050 a_1088)))
(check-sat)
(exit)
