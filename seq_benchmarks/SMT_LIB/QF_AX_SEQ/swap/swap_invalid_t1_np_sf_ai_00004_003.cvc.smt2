(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)

(declare-sort Element 0)
(declare-fun a_306 () (Seq Element))
(declare-fun a_307 () (Seq Element))
(declare-fun a_309 () (Seq Element))
(declare-fun a_311 () (Seq Element))
(declare-fun a_313 () (Seq Element))
(declare-fun a_314 () (Seq Element))
(declare-fun a_316 () (Seq Element))
(declare-fun a_318 () (Seq Element))
(declare-fun a_319 () (Seq Element))
(declare-fun a_320 () (Seq Element))
(declare-fun a_322 () (Seq Element))
(declare-fun a_323 () (Seq Element))
(declare-fun a_325 () (Seq Element))
(declare-fun a_326 () (Seq Element))
(declare-fun e_305 () Element)
(declare-fun e_308 () Element)
(declare-fun e_310 () Element)
(declare-fun e_312 () Element)
(declare-fun e_315 () Element)
(declare-fun e_317 () Element)
(declare-fun e_321 () Element)
(declare-fun e_324 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i3 () Int)
(assert (= a_306 (seq.update a1 i3 (seq.unit e_305))))
(assert (= a_307 (seq.update a_306 i3 (seq.unit e_305))))
(assert (= a_309 (seq.update a_307 i0 (seq.unit e_308))))
(assert (= a_311 (seq.update a_309 i3 (seq.unit e_310))))
(assert (= a_313 (seq.update a_311 i3 (seq.unit e_312))))
(assert (= a_314 (seq.update a_313 i3 (seq.unit e_312))))
(assert (= a_316 (seq.update a_314 i0 (seq.unit e_315))))
(assert (= a_318 (seq.update a_316 i1 (seq.unit e_317))))
(assert (= a_319 (seq.update a_307 i3 (seq.unit e_310))))
(assert (= a_320 (seq.update a_319 i0 (seq.unit e_308))))
(assert (= a_322 (seq.update a_320 i3 (seq.unit e_321))))
(assert (= a_323 (seq.update a_322 i3 (seq.unit e_321))))
(assert (= a_325 (seq.update a_323 i1 (seq.unit e_324))))
(assert (= a_326 (seq.update a_325 i1 (seq.unit e_324))))
(assert (= e_305 (seq.nth a1 i3)))
(assert (= e_308 (seq.nth a_307 i3)))
(assert (= e_310 (seq.nth a_307 i0)))
(assert (= e_312 (seq.nth a_311 i3)))
(assert (= e_315 (seq.nth a_314 i1)))
(assert (= e_317 (seq.nth a_314 i0)))
(assert (= e_321 (seq.nth a_320 i3)))
(assert (= e_324 (seq.nth a_323 i1)))
(assert (not (= a_318 a_326)))
(check-sat)
(exit)
