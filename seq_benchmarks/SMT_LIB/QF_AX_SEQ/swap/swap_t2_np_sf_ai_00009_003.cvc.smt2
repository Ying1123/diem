(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)

(declare-sort Element 0)
(declare-fun a_803 () (Seq Element))
(declare-fun a_805 () (Seq Element))
(declare-fun a_807 () (Seq Element))
(declare-fun a_809 () (Seq Element))
(declare-fun a_811 () (Seq Element))
(declare-fun a_813 () (Seq Element))
(declare-fun a_815 () (Seq Element))
(declare-fun a_817 () (Seq Element))
(declare-fun a_819 () (Seq Element))
(declare-fun a_821 () (Seq Element))
(declare-fun a_823 () (Seq Element))
(declare-fun a_825 () (Seq Element))
(declare-fun a_827 () (Seq Element))
(declare-fun a_829 () (Seq Element))
(declare-fun a_831 () (Seq Element))
(declare-fun a_833 () (Seq Element))
(declare-fun a_835 () (Seq Element))
(declare-fun a_837 () (Seq Element))
(declare-fun a_838 () (Seq Element))
(declare-fun a_839 () (Seq Element))
(declare-fun a_841 () (Seq Element))
(declare-fun a_843 () (Seq Element))
(declare-fun a_845 () (Seq Element))
(declare-fun a_847 () (Seq Element))
(declare-fun a_849 () (Seq Element))
(declare-fun a_851 () (Seq Element))
(declare-fun a_853 () (Seq Element))
(declare-fun a_855 () (Seq Element))
(declare-fun a_857 () (Seq Element))
(declare-fun a_859 () (Seq Element))
(declare-fun a_861 () (Seq Element))
(declare-fun a_863 () (Seq Element))
(declare-fun a_865 () (Seq Element))
(declare-fun a_867 () (Seq Element))
(declare-fun a_869 () (Seq Element))
(declare-fun a_871 () (Seq Element))
(declare-fun e_802 () Element)
(declare-fun e_804 () Element)
(declare-fun e_806 () Element)
(declare-fun e_808 () Element)
(declare-fun e_810 () Element)
(declare-fun e_812 () Element)
(declare-fun e_814 () Element)
(declare-fun e_816 () Element)
(declare-fun e_818 () Element)
(declare-fun e_820 () Element)
(declare-fun e_822 () Element)
(declare-fun e_824 () Element)
(declare-fun e_826 () Element)
(declare-fun e_828 () Element)
(declare-fun e_830 () Element)
(declare-fun e_832 () Element)
(declare-fun e_834 () Element)
(declare-fun e_836 () Element)
(declare-fun e_840 () Element)
(declare-fun e_842 () Element)
(declare-fun e_844 () Element)
(declare-fun e_846 () Element)
(declare-fun e_848 () Element)
(declare-fun e_850 () Element)
(declare-fun e_852 () Element)
(declare-fun e_854 () Element)
(declare-fun e_856 () Element)
(declare-fun e_858 () Element)
(declare-fun e_860 () Element)
(declare-fun e_862 () Element)
(declare-fun e_864 () Element)
(declare-fun e_866 () Element)
(declare-fun e_868 () Element)
(declare-fun e_870 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(assert (= a_803 (seq.update a1 i4 (seq.unit e_802))))
(assert (= a_805 (seq.update a_803 i3 (seq.unit e_804))))
(assert (= a_807 (seq.update a_805 i1 (seq.unit e_806))))
(assert (= a_809 (seq.update a_807 i6 (seq.unit e_808))))
(assert (= a_811 (seq.update a_809 i6 (seq.unit e_810))))
(assert (= a_813 (seq.update a_811 i3 (seq.unit e_812))))
(assert (= a_815 (seq.update a_813 i3 (seq.unit e_814))))
(assert (= a_817 (seq.update a_815 i7 (seq.unit e_816))))
(assert (= a_819 (seq.update a_817 i5 (seq.unit e_818))))
(assert (= a_821 (seq.update a_819 i6 (seq.unit e_820))))
(assert (= a_823 (seq.update a_821 i3 (seq.unit e_822))))
(assert (= a_825 (seq.update a_823 i0 (seq.unit e_824))))
(assert (= a_827 (seq.update a_825 i0 (seq.unit e_826))))
(assert (= a_829 (seq.update a_827 i6 (seq.unit e_828))))
(assert (= a_831 (seq.update a_829 i5 (seq.unit e_830))))
(assert (= a_833 (seq.update a_831 i4 (seq.unit e_832))))
(assert (= a_835 (seq.update a_833 i2 (seq.unit e_834))))
(assert (= a_837 (seq.update a_835 i5 (seq.unit e_836))))
(assert (= a_838 (seq.update a1 i3 (seq.unit e_804))))
(assert (= a_839 (seq.update a_838 i4 (seq.unit e_802))))
(assert (= a_841 (seq.update a_839 i6 (seq.unit e_840))))
(assert (= a_843 (seq.update a_841 i1 (seq.unit e_842))))
(assert (= a_845 (seq.update a_843 i6 (seq.unit e_844))))
(assert (= a_847 (seq.update a_845 i3 (seq.unit e_846))))
(assert (= a_849 (seq.update a_847 i7 (seq.unit e_848))))
(assert (= a_851 (seq.update a_849 i3 (seq.unit e_850))))
(assert (= a_853 (seq.update a_851 i5 (seq.unit e_852))))
(assert (= a_855 (seq.update a_853 i6 (seq.unit e_854))))
(assert (= a_857 (seq.update a_855 i3 (seq.unit e_856))))
(assert (= a_859 (seq.update a_857 i0 (seq.unit e_858))))
(assert (= a_861 (seq.update a_859 i0 (seq.unit e_860))))
(assert (= a_863 (seq.update a_861 i6 (seq.unit e_862))))
(assert (= a_865 (seq.update a_863 i5 (seq.unit e_864))))
(assert (= a_867 (seq.update a_865 i4 (seq.unit e_866))))
(assert (= a_869 (seq.update a_867 i2 (seq.unit e_868))))
(assert (= a_871 (seq.update a_869 i5 (seq.unit e_870))))
(assert (= e_802 (seq.nth a1 i3)))
(assert (= e_804 (seq.nth a1 i4)))
(assert (= e_806 (seq.nth a_805 i6)))
(assert (= e_808 (seq.nth a_805 i1)))
(assert (= e_810 (seq.nth a_809 i3)))
(assert (= e_812 (seq.nth a_809 i6)))
(assert (= e_814 (seq.nth a_813 i7)))
(assert (= e_816 (seq.nth a_813 i3)))
(assert (= e_818 (seq.nth a_817 i6)))
(assert (= e_820 (seq.nth a_817 i5)))
(assert (= e_822 (seq.nth a_821 i0)))
(assert (= e_824 (seq.nth a_821 i3)))
(assert (= e_826 (seq.nth a_825 i6)))
(assert (= e_828 (seq.nth a_825 i0)))
(assert (= e_830 (seq.nth a_829 i4)))
(assert (= e_832 (seq.nth a_829 i5)))
(assert (= e_834 (seq.nth a_833 i5)))
(assert (= e_836 (seq.nth a_833 i2)))
(assert (= e_840 (seq.nth a_839 i1)))
(assert (= e_842 (seq.nth a_839 i6)))
(assert (= e_844 (seq.nth a_843 i3)))
(assert (= e_846 (seq.nth a_843 i6)))
(assert (= e_848 (seq.nth a_847 i3)))
(assert (= e_850 (seq.nth a_847 i7)))
(assert (= e_852 (seq.nth a_851 i6)))
(assert (= e_854 (seq.nth a_851 i5)))
(assert (= e_856 (seq.nth a_855 i0)))
(assert (= e_858 (seq.nth a_855 i3)))
(assert (= e_860 (seq.nth a_859 i6)))
(assert (= e_862 (seq.nth a_859 i0)))
(assert (= e_864 (seq.nth a_863 i4)))
(assert (= e_866 (seq.nth a_863 i5)))
(assert (= e_868 (seq.nth a_867 i5)))
(assert (= e_870 (seq.nth a_867 i2)))
(assert (not (= a_837 a_871)))
(check-sat)
(exit)
