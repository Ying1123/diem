(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)

(declare-sort Element 0)
(declare-fun a_270 () (Seq Element))
(declare-fun a_272 () (Seq Element))
(declare-fun a_274 () (Seq Element))
(declare-fun a_276 () (Seq Element))
(declare-fun a_278 () (Seq Element))
(declare-fun a_280 () (Seq Element))
(declare-fun a_282 () (Seq Element))
(declare-fun a_283 () (Seq Element))
(declare-fun a_285 () (Seq Element))
(declare-fun a_287 () (Seq Element))
(declare-fun a_289 () (Seq Element))
(declare-fun a_291 () (Seq Element))
(declare-fun a_293 () (Seq Element))
(declare-fun a_295 () (Seq Element))
(declare-fun a_296 () (Seq Element))
(declare-fun a_297 () (Seq Element))
(declare-fun a_299 () (Seq Element))
(declare-fun a_301 () (Seq Element))
(declare-fun a_303 () (Seq Element))
(declare-fun a_304 () (Seq Element))
(declare-fun a_306 () (Seq Element))
(declare-fun a_308 () (Seq Element))
(declare-fun a_310 () (Seq Element))
(declare-fun a_312 () (Seq Element))
(declare-fun a_314 () (Seq Element))
(declare-fun a_316 () (Seq Element))
(declare-fun e_269 () Element)
(declare-fun e_271 () Element)
(declare-fun e_273 () Element)
(declare-fun e_275 () Element)
(declare-fun e_277 () Element)
(declare-fun e_279 () Element)
(declare-fun e_281 () Element)
(declare-fun e_284 () Element)
(declare-fun e_286 () Element)
(declare-fun e_288 () Element)
(declare-fun e_290 () Element)
(declare-fun e_292 () Element)
(declare-fun e_294 () Element)
(declare-fun e_298 () Element)
(declare-fun e_300 () Element)
(declare-fun e_302 () Element)
(declare-fun e_305 () Element)
(declare-fun e_307 () Element)
(declare-fun e_309 () Element)
(declare-fun e_311 () Element)
(declare-fun e_313 () Element)
(declare-fun e_315 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(assert (= a_270 (seq.update a1 i6 (seq.unit e_269))))
(assert (= a_272 (seq.update a_270 i3 (seq.unit e_271))))
(assert (= a_274 (seq.update a_272 i1 (seq.unit e_273))))
(assert (= a_276 (seq.update a_274 i4 (seq.unit e_275))))
(assert (= a_278 (seq.update a_276 i2 (seq.unit e_277))))
(assert (= a_280 (seq.update a_278 i6 (seq.unit e_279))))
(assert (= a_282 (seq.update a_280 i4 (seq.unit e_281))))
(assert (= a_283 (seq.update a_282 i4 (seq.unit e_281))))
(assert (= a_285 (seq.update a_283 i0 (seq.unit e_284))))
(assert (= a_287 (seq.update a_285 i2 (seq.unit e_286))))
(assert (= a_289 (seq.update a_287 i2 (seq.unit e_288))))
(assert (= a_291 (seq.update a_289 i6 (seq.unit e_290))))
(assert (= a_293 (seq.update a_291 i5 (seq.unit e_292))))
(assert (= a_295 (seq.update a_293 i3 (seq.unit e_294))))
(assert (= a_296 (seq.update a_272 i4 (seq.unit e_275))))
(assert (= a_297 (seq.update a_296 i1 (seq.unit e_273))))
(assert (= a_299 (seq.update a_297 i6 (seq.unit e_298))))
(assert (= a_301 (seq.update a_299 i2 (seq.unit e_300))))
(assert (= a_303 (seq.update a_301 i4 (seq.unit e_302))))
(assert (= a_304 (seq.update a_303 i4 (seq.unit e_302))))
(assert (= a_306 (seq.update a_304 i0 (seq.unit e_305))))
(assert (= a_308 (seq.update a_306 i2 (seq.unit e_307))))
(assert (= a_310 (seq.update a_308 i6 (seq.unit e_309))))
(assert (= a_312 (seq.update a_310 i2 (seq.unit e_311))))
(assert (= a_314 (seq.update a_312 i5 (seq.unit e_313))))
(assert (= a_316 (seq.update a_314 i3 (seq.unit e_315))))
(assert (= e_269 (seq.nth a1 i3)))
(assert (= e_271 (seq.nth a1 i6)))
(assert (= e_273 (seq.nth a_272 i4)))
(assert (= e_275 (seq.nth a_272 i1)))
(assert (= e_277 (seq.nth a_276 i6)))
(assert (= e_279 (seq.nth a_276 i2)))
(assert (= e_281 (seq.nth a_280 i4)))
(assert (= e_284 (seq.nth a_283 i2)))
(assert (= e_286 (seq.nth a_283 i0)))
(assert (= e_288 (seq.nth a_287 i6)))
(assert (= e_290 (seq.nth a_287 i2)))
(assert (= e_292 (seq.nth a_291 i3)))
(assert (= e_294 (seq.nth a_291 i5)))
(assert (= e_298 (seq.nth a_297 i2)))
(assert (= e_300 (seq.nth a_297 i6)))
(assert (= e_302 (seq.nth a_301 i4)))
(assert (= e_305 (seq.nth a_304 i2)))
(assert (= e_307 (seq.nth a_304 i0)))
(assert (= e_309 (seq.nth a_308 i2)))
(assert (= e_311 (seq.nth a_308 i6)))
(assert (= e_313 (seq.nth a_312 i3)))
(assert (= e_315 (seq.nth a_312 i5)))
(assert (not (= a_295 a_316)))
(check-sat)
(exit)
