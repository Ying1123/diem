(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)

(declare-sort Element 0)
(declare-fun a_478 () (Seq Element))
(declare-fun a_479 () (Seq Element))
(declare-fun a_480 () (Seq Element))
(declare-fun a_481 () (Seq Element))
(declare-fun a_482 () (Seq Element))
(declare-fun a_483 () (Seq Element))
(declare-fun a_484 () (Seq Element))
(declare-fun a_485 () (Seq Element))
(declare-fun a_486 () (Seq Element))
(declare-fun a_487 () (Seq Element))
(declare-fun a_488 () (Seq Element))
(declare-fun a_489 () (Seq Element))
(declare-fun a_490 () (Seq Element))
(declare-fun a_491 () (Seq Element))
(declare-fun a_492 () (Seq Element))
(declare-fun a_493 () (Seq Element))
(declare-fun a_494 () (Seq Element))
(declare-fun a_495 () (Seq Element))
(declare-fun a_496 () (Seq Element))
(declare-fun a_497 () (Seq Element))
(declare-fun a_498 () (Seq Element))
(declare-fun a_499 () (Seq Element))
(declare-fun a_500 () (Seq Element))
(declare-fun a_501 () (Seq Element))
(declare-fun a_502 () (Seq Element))
(declare-fun a_503 () (Seq Element))
(declare-fun a_504 () (Seq Element))
(declare-fun a_505 () (Seq Element))
(declare-fun a_506 () (Seq Element))
(declare-fun a_507 () (Seq Element))
(declare-fun a_508 () (Seq Element))
(declare-fun a_509 () (Seq Element))
(declare-fun a_510 () (Seq Element))
(declare-fun a_511 () (Seq Element))
(declare-fun a_512 () (Seq Element))
(declare-fun a_513 () (Seq Element))
(declare-fun a_514 () (Seq Element))
(declare-fun a_515 () (Seq Element))
(declare-fun a_516 () (Seq Element))
(declare-fun a_517 () (Seq Element))
(declare-fun a1 () (Seq Element))
(declare-fun e1 () Element)
(declare-fun e10 () Element)
(declare-fun e11 () Element)
(declare-fun e12 () Element)
(declare-fun e13 () Element)
(declare-fun e14 () Element)
(declare-fun e15 () Element)
(declare-fun e16 () Element)
(declare-fun e17 () Element)
(declare-fun e18 () Element)
(declare-fun e19 () Element)
(declare-fun e2 () Element)
(declare-fun e20 () Element)
(declare-fun e3 () Element)
(declare-fun e4 () Element)
(declare-fun e5 () Element)
(declare-fun e6 () Element)
(declare-fun e7 () Element)
(declare-fun e8 () Element)
(declare-fun e9 () Element)
(declare-fun i1 () Int)
(declare-fun i10 () Int)
(declare-fun i11 () Int)
(declare-fun i12 () Int)
(declare-fun i13 () Int)
(declare-fun i14 () Int)
(declare-fun i15 () Int)
(declare-fun i16 () Int)
(declare-fun i17 () Int)
(declare-fun i18 () Int)
(declare-fun i19 () Int)
(declare-fun i2 () Int)
(declare-fun i20 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(declare-fun i8 () Int)
(declare-fun i9 () Int)
(assert (= a_478 (seq.update a1 i1 (seq.unit e1))))
(assert (= a_479 (seq.update a_478 i2 (seq.unit e2))))
(assert (= a_480 (seq.update a_479 i3 (seq.unit e3))))
(assert (= a_481 (seq.update a_480 i4 (seq.unit e4))))
(assert (= a_482 (seq.update a_481 i5 (seq.unit e5))))
(assert (= a_483 (seq.update a_482 i6 (seq.unit e6))))
(assert (= a_484 (seq.update a_483 i7 (seq.unit e7))))
(assert (= a_485 (seq.update a_484 i8 (seq.unit e8))))
(assert (= a_486 (seq.update a_485 i9 (seq.unit e9))))
(assert (= a_487 (seq.update a_486 i10 (seq.unit e10))))
(assert (= a_488 (seq.update a_487 i11 (seq.unit e11))))
(assert (= a_489 (seq.update a_488 i12 (seq.unit e12))))
(assert (= a_490 (seq.update a_489 i13 (seq.unit e13))))
(assert (= a_491 (seq.update a_490 i14 (seq.unit e14))))
(assert (= a_492 (seq.update a_491 i15 (seq.unit e15))))
(assert (= a_493 (seq.update a_492 i16 (seq.unit e16))))
(assert (= a_494 (seq.update a_493 i17 (seq.unit e17))))
(assert (= a_495 (seq.update a_494 i18 (seq.unit e18))))
(assert (= a_496 (seq.update a_495 i19 (seq.unit e19))))
(assert (= a_497 (seq.update a_496 i20 (seq.unit e20))))
(assert (= a_498 (seq.update a1 i6 (seq.unit e6))))
(assert (= a_499 (seq.update a_498 i16 (seq.unit e16))))
(assert (= a_500 (seq.update a_499 i14 (seq.unit e14))))
(assert (= a_501 (seq.update a_500 i13 (seq.unit e13))))
(assert (= a_502 (seq.update a_501 i2 (seq.unit e2))))
(assert (= a_503 (seq.update a_502 i18 (seq.unit e18))))
(assert (= a_504 (seq.update a_503 i19 (seq.unit e19))))
(assert (= a_505 (seq.update a_504 i12 (seq.unit e12))))
(assert (= a_506 (seq.update a_505 i11 (seq.unit e11))))
(assert (= a_507 (seq.update a_506 i7 (seq.unit e7))))
(assert (= a_508 (seq.update a_507 i4 (seq.unit e4))))
(assert (= a_509 (seq.update a_508 i9 (seq.unit e9))))
(assert (= a_510 (seq.update a_509 i5 (seq.unit e5))))
(assert (= a_511 (seq.update a_510 i20 (seq.unit e20))))
(assert (= a_512 (seq.update a_511 i1 (seq.unit e1))))
(assert (= a_513 (seq.update a_512 i10 (seq.unit e10))))
(assert (= a_514 (seq.update a_513 i15 (seq.unit e15))))
(assert (= a_515 (seq.update a_514 i17 (seq.unit e17))))
(assert (= a_516 (seq.update a_515 i8 (seq.unit e8))))
(assert (= a_517 (seq.update a_516 i3 (seq.unit e3))))
(assert (not (= i19 i20)))
(assert (not (= i18 i20)))
(assert (not (= i18 i19)))
(assert (not (= i17 i20)))
(assert (not (= i17 i19)))
(assert (not (= i17 i18)))
(assert (not (= i16 i20)))
(assert (not (= i16 i19)))
(assert (not (= i16 i18)))
(assert (not (= i16 i17)))
(assert (not (= i15 i20)))
(assert (not (= i15 i19)))
(assert (not (= i15 i18)))
(assert (not (= i15 i17)))
(assert (not (= i15 i16)))
(assert (not (= i14 i20)))
(assert (not (= i14 i19)))
(assert (not (= i14 i18)))
(assert (not (= i14 i17)))
(assert (not (= i14 i16)))
(assert (not (= i14 i15)))
(assert (not (= i13 i20)))
(assert (not (= i13 i19)))
(assert (not (= i13 i18)))
(assert (not (= i13 i17)))
(assert (not (= i13 i16)))
(assert (not (= i13 i15)))
(assert (not (= i13 i14)))
(assert (not (= i12 i20)))
(assert (not (= i12 i19)))
(assert (not (= i12 i18)))
(assert (not (= i12 i17)))
(assert (not (= i12 i16)))
(assert (not (= i12 i15)))
(assert (not (= i12 i14)))
(assert (not (= i12 i13)))
(assert (not (= i11 i20)))
(assert (not (= i11 i19)))
(assert (not (= i11 i18)))
(assert (not (= i11 i17)))
(assert (not (= i11 i16)))
(assert (not (= i11 i15)))
(assert (not (= i11 i14)))
(assert (not (= i11 i13)))
(assert (not (= i11 i12)))
(assert (not (= i10 i20)))
(assert (not (= i10 i19)))
(assert (not (= i10 i18)))
(assert (not (= i10 i17)))
(assert (not (= i10 i16)))
(assert (not (= i10 i15)))
(assert (not (= i10 i14)))
(assert (not (= i10 i13)))
(assert (not (= i10 i12)))
(assert (not (= i10 i11)))
(assert (not (= i9 i20)))
(assert (not (= i9 i19)))
(assert (not (= i9 i18)))
(assert (not (= i9 i17)))
(assert (not (= i9 i16)))
(assert (not (= i9 i15)))
(assert (not (= i9 i14)))
(assert (not (= i9 i13)))
(assert (not (= i9 i12)))
(assert (not (= i9 i11)))
(assert (not (= i9 i10)))
(assert (not (= i8 i20)))
(assert (not (= i8 i19)))
(assert (not (= i8 i18)))
(assert (not (= i8 i17)))
(assert (not (= i8 i16)))
(assert (not (= i8 i15)))
(assert (not (= i8 i14)))
(assert (not (= i8 i13)))
(assert (not (= i8 i12)))
(assert (not (= i8 i11)))
(assert (not (= i8 i10)))
(assert (not (= i8 i9)))
(assert (not (= i7 i20)))
(assert (not (= i7 i19)))
(assert (not (= i7 i18)))
(assert (not (= i7 i17)))
(assert (not (= i7 i16)))
(assert (not (= i7 i15)))
(assert (not (= i7 i14)))
(assert (not (= i7 i13)))
(assert (not (= i7 i12)))
(assert (not (= i7 i11)))
(assert (not (= i7 i10)))
(assert (not (= i7 i9)))
(assert (not (= i7 i8)))
(assert (not (= i6 i20)))
(assert (not (= i6 i19)))
(assert (not (= i6 i18)))
(assert (not (= i6 i17)))
(assert (not (= i6 i16)))
(assert (not (= i6 i15)))
(assert (not (= i6 i14)))
(assert (not (= i6 i13)))
(assert (not (= i6 i12)))
(assert (not (= i6 i11)))
(assert (not (= i6 i10)))
(assert (not (= i6 i9)))
(assert (not (= i6 i8)))
(assert (not (= i6 i7)))
(assert (not (= i5 i20)))
(assert (not (= i5 i19)))
(assert (not (= i5 i18)))
(assert (not (= i5 i17)))
(assert (not (= i5 i16)))
(assert (not (= i5 i15)))
(assert (not (= i5 i14)))
(assert (not (= i5 i13)))
(assert (not (= i5 i12)))
(assert (not (= i5 i11)))
(assert (not (= i5 i10)))
(assert (not (= i5 i9)))
(assert (not (= i5 i8)))
(assert (not (= i5 i7)))
(assert (not (= i5 i6)))
(assert (not (= i4 i20)))
(assert (not (= i4 i19)))
(assert (not (= i4 i18)))
(assert (not (= i4 i17)))
(assert (not (= i4 i16)))
(assert (not (= i4 i15)))
(assert (not (= i4 i14)))
(assert (not (= i4 i13)))
(assert (not (= i4 i12)))
(assert (not (= i4 i11)))
(assert (not (= i4 i10)))
(assert (not (= i4 i9)))
(assert (not (= i4 i8)))
(assert (not (= i4 i7)))
(assert (not (= i4 i6)))
(assert (not (= i4 i5)))
(assert (not (= i3 i20)))
(assert (not (= i3 i19)))
(assert (not (= i3 i18)))
(assert (not (= i3 i17)))
(assert (not (= i3 i16)))
(assert (not (= i3 i15)))
(assert (not (= i3 i14)))
(assert (not (= i3 i13)))
(assert (not (= i3 i12)))
(assert (not (= i3 i11)))
(assert (not (= i3 i10)))
(assert (not (= i3 i9)))
(assert (not (= i3 i8)))
(assert (not (= i3 i7)))
(assert (not (= i3 i6)))
(assert (not (= i3 i5)))
(assert (not (= i3 i4)))
(assert (not (= i2 i20)))
(assert (not (= i2 i19)))
(assert (not (= i2 i18)))
(assert (not (= i2 i17)))
(assert (not (= i2 i16)))
(assert (not (= i2 i15)))
(assert (not (= i2 i14)))
(assert (not (= i2 i13)))
(assert (not (= i2 i12)))
(assert (not (= i2 i11)))
(assert (not (= i2 i10)))
(assert (not (= i2 i9)))
(assert (not (= i2 i8)))
(assert (not (= i2 i7)))
(assert (not (= i2 i6)))
(assert (not (= i2 i5)))
(assert (not (= i2 i4)))
(assert (not (= i2 i3)))
(assert (not (= i1 i20)))
(assert (not (= i1 i19)))
(assert (not (= i1 i18)))
(assert (not (= i1 i17)))
(assert (not (= i1 i16)))
(assert (not (= i1 i15)))
(assert (not (= i1 i14)))
(assert (not (= i1 i13)))
(assert (not (= i1 i12)))
(assert (not (= i1 i11)))
(assert (not (= i1 i10)))
(assert (not (= i1 i9)))
(assert (not (= i1 i8)))
(assert (not (= i1 i7)))
(assert (not (= i1 i6)))
(assert (not (= i1 i5)))
(assert (not (= i1 i4)))
(assert (not (= i1 i3)))
(assert (not (= i1 i2)))
(assert (not (= a_497 a_517)))
(check-sat)
(exit)
