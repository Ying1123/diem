(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)

(declare-sort Element 0)
(declare-fun a_1 () (Seq Element))
(declare-fun a_10 () (Seq Element))
(declare-fun a_12 () (Seq Element))
(declare-fun a_14 () (Seq Element))
(declare-fun a_16 () (Seq Element))
(declare-fun a_18 () (Seq Element))
(declare-fun a_2 () (Seq Element))
(declare-fun a_20 () (Seq Element))
(declare-fun a_22 () (Seq Element))
(declare-fun a_23 () (Seq Element))
(declare-fun a_24 () (Seq Element))
(declare-fun a_26 () (Seq Element))
(declare-fun a_28 () (Seq Element))
(declare-fun a_30 () (Seq Element))
(declare-fun a_32 () (Seq Element))
(declare-fun a_34 () (Seq Element))
(declare-fun a_36 () (Seq Element))
(declare-fun a_38 () (Seq Element))
(declare-fun a_4 () (Seq Element))
(declare-fun a_40 () (Seq Element))
(declare-fun a_6 () (Seq Element))
(declare-fun a_8 () (Seq Element))
(declare-fun e_0 () Element)
(declare-fun e_11 () Element)
(declare-fun e_13 () Element)
(declare-fun e_15 () Element)
(declare-fun e_17 () Element)
(declare-fun e_19 () Element)
(declare-fun e_21 () Element)
(declare-fun e_25 () Element)
(declare-fun e_27 () Element)
(declare-fun e_29 () Element)
(declare-fun e_3 () Element)
(declare-fun e_31 () Element)
(declare-fun e_33 () Element)
(declare-fun e_35 () Element)
(declare-fun e_37 () Element)
(declare-fun e_39 () Element)
(declare-fun e_5 () Element)
(declare-fun e_7 () Element)
(declare-fun e_9 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(assert (= a_1 (seq.update a1 i1 (seq.unit e_0))))
(assert (= a_10 (seq.update a_8 i2 (seq.unit e_9))))
(assert (= a_12 (seq.update a_10 i3 (seq.unit e_11))))
(assert (= a_14 (seq.update a_12 i1 (seq.unit e_13))))
(assert (= a_16 (seq.update a_14 i2 (seq.unit e_15))))
(assert (= a_18 (seq.update a_16 i4 (seq.unit e_17))))
(assert (= a_2 (seq.update a_1 i1 (seq.unit e_0))))
(assert (= a_20 (seq.update a_18 i0 (seq.unit e_19))))
(assert (= a_22 (seq.update a_20 i1 (seq.unit e_21))))
(assert (= a_23 (seq.update a_2 i2 (seq.unit e_5))))
(assert (= a_24 (seq.update a_23 i5 (seq.unit e_3))))
(assert (= a_26 (seq.update a_24 i4 (seq.unit e_25))))
(assert (= a_28 (seq.update a_26 i2 (seq.unit e_27))))
(assert (= a_30 (seq.update a_28 i1 (seq.unit e_29))))
(assert (= a_32 (seq.update a_30 i3 (seq.unit e_31))))
(assert (= a_34 (seq.update a_32 i2 (seq.unit e_33))))
(assert (= a_36 (seq.update a_34 i4 (seq.unit e_35))))
(assert (= a_38 (seq.update a_36 i0 (seq.unit e_37))))
(assert (= a_4 (seq.update a_2 i5 (seq.unit e_3))))
(assert (= a_40 (seq.update a_38 i1 (seq.unit e_39))))
(assert (= a_6 (seq.update a_4 i2 (seq.unit e_5))))
(assert (= a_8 (seq.update a_6 i4 (seq.unit e_7))))
(assert (= e_0 (seq.nth a1 i1)))
(assert (= e_11 (seq.nth a_10 i1)))
(assert (= e_13 (seq.nth a_10 i3)))
(assert (= e_15 (seq.nth a_14 i4)))
(assert (= e_17 (seq.nth a_14 i2)))
(assert (= e_19 (seq.nth a_18 i1)))
(assert (= e_21 (seq.nth a_18 i0)))
(assert (= e_25 (seq.nth a_24 i2)))
(assert (= e_27 (seq.nth a_24 i4)))
(assert (= e_29 (seq.nth a_28 i3)))
(assert (= e_3 (seq.nth a_2 i2)))
(assert (= e_31 (seq.nth a_28 i1)))
(assert (= e_33 (seq.nth a_32 i4)))
(assert (= e_35 (seq.nth a_32 i2)))
(assert (= e_37 (seq.nth a_36 i1)))
(assert (= e_39 (seq.nth a_36 i0)))
(assert (= e_5 (seq.nth a_2 i5)))
(assert (= e_7 (seq.nth a_6 i2)))
(assert (= e_9 (seq.nth a_6 i4)))
(assert (not (= a_22 a_40)))
(check-sat)
(exit)
