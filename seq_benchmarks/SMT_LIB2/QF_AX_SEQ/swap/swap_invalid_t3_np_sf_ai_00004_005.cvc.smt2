(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)

(declare-sort Element 0)
(declare-fun a_193 () (Seq Element))
(declare-fun a_195 () (Seq Element))
(declare-fun a_197 () (Seq Element))
(declare-fun a_199 () (Seq Element))
(declare-fun a_201 () (Seq Element))
(declare-fun a_203 () (Seq Element))
(declare-fun a_205 () (Seq Element))
(declare-fun a_207 () (Seq Element))
(declare-fun a_208 () (Seq Element))
(declare-fun a_209 () (Seq Element))
(declare-fun a_211 () (Seq Element))
(declare-fun a_213 () (Seq Element))
(declare-fun a_215 () (Seq Element))
(declare-fun a_217 () (Seq Element))
(declare-fun a_219 () (Seq Element))
(declare-fun a_220 () (Seq Element))
(declare-fun e_192 () Element)
(declare-fun e_194 () Element)
(declare-fun e_196 () Element)
(declare-fun e_198 () Element)
(declare-fun e_200 () Element)
(declare-fun e_202 () Element)
(declare-fun e_204 () Element)
(declare-fun e_206 () Element)
(declare-fun e_210 () Element)
(declare-fun e_212 () Element)
(declare-fun e_214 () Element)
(declare-fun e_216 () Element)
(declare-fun e_218 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(assert (= a_193 (seq.update a1 i0 (seq.unit e_192))))
(assert (= a_195 (seq.update a_193 i1 (seq.unit e_194))))
(assert (= a_197 (seq.update a_195 i1 (seq.unit e_196))))
(assert (= a_199 (seq.update a_197 i2 (seq.unit e_198))))
(assert (= a_201 (seq.update a_199 i3 (seq.unit e_200))))
(assert (= a_203 (seq.update a_201 i2 (seq.unit e_202))))
(assert (= a_205 (seq.update a_203 i2 (seq.unit e_204))))
(assert (= a_207 (seq.update a_205 i3 (seq.unit e_206))))
(assert (= a_208 (seq.update a1 i1 (seq.unit e_194))))
(assert (= a_209 (seq.update a_208 i0 (seq.unit e_192))))
(assert (= a_211 (seq.update a_209 i1 (seq.unit e_210))))
(assert (= a_213 (seq.update a_211 i2 (seq.unit e_212))))
(assert (= a_215 (seq.update a_213 i2 (seq.unit e_214))))
(assert (= a_217 (seq.update a_215 i3 (seq.unit e_216))))
(assert (= a_219 (seq.update a_217 i3 (seq.unit e_218))))
(assert (= a_220 (seq.update a_219 i3 (seq.unit e_218))))
(assert (= e_192 (seq.nth a1 i1)))
(assert (= e_194 (seq.nth a1 i0)))
(assert (= e_196 (seq.nth a_195 i2)))
(assert (= e_198 (seq.nth a_195 i1)))
(assert (= e_200 (seq.nth a_199 i2)))
(assert (= e_202 (seq.nth a_199 i3)))
(assert (= e_204 (seq.nth a_203 i3)))
(assert (= e_206 (seq.nth a_203 i2)))
(assert (= e_210 (seq.nth a_209 i2)))
(assert (= e_212 (seq.nth a_209 i1)))
(assert (= e_214 (seq.nth a_213 i3)))
(assert (= e_216 (seq.nth a_213 i2)))
(assert (= e_218 (seq.nth a_217 i3)))
(assert (not (= a_207 a_220)))
(check-sat)
(exit)
