(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)

(declare-sort Element 0)
(declare-fun a_380 () (Seq Element))
(declare-fun a_381 () (Seq Element))
(declare-fun a_383 () (Seq Element))
(declare-fun a_384 () (Seq Element))
(declare-fun a_386 () (Seq Element))
(declare-fun a_388 () (Seq Element))
(declare-fun a_390 () (Seq Element))
(declare-fun a_391 () (Seq Element))
(declare-fun a_393 () (Seq Element))
(declare-fun a_395 () (Seq Element))
(declare-fun a_396 () (Seq Element))
(declare-fun a_397 () (Seq Element))
(declare-fun a_399 () (Seq Element))
(declare-fun a_400 () (Seq Element))
(declare-fun a_402 () (Seq Element))
(declare-fun a_404 () (Seq Element))
(declare-fun e_379 () Element)
(declare-fun e_382 () Element)
(declare-fun e_385 () Element)
(declare-fun e_387 () Element)
(declare-fun e_389 () Element)
(declare-fun e_392 () Element)
(declare-fun e_394 () Element)
(declare-fun e_398 () Element)
(declare-fun e_401 () Element)
(declare-fun e_403 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(assert (= a_380 (seq.update a1 i3 (seq.unit e_379))))
(assert (= a_381 (seq.update a_380 i3 (seq.unit e_379))))
(assert (= a_383 (seq.update a_381 i1 (seq.unit e_382))))
(assert (= a_384 (seq.update a_383 i1 (seq.unit e_382))))
(assert (= a_386 (seq.update a_384 i4 (seq.unit e_385))))
(assert (= a_388 (seq.update a_386 i2 (seq.unit e_387))))
(assert (= a_390 (seq.update a_388 i3 (seq.unit e_389))))
(assert (= a_391 (seq.update a_390 i3 (seq.unit e_389))))
(assert (= a_393 (seq.update a_391 i1 (seq.unit e_392))))
(assert (= a_395 (seq.update a_393 i3 (seq.unit e_394))))
(assert (= a_396 (seq.update a_384 i2 (seq.unit e_387))))
(assert (= a_397 (seq.update a_396 i4 (seq.unit e_385))))
(assert (= a_399 (seq.update a_397 i3 (seq.unit e_398))))
(assert (= a_400 (seq.update a_399 i3 (seq.unit e_398))))
(assert (= a_402 (seq.update a_400 i3 (seq.unit e_401))))
(assert (= a_404 (seq.update a_402 i2 (seq.unit e_403))))
(assert (= e_379 (seq.nth a1 i3)))
(assert (= e_382 (seq.nth a_381 i1)))
(assert (= e_385 (seq.nth a_384 i2)))
(assert (= e_387 (seq.nth a_384 i4)))
(assert (= e_389 (seq.nth a_388 i3)))
(assert (= e_392 (seq.nth a_391 i3)))
(assert (= e_394 (seq.nth a_391 i1)))
(assert (= e_398 (seq.nth a_397 i3)))
(assert (= e_401 (seq.nth a_400 i2)))
(assert (= e_403 (seq.nth a_400 i3)))
(assert (not (= a_395 a_404)))
(check-sat)
(exit)
