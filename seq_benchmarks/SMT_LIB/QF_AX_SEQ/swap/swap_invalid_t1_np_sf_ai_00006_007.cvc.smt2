(set-info :smt-lib-version 2.6)
(set-logic ALL)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)

(declare-sort Element 0)
(declare-fun a_157 () (Seq Element))
(declare-fun a_159 () (Seq Element))
(declare-fun a_161 () (Seq Element))
(declare-fun a_163 () (Seq Element))
(declare-fun a_165 () (Seq Element))
(declare-fun a_167 () (Seq Element))
(declare-fun a_169 () (Seq Element))
(declare-fun a_171 () (Seq Element))
(declare-fun a_173 () (Seq Element))
(declare-fun a_175 () (Seq Element))
(declare-fun a_177 () (Seq Element))
(declare-fun a_179 () (Seq Element))
(declare-fun a_180 () (Seq Element))
(declare-fun a_181 () (Seq Element))
(declare-fun a_183 () (Seq Element))
(declare-fun a_185 () (Seq Element))
(declare-fun a_187 () (Seq Element))
(declare-fun a_189 () (Seq Element))
(declare-fun a_191 () (Seq Element))
(declare-fun a_193 () (Seq Element))
(declare-fun a_195 () (Seq Element))
(declare-fun a_197 () (Seq Element))
(declare-fun e_156 () Element)
(declare-fun e_158 () Element)
(declare-fun e_160 () Element)
(declare-fun e_162 () Element)
(declare-fun e_164 () Element)
(declare-fun e_166 () Element)
(declare-fun e_168 () Element)
(declare-fun e_170 () Element)
(declare-fun e_172 () Element)
(declare-fun e_174 () Element)
(declare-fun e_176 () Element)
(declare-fun e_178 () Element)
(declare-fun e_182 () Element)
(declare-fun e_184 () Element)
(declare-fun e_186 () Element)
(declare-fun e_188 () Element)
(declare-fun e_190 () Element)
(declare-fun e_192 () Element)
(declare-fun e_194 () Element)
(declare-fun e_196 () Element)
(declare-fun a1 () (Seq Element))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(assert (= a_157 (seq.update a1 i4 (seq.unit e_156))))
(assert (= a_159 (seq.update a_157 i5 (seq.unit e_158))))
(assert (= a_161 (seq.update a_159 i2 (seq.unit e_160))))
(assert (= a_163 (seq.update a_161 i0 (seq.unit e_162))))
(assert (= a_165 (seq.update a_163 i5 (seq.unit e_164))))
(assert (= a_167 (seq.update a_165 i0 (seq.unit e_166))))
(assert (= a_169 (seq.update a_167 i3 (seq.unit e_168))))
(assert (= a_171 (seq.update a_169 i1 (seq.unit e_170))))
(assert (= a_173 (seq.update a_171 i3 (seq.unit e_172))))
(assert (= a_175 (seq.update a_173 i4 (seq.unit e_174))))
(assert (= a_177 (seq.update a_175 i5 (seq.unit e_176))))
(assert (= a_179 (seq.update a_177 i0 (seq.unit e_178))))
(assert (= a_180 (seq.update a_159 i0 (seq.unit e_162))))
(assert (= a_181 (seq.update a_180 i2 (seq.unit e_160))))
(assert (= a_183 (seq.update a_181 i0 (seq.unit e_182))))
(assert (= a_185 (seq.update a_183 i5 (seq.unit e_184))))
(assert (= a_187 (seq.update a_185 i3 (seq.unit e_186))))
(assert (= a_189 (seq.update a_187 i1 (seq.unit e_188))))
(assert (= a_191 (seq.update a_189 i4 (seq.unit e_190))))
(assert (= a_193 (seq.update a_191 i3 (seq.unit e_192))))
(assert (= a_195 (seq.update a_193 i5 (seq.unit e_194))))
(assert (= a_197 (seq.update a_195 i1 (seq.unit e_196))))
(assert (= e_156 (seq.nth a1 i5)))
(assert (= e_158 (seq.nth a1 i4)))
(assert (= e_160 (seq.nth a_159 i0)))
(assert (= e_162 (seq.nth a_159 i2)))
(assert (= e_164 (seq.nth a_163 i0)))
(assert (= e_166 (seq.nth a_163 i5)))
(assert (= e_168 (seq.nth a_167 i1)))
(assert (= e_170 (seq.nth a_167 i3)))
(assert (= e_172 (seq.nth a_171 i4)))
(assert (= e_174 (seq.nth a_171 i3)))
(assert (= e_176 (seq.nth a_175 i0)))
(assert (= e_178 (seq.nth a_175 i5)))
(assert (= e_182 (seq.nth a_181 i5)))
(assert (= e_184 (seq.nth a_181 i0)))
(assert (= e_186 (seq.nth a_185 i1)))
(assert (= e_188 (seq.nth a_185 i3)))
(assert (= e_190 (seq.nth a_189 i3)))
(assert (= e_192 (seq.nth a_189 i4)))
(assert (= e_194 (seq.nth a_193 i1)))
(assert (= e_196 (seq.nth a_193 i5)))
(assert (not (= a_179 a_197)))
(check-sat)
(exit)
